{
    "properties": {
        "[plaintext]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.unicodeHighlight.ambiguousCharacters": false,
                "editor.unicodeHighlight.invisibleCharacters": false
            }
        },
        "[code-text-binary]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[Log]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[log]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[scminput]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[clojure]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "diffEditor.ignoreTrimWhitespace": false
            },
            "defaultValueSource": {
                "id": "vscode.clojure",
                "displayName": "Clojure Language Basics"
            }
        },
        "[coffeescript]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "diffEditor.ignoreTrimWhitespace": false
            },
            "defaultValueSource": {
                "id": "vscode.coffeescript",
                "displayName": "CoffeeScript Language Basics"
            }
        },
        "[csharp]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.maxTokenizationLineLength": 2500
            },
            "defaultValueSource": {
                "id": "vscode.csharp",
                "displayName": "C# Language Basics"
            }
        },
        "[css]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.suggest.insertMode": "replace"
            },
            "defaultValueSource": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            }
        },
        "[scss]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.suggest.insertMode": "replace"
            },
            "defaultValueSource": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            }
        },
        "[less]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.suggest.insertMode": "replace"
            },
            "defaultValueSource": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            }
        },
        "[dockerfile]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.quickSuggestions": {
                    "strings": true
                }
            },
            "defaultValueSource": {
                "id": "vscode.docker",
                "displayName": "Docker Language Basics"
            }
        },
        "[fsharp]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "diffEditor.ignoreTrimWhitespace": false
            },
            "defaultValueSource": {
                "id": "vscode.fsharp",
                "displayName": "F# Language Basics"
            }
        },
        "[git-commit]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.rulers": [
                    72
                ],
                "workbench.editor.restoreViewState": false
            },
            "defaultValueSource": {
                "id": "vscode.git",
                "displayName": "Git"
            }
        },
        "[git-rebase]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "workbench.editor.restoreViewState": false
            },
            "defaultValueSource": {
                "id": "vscode.git",
                "displayName": "Git"
            }
        },
        "[go]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.insertSpaces": false,
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": true
                }
            },
            "defaultValueSource": {
                "id": "golang.go",
                "displayName": "Go"
            }
        },
        "[html]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.suggest.insertMode": "replace",
                "editor.formatOnType": true
            },
            "defaultValueSource": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            }
        },
        "[handlebars]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.suggest.insertMode": "replace"
            },
            "defaultValueSource": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            }
        },
        "[javascript]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.maxTokenizationLineLength": 2500
            },
            "defaultValueSource": {
                "id": "vscode.javascript",
                "displayName": "JavaScript Language Basics"
            }
        },
        "[json]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.quickSuggestions": {
                    "strings": true
                },
                "editor.suggest.insertMode": "replace"
            },
            "defaultValueSource": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            }
        },
        "[jsonc]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.quickSuggestions": {
                    "strings": true
                },
                "editor.suggest.insertMode": "replace"
            },
            "defaultValueSource": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            }
        },
        "[makefile]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.insertSpaces": false
            },
            "defaultValueSource": {
                "id": "vscode.make",
                "displayName": "Make Language Basics"
            }
        },
        "[markdown]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.unicodeHighlight.ambiguousCharacters": false,
                "editor.unicodeHighlight.invisibleCharacters": false,
                "diffEditor.ignoreTrimWhitespace": false,
                "editor.wordWrap": "on",
                "editor.quickSuggestions": {
                    "comments": "off",
                    "strings": "off",
                    "other": "off"
                }
            },
            "defaultValueSource": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            }
        },
        "[jade]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "diffEditor.ignoreTrimWhitespace": false
            },
            "defaultValueSource": {
                "id": "vscode.pug",
                "displayName": "Pug Language Basics"
            }
        },
        "[python]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "diffEditor.ignoreTrimWhitespace": false,
                "gitlens.codeLens.symbolScopes": [
                    "!Module"
                ],
                "editor.formatOnType": true,
                "editor.wordBasedSuggestions": false
            },
            "defaultValueSource": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            }
        },
        "[search-result]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.lineNumbers": "off"
            },
            "defaultValueSource": {
                "id": "vscode.search-result",
                "displayName": "Search Result"
            }
        },
        "[shellscript]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "files.eol": "\n"
            },
            "defaultValueSource": {
                "id": "vscode.shellscript",
                "displayName": "Shell Script Language Basics"
            }
        },
        "[yaml]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.insertSpaces": true,
                "editor.tabSize": 2,
                "editor.autoIndent": "keep",
                "diffEditor.ignoreTrimWhitespace": false,
                "editor.quickSuggestions": {
                    "other": true,
                    "comments": false,
                    "strings": true
                }
            },
            "defaultValueSource": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            }
        },
        "[dockercompose]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.insertSpaces": true,
                "editor.tabSize": 2,
                "editor.autoIndent": "advanced"
            },
            "defaultValueSource": {
                "id": "vscode.yaml",
                "displayName": "YAML Language Basics"
            }
        },
        "[asciidoc]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.wordWrap": "on",
                "editor.quickSuggestions": false
            },
            "defaultValueSource": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            }
        },
        "[ansible]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[azure-pipelines]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[postcss]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[stylus]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[vue]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[latex]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.formatOnPaste": false,
                "editor.suggestSelection": "recentlyUsedByPrefix"
            },
            "defaultValueSource": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            }
        },
        "[nix]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.insertSpaces": true,
                "editor.tabSize": 2,
                "editor.defaultFormatter": "kamadorueda.alejandra",
                "editor.formatOnPaste": true,
                "editor.formatOnSave": true,
                "editor.formatOnType": false
            },
            "defaultValueSource": {
                "id": "kamadorueda.alejandra",
                "displayName": "Alejandra 💅"
            }
        },
        "[cpp]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.wordBasedSuggestions": false,
                "editor.suggest.insertMode": "replace",
                "editor.semanticHighlighting.enabled": true
            },
            "defaultValueSource": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            }
        },
        "[cuda-cpp]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.wordBasedSuggestions": false,
                "editor.suggest.insertMode": "replace",
                "editor.semanticHighlighting.enabled": true
            },
            "defaultValueSource": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            }
        },
        "[c]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.wordBasedSuggestions": false,
                "editor.suggest.insertMode": "replace",
                "editor.semanticHighlighting.enabled": true
            },
            "defaultValueSource": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            }
        },
        "[typst]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.wordWrap": "on",
                "editor.semanticHighlighting.enabled": true
            },
            "defaultValueSource": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            }
        },
        "[scala]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.suggestSelection": "first",
                "editor.formatOnPaste": true,
                "editor.formatOnType": true
            },
            "defaultValueSource": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            }
        },
        "[lua]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {
                "editor.quickSuggestions": {
                    "comments": "inline",
                    "other": "on",
                    "strings": "on"
                },
                "editor.semanticHighlighting.enabled": true
            },
            "defaultValueSource": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            }
        },
        "emmet.extensionsPath": {
            "type": "array",
            "items": {
                "type": "string",
                "markdownDescription": "A path containing Emmet syntaxProfiles and/or snippets."
            },
            "default": [],
            "scope": 6,
            "markdownDescription": "An array of paths, where each path can contain Emmet syntaxProfiles and/or snippet files.\nIn case of conflicts, the profiles/snippets of later paths will override those of earlier paths.\nSee https://code.visualstudio.com/docs/editor/emmet for more information and an example snippet file.",
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "php.validate.executablePath": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "description": "Points to the PHP executable.",
            "scope": 6,
            "source": {
                "id": "vscode.php-language-features",
                "displayName": "PHP Language Features"
            },
            "defaultDefaultValue": null,
            "restricted": true
        },
        "eslint.nodePath": {
            "scope": 6,
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "A path added to `NODE_PATH` when resolving the eslint module.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "eslint.runtime": {
            "scope": 6,
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "The location of the node binary to run ESLint under.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "eslint.execArgv": {
            "scope": 6,
            "anyOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "null"
                }
            ],
            "default": null,
            "markdownDescription": "Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "go.gopath": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "description": "Specify GOPATH here to override the one that is set as environment variable. The inferred GOPATH from workspace root overrides this, if go.inferGopath is set to true.",
            "scope": 6,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": null,
            "restricted": true
        },
        "go.toolsGopath": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "description": "Location to install the Go tools that the extension depends on if you don't want them in your GOPATH.",
            "scope": 6,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": null,
            "restricted": true
        },
        "go.goroot": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "description": "Specifies the GOROOT to use when no environment variable is set.",
            "scope": 6,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": null,
            "restricted": true
        },
        "go.logging.level": {
            "type": "string",
            "default": "error",
            "enum": [
                "off",
                "error",
                "info",
                "verbose"
            ],
            "description": "The logging level the extension logs at, defaults to 'error'",
            "scope": 6,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "go.toolsManagement.go": {
            "type": "string",
            "default": "",
            "description": "The path to the `go` binary used to install the Go tools. If it's empty, the same `go` binary chosen for the project will be used for tool installation.",
            "scope": 6,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "",
            "restricted": true
        },
        "direnv.extraEnv": {
            "type": "object",
            "scope": 6,
            "description": "Environment variables that will be set before running direnv",
            "additionalProperties": {
                "type": "string"
            },
            "source": {
                "id": "mkhl.direnv",
                "displayName": "direnv"
            },
            "default": {},
            "restricted": false
        },
        "direnv.path.executable": {
            "type": "string",
            "default": "direnv",
            "scope": 6,
            "description": "Path to the direnv executable",
            "source": {
                "id": "mkhl.direnv",
                "displayName": "direnv"
            },
            "defaultDefaultValue": "direnv",
            "restricted": false
        },
        "python.activeStateToolPath": {
            "default": "state",
            "description": "Path to the State Tool executable for ActiveState runtimes (version 0.36+).",
            "scope": 6,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "state",
            "restricted": false
        },
        "python.createEnvironment.contentButton": {
            "default": "show",
            "markdownDescription": "Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.",
            "scope": 6,
            "type": "string",
            "enum": [
                "show",
                "hide"
            ],
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "show",
            "restricted": false
        },
        "python.defaultInterpreterPath": {
            "default": "python",
            "markdownDescription": "Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used",
            "scope": 6,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "python",
            "restricted": false
        },
        "python.formatting.autopep8Path": {
            "default": "autopep8",
            "description": "Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Autopep8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.autopep8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Autopep8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "autopep8",
            "restricted": false
        },
        "python.formatting.blackPath": {
            "default": "black",
            "description": "Path to Black, you can use a custom version of Black by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Black Formatter extension](https://marketplace.visualstudio.com/items?itemName=ms-python.black-formatter). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Black Formatter extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "black",
            "restricted": false
        },
        "python.formatting.yapfPath": {
            "default": "yapf",
            "description": "Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "Yapf support will soon be deprecated. <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Yapf support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "yapf",
            "restricted": false
        },
        "python.linting.banditPath": {
            "default": "bandit",
            "description": "Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "Bandit support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Bandit support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "bandit",
            "restricted": false
        },
        "python.linting.flake8Path": {
            "default": "flake8",
            "description": "Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Flake8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.flake8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Flake8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "flake8",
            "restricted": false
        },
        "python.linting.mypyPath": {
            "default": "mypy",
            "description": "Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Mypy Type Checker extension](https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Mypy Type Checker extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "mypy",
            "restricted": false
        },
        "python.linting.prospectorPath": {
            "default": "prospector",
            "description": "Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "Prospector support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Prospector support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "prospector",
            "restricted": false
        },
        "python.linting.pycodestylePath": {
            "default": "pycodestyle",
            "description": "Path to pycodestyle, you can use a custom version of pycodestyle by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "Pycodestyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pycodestyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "pycodestyle",
            "restricted": false
        },
        "python.linting.pydocstylePath": {
            "default": "pydocstyle",
            "description": "Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "Pydocstyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pydocstyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "pydocstyle",
            "restricted": false
        },
        "python.linting.pylamaPath": {
            "default": "pylama",
            "description": "Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "Pylama support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pylama support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "pylama",
            "restricted": false
        },
        "python.linting.pylintPath": {
            "default": "pylint",
            "description": "Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "pylint",
            "restricted": false
        },
        "python.pipenvPath": {
            "default": "pipenv",
            "description": "Path to the pipenv executable to use for activation.",
            "scope": 6,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "pipenv",
            "restricted": false
        },
        "python.poetryPath": {
            "default": "poetry",
            "description": "Path to the poetry executable.",
            "scope": 6,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "poetry",
            "restricted": false
        },
        "python.sortImports.path": {
            "default": "",
            "description": "Path to isort script, default using inner version",
            "scope": 6,
            "type": "string",
            "deprecationMessage": "This setting will be removed soon. Use 'isort.path' instead.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "python.testing.pytestPath": {
            "default": "pytest",
            "description": "Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.",
            "scope": 6,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "pytest",
            "restricted": false
        },
        "C_Cpp.default.includePath": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "The value to use in a configuration if `includePath` is not specified in `c_cpp_properties.json`. If `includePath` is specified, add `${default}` to the array to insert the values from this setting. Usually, this should not include system includes; instead, set `#C_Cpp.default.compilerPath#`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.default.defines": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "The value to use in a configuration if `defines` is not specified, or the values to insert if `${default}` is present in `defines`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.default.macFrameworkPath": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "The value to use in a configuration if `macFrameworkPath` is not specified, or the values to insert if `${default}` is present in `macFrameworkPath`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.default.windowsSdkVersion": {
            "type": "string",
            "markdownDescription": "Version of the Windows SDK include path to use on Windows, e.g. `10.0.17134.0`.",
            "pattern": "^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.compileCommands": {
            "type": "string",
            "markdownDescription": "The value to use in a configuration if `compileCommands` is either not specified, or set to `${default}`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.forcedInclude": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "The value to use in a configuration if `forcedInclude` is not specified, or the values to insert if `${default}` is present in `forcedInclude`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.default.intelliSenseMode": {
            "type": "string",
            "enum": [
                "",
                "macos-clang-x86",
                "macos-clang-x64",
                "macos-clang-arm",
                "macos-clang-arm64",
                "macos-gcc-x86",
                "macos-gcc-x64",
                "macos-gcc-arm",
                "macos-gcc-arm64",
                "linux-clang-x86",
                "linux-clang-x64",
                "linux-clang-arm",
                "linux-clang-arm64",
                "linux-gcc-x86",
                "linux-gcc-x64",
                "linux-gcc-arm",
                "linux-gcc-arm64",
                "windows-clang-x86",
                "windows-clang-x64",
                "windows-clang-arm",
                "windows-clang-arm64",
                "windows-gcc-x86",
                "windows-gcc-x64",
                "windows-gcc-arm",
                "windows-gcc-arm64",
                "windows-msvc-x86",
                "windows-msvc-x64",
                "windows-msvc-arm",
                "windows-msvc-arm64",
                "clang-x86",
                "clang-x64",
                "clang-arm",
                "clang-arm64",
                "gcc-x86",
                "gcc-x64",
                "gcc-arm",
                "gcc-arm64",
                "msvc-x86",
                "msvc-x64",
                "msvc-arm",
                "msvc-arm64"
            ],
            "markdownDescription": "The value to use in a configuration if `intelliSenseMode` is either not specified or set to `${default}`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.compilerPath": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "The value to use in a configuration if `compilerPath` is either not specified or set to `${default}`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "C_Cpp.default.compilerArgs": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "The value to use in configuration if `compilerArgs` is either not specified or set to `${default}`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.default.browse.path": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": null,
            "uniqueItems": true,
            "markdownDescription": "The value to use in a configuration if `browse.path` is not specified, or the values to insert if `${default}` is present in `browse.path`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "C_Cpp.default.browse.databaseFilename": {
            "type": "string",
            "markdownDescription": "The value to use in a configuration if `browse.databaseFilename` is either not specified or set to `${default}`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.systemIncludePath": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "The value to use for the system include path. If set, it overrides the system include path acquired via `compilerPath` and `compileCommands` settings.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.default.customConfigurationVariables": {
            "type": [
                "object",
                "null"
            ],
            "default": null,
            "patternProperties": {
                "(^.+$)": {
                    "type": "string"
                }
            },
            "markdownDescription": "The value to use in a configuration if `customConfigurationVariables` is not set, or the values to insert if `${default}` is present as a key in `customConfigurationVariables`.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "C_Cpp.clang_format_path": {
            "type": "string",
            "markdownDescription": "The full path of the `clang-format` executable. If not specified, and `clang-format` is available in the environment path, that is used. If not found in the environment path, the `clang-format` bundled with the extension will be used.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.path": {
            "type": "string",
            "markdownDescription": "The full path of the `clang-tidy` executable. If not specified, and `clang-tidy` is available in the environment path, that is used. If not found in the environment path, the `clang-tidy` bundled with the extension will be used.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.intelliSenseCachePath": {
            "type": "string",
            "markdownDescription": "Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is `%LocalAppData%/Microsoft/vscode-cpptools` on Windows, `$XDG_CACHE_HOME/vscode-cpptools/` on Linux (or `$HOME/.cache/vscode-cpptools/` if `XDG_CACHE_HOME` is not defined), and `$HOME/Library/Caches/vscode-cpptools/` on macOS. The default path will be used if no path is specified or if a specified path is invalid.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.intelliSenseCacheSize": {
            "type": "number",
            "default": 5120,
            "markdownDescription": "Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is `5120` MB. Precompiled header caching is disabled when the size is `0`.",
            "scope": 6,
            "minimum": 0,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": 5120,
            "restricted": false
        },
        "C_Cpp.intelliSenseMemoryLimit": {
            "type": "number",
            "default": 4096,
            "markdownDescription": "Memory usage limit in megabytes (MB) of an IntelliSense process. The default is `4096` and the maximum is `16384`. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.",
            "scope": 6,
            "minimum": 256,
            "maximum": 16384,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": 4096,
            "restricted": false
        },
        "C_Cpp.preferredPathSeparator": {
            "type": "string",
            "enum": [
                "Forward Slash",
                "Backslash"
            ],
            "default": "Forward Slash",
            "markdownDescription": "The character used as a path separator for `#include` auto-completion results.",
            "scope": 6,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "Forward Slash",
            "restricted": false
        },
        "rust-analyzer.server.path": {
            "type": [
                "null",
                "string"
            ],
            "scope": 6,
            "default": null,
            "markdownDescription": "Path to rust-analyzer executable (points to bundled binary by default).",
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "metals.javaHome": {
            "type": "string",
            "scope": 6,
            "markdownDescription": "Optional path to the Java home directory. Requires reloading the window.\n\nDefaults to the most recent Java version between 8 and 17 (inclusive) computed by the `locate-java-home` npm package.",
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "swift.testEnvironmentVariables": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            },
            "default": {},
            "markdownDescription": "Environment variables to set when running tests. To set environment variables when debugging an application you should edit the relevant `launch.json` configuration",
            "scope": 6,
            "order": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "swift.sanitizer": {
            "type": "string",
            "default": "off",
            "enum": [
                "off",
                "thread",
                "address"
            ],
            "description": "Runtime sanitizer instrumentation. Requires a re-compilation.",
            "scope": 6,
            "order": 4,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "swift.searchSubfoldersForPackages": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Search sub-folders of workspace folder for Swift Packages at start up.",
            "scope": 6,
            "order": 5,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "swift.autoGenerateLaunchConfigurations": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When loading a `Package.swift`, auto-generate `launch.json` configurations for running any executables.",
            "scope": 6,
            "order": 6,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift.disableAutoResolve": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Disable automatic running of `swift package resolve`.",
            "scope": 6,
            "order": 7,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.servedPath": {
            "type": "string",
            "scope": 6,
            "default": "serve-d",
            "description": "Path of the serve-d executable. Path can be omitted if in $PATH or installed using code-d",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "serve-d",
            "restricted": true
        },
        "d.stdlibPath": {
            "scope": 6,
            "oneOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "string"
                }
            ],
            "defaultSnippets": [
                {
                    "label": "Choose based on platform",
                    "body": "auto"
                },
                {
                    "label": "Linux Default",
                    "body": [
                        "/usr/include/dmd/druntime/import",
                        "/usr/include/dmd/phobos"
                    ]
                },
                {
                    "label": "ArchLinux Default",
                    "body": [
                        "/usr/include/dlang/dmd"
                    ]
                },
                {
                    "label": "Windows Default",
                    "body": [
                        "C:\\D\\dmd2\\src\\druntime\\import",
                        "C:\\D\\dmd2\\src\\phobos"
                    ]
                },
                {
                    "label": "OSX Default",
                    "body": [
                        "/Library/D/dmd/src/druntime/import",
                        "/Library/D/dmd/src/phobos"
                    ]
                }
            ],
            "description": "Array of paths to phobos and D runtime for automatic inclusion for auto completion",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "default": null,
            "restricted": false
        },
        "d.dcdClientPath": {
            "title": "DCD Client Path",
            "type": "string",
            "scope": 6,
            "default": "dcd-client",
            "description": "Path of the dcd-client executable. Path can be omitted if in $PATH or installed using code-d",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "dcd-client",
            "restricted": true
        },
        "d.dcdServerPath": {
            "title": "DCD Server Path",
            "type": "string",
            "scope": 6,
            "default": "dcd-server",
            "description": "Path of the dcd-server executable. Path can be omitted if in $PATH or installed using code-d",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "dcd-server",
            "restricted": true
        },
        "d.dubPath": {
            "type": "string",
            "scope": 6,
            "default": "dub",
            "description": "Path of the dub executable. Path can be omitted if in $PATH or installed using code-d",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "dub",
            "restricted": true
        },
        "d.dmdPath": {
            "type": "string",
            "scope": 6,
            "default": "dmd",
            "description": "Path of the dmd executable. Path can be omitted if in $PATH",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "dmd",
            "restricted": true
        },
        "[bat]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[dart]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[diff]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[ignore]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[groovy]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[hlsl]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[ini]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[properties]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[java]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[javascriptreact]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[jsx-tags]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[jsonl]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[snippets]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[julia]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[juliamarkdown]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[tex]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[bibtex]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[cpp_embedded_latex]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[markdown_latex_combined]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[markdown-math]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[wat]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[objective-c]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[objective-cpp]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[perl]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[raku]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[php]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[powershell]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[r]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[razor]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[restructuredtext]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[ruby]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[rust]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[shaderlab]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[sql]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[swift]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[typescript]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[typescriptreact]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[vb]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[xml]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[xsl]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[astro]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[tailwindcss]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[graphql]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[copilotignore]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[code-referencing]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[go.mod]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[go.work]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[go.sum]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[gotmpl]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[govulncheck]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[doctex]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[bibtex-style]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[latex-expl3]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[pweave]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[jlweave]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[rsweave]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[haskell]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[cabal]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[C2Hs]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[Hsc2Hs]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[literate haskell]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[alex]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[happy]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[haml]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[kotlin]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[kotlinscript]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[dotenv]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[helm]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[jinja]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[pip-requirements]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[toml]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[ra_syntax_tree]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[javap-verbose]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[semanticdb]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[javap]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[tasty]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[buildtarget]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[just]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[inline-alpinejs]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[stencil]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[stencil-html]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[svelte]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[mdx]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[lldb.disassembly]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[vimrc]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[d]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[dpp]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[dscript]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[dml]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[sdl]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "[diet]": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage",
            "default": {}
        },
        "workbench.list.multiSelectModifier": {
            "type": "string",
            "enum": [
                "ctrlCmd",
                "alt"
            ],
            "markdownEnumDescriptions": [
                "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
                "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
            ],
            "default": "ctrlCmd",
            "description": "The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
            "defaultDefaultValue": "ctrlCmd",
            "scope": 3,
            "restricted": false
        },
        "workbench.list.openMode": {
            "type": "string",
            "enum": [
                "singleClick",
                "doubleClick"
            ],
            "default": "singleClick",
            "description": "Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.",
            "defaultDefaultValue": "singleClick",
            "scope": 3,
            "restricted": false
        },
        "workbench.list.horizontalScrolling": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.list.scrollByPage": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether clicks in the scrollbar scroll page by page.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.tree.indent": {
            "type": "number",
            "default": 8,
            "minimum": 4,
            "maximum": 40,
            "description": "Controls tree indentation in pixels.",
            "defaultDefaultValue": 8,
            "scope": 3,
            "restricted": false
        },
        "workbench.tree.renderIndentGuides": {
            "type": "string",
            "enum": [
                "none",
                "onHover",
                "always"
            ],
            "default": "onHover",
            "description": "Controls whether the tree should render indent guides.",
            "defaultDefaultValue": "onHover",
            "scope": 3,
            "restricted": false
        },
        "workbench.list.smoothScrolling": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether lists and trees have smooth scrolling.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.list.mouseWheelScrollSensitivity": {
            "type": "number",
            "default": 1,
            "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
            "defaultDefaultValue": 1,
            "scope": 3,
            "restricted": false
        },
        "workbench.list.fastScrollSensitivity": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
            "defaultDefaultValue": 5,
            "scope": 3,
            "restricted": false
        },
        "workbench.list.defaultFindMode": {
            "type": "string",
            "enum": [
                "highlight",
                "filter"
            ],
            "enumDescriptions": [
                "Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.",
                "Filter elements when searching."
            ],
            "default": "highlight",
            "description": "Controls the default find mode for lists and trees in the workbench.",
            "defaultDefaultValue": "highlight",
            "scope": 3,
            "restricted": false
        },
        "workbench.list.keyboardNavigation": {
            "type": "string",
            "enum": [
                "simple",
                "highlight",
                "filter"
            ],
            "enumDescriptions": [
                "Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
                "Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
                "Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input."
            ],
            "default": "highlight",
            "description": "Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
            "deprecated": true,
            "deprecationMessage": "Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.",
            "defaultDefaultValue": "highlight",
            "scope": 3,
            "restricted": false
        },
        "workbench.list.defaultFindMatchType": {
            "type": "string",
            "enum": [
                "fuzzy",
                "contiguous"
            ],
            "enumDescriptions": [
                "Use fuzzy matching when searching.",
                "Use contiguous matching when searching."
            ],
            "default": "fuzzy",
            "description": "Controls the type of matching used when searching lists and trees in the workbench.",
            "defaultDefaultValue": "fuzzy",
            "scope": 3,
            "restricted": false
        },
        "workbench.tree.expandMode": {
            "type": "string",
            "enum": [
                "singleClick",
                "doubleClick"
            ],
            "default": "singleClick",
            "description": "Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.",
            "defaultDefaultValue": "singleClick",
            "scope": 3,
            "restricted": false
        },
        "workbench.list.typeNavigationMode": {
            "type": "string",
            "enum": [
                "automatic",
                "trigger"
            ],
            "default": "automatic",
            "markdownDescription": "Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run.",
            "defaultDefaultValue": "automatic",
            "scope": 3,
            "restricted": false
        },
        "breadcrumbs.enabled": {
            "description": "Enable/disable navigation breadcrumbs.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "breadcrumbs.filePath": {
            "description": "Controls whether and how file paths are shown in the breadcrumbs view.",
            "type": "string",
            "default": "on",
            "enum": [
                "on",
                "off",
                "last"
            ],
            "enumDescriptions": [
                "Show the file path in the breadcrumbs view.",
                "Do not show the file path in the breadcrumbs view.",
                "Only show the last element of the file path in the breadcrumbs view."
            ],
            "defaultDefaultValue": "on",
            "scope": 3,
            "restricted": false
        },
        "breadcrumbs.symbolPath": {
            "description": "Controls whether and how symbols are shown in the breadcrumbs view.",
            "type": "string",
            "default": "on",
            "enum": [
                "on",
                "off",
                "last"
            ],
            "enumDescriptions": [
                "Show all symbols in the breadcrumbs view.",
                "Do not show symbols in the breadcrumbs view.",
                "Only show the current symbol in the breadcrumbs view."
            ],
            "defaultDefaultValue": "on",
            "scope": 3,
            "restricted": false
        },
        "breadcrumbs.icons": {
            "description": "Render breadcrumb items with icons.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.lineNumbers": {
            "type": "string",
            "enum": [
                "off",
                "on"
            ],
            "default": "off",
            "markdownDescription": "Controls the display of line numbers in the cell editor.",
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "problems.decorations.enabled": {
            "description": "Show Errors & Warnings on files and folder.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "audioCues.enabled": {
            "markdownDeprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).",
            "tags": [
                "accessibility"
            ],
            "default": null,
            "scope": 3,
            "restricted": false,
            "deprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`)."
        },
        "audioCues.volume": {
            "description": "The volume of the audio cues in percent (0-100).",
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "default": 70,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": 70,
            "scope": 3,
            "restricted": false
        },
        "audioCues.debouncePositionChanges": {
            "description": "Whether or not position changes should be debounced",
            "type": "boolean",
            "default": false,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "audioCues.lineHasBreakpoint": {
            "description": "Plays a sound when the active line has a breakpoint.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.lineHasInlineSuggestion": {
            "description": "Plays a sound when the active line has an inline suggestion.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.lineHasError": {
            "description": "Plays a sound when the active line has an error.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.lineHasFoldedArea": {
            "description": "Plays a sound when the active line has a folded area that can be unfolded.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.lineHasWarning": {
            "description": "Plays a sound when the active line has a warning.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "off",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "audioCues.onDebugBreak": {
            "description": "Plays a sound when the debugger stopped on a breakpoint.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.noInlayHints": {
            "description": "Plays a sound when trying to read a line with inlay hints that has no inlay hints.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.taskCompleted": {
            "description": "Plays a sound when a task is completed.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.taskFailed": {
            "description": "Plays a sound when a task fails (non-zero exit code).",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.terminalCommandFailed": {
            "description": "Plays a sound when a terminal command fails (non-zero exit code).",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.terminalQuickFix": {
            "description": "Plays a sound when terminal Quick Fixes are available.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.diffLineInserted": {
            "description": "Plays a sound when the focus moves to an inserted line in accessible diff viewer mode or to the next/previous change",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.diffLineDeleted": {
            "description": "Plays a sound when the focus moves to a deleted line in accessible diff viewer mode or to the next/previous change",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.diffLineModified": {
            "description": "Plays a sound when the focus moves to a modified line in accessible diff viewer mode or to the next/previous change",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.notebookCellCompleted": {
            "description": "Plays a sound when a notebook cell execution is successfully completed.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.notebookCellFailed": {
            "description": "Plays a sound when a notebook cell execution fails.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.chatRequestSent": {
            "description": "Plays a sound when a chat request is made.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "off",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "audioCues.chatResponsePending": {
            "description": "Plays a sound on loop while the response is pending.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "audioCues.chatResponseReceived": {
            "description": "Plays a sound on loop while the response has been received.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "default": "off",
            "enumDescriptions": [
                "Enable audio cue when a screen reader is attached.",
                "Enable audio cue.",
                "Disable audio cue."
            ],
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.titleScrollbarSizing": {
            "type": "string",
            "enum": [
                "default",
                "large"
            ],
            "enumDescriptions": [
                "The default size.",
                "Increases the size, so it can be grabbed more easily with the mouse."
            ],
            "description": "Controls the height of the scrollbars used for tabs and breadcrumbs in the editor title area.",
            "default": "default",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.showTabs": {
            "type": "boolean",
            "description": "Controls whether opened editors should show in tabs or not.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.wrapTabs": {
            "type": "boolean",
            "markdownDescription": "Controls whether tabs should be wrapped over multiple lines when exceeding available space or whether a scrollbar should appear instead. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.scrollToSwitchTabs": {
            "type": "boolean",
            "markdownDescription": "Controls whether scrolling over tabs will open them or not. By default tabs will only reveal upon scrolling, but not open. You can press and hold the Shift-key while scrolling to change this behavior for that duration. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.highlightModifiedTabs": {
            "type": "boolean",
            "markdownDescription": "Controls whether a top border is drawn on tabs for editors that have unsaved changes. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.decorations.badges": {
            "type": "boolean",
            "markdownDescription": "Controls whether editor file decorations should use badges.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.decorations.colors": {
            "type": "boolean",
            "markdownDescription": "Controls whether editor file decorations should use colors.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.labelFormat": {
            "type": "string",
            "enum": [
                "default",
                "short",
                "medium",
                "long"
            ],
            "enumDescriptions": [
                "Show the name of the file. When tabs are enabled and two files have the same name in one group the distinguishing sections of each file's path are added. When tabs are disabled, the path relative to the workspace folder is shown if the editor is active.",
                "Show the name of the file followed by its directory name.",
                "Show the name of the file followed by its path relative to the workspace folder.",
                "Show the name of the file followed by its absolute path."
            ],
            "default": "default",
            "description": "Controls the format of the label for an editor.",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.untitled.labelFormat": {
            "type": "string",
            "enum": [
                "content",
                "name"
            ],
            "enumDescriptions": [
                "The name of the untitled file is derived from the contents of its first line unless it has an associated file path. It will fallback to the name in case the line is empty or contains no word characters.",
                "The name of the untitled file is not derived from the contents of the file."
            ],
            "default": "content",
            "description": "Controls the format of the label for an untitled editor.",
            "defaultDefaultValue": "content",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.empty.hint": {
            "type": "string",
            "enum": [
                "text",
                "hidden"
            ],
            "default": "text",
            "markdownDescription": "Controls if the empty editor text hint should be visible in the editor.",
            "defaultDefaultValue": "text",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.historyBasedLanguageDetection": {
            "type": "boolean",
            "default": true,
            "tags": [
                "experimental"
            ],
            "description": "Enables use of editor history in language detection. This causes automatic language detection to favor languages that have been recently opened and allows for automatic language detection to operate with smaller inputs.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.preferHistoryBasedLanguageDetection": {
            "type": "boolean",
            "default": false,
            "tags": [
                "experimental"
            ],
            "description": "When enabled, a language detection model that takes into account editor history will be given higher precedence.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.languageDetectionHints": {
            "type": "object",
            "default": {
                "untitledEditors": true,
                "notebookEditors": true
            },
            "tags": [
                "experimental"
            ],
            "description": "When enabled, shows a Status bar Quick Fix when the editor language doesn't match detected content language.",
            "additionalProperties": false,
            "properties": {
                "untitledEditors": {
                    "type": "boolean",
                    "description": "Show in untitled text editors"
                },
                "notebookEditors": {
                    "type": "boolean",
                    "description": "Show in notebook editors"
                }
            },
            "defaultDefaultValue": {
                "untitledEditors": true,
                "notebookEditors": true
            },
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.tabCloseButton": {
            "type": "string",
            "enum": [
                "left",
                "right",
                "off"
            ],
            "default": "right",
            "markdownDescription": "Controls the position of the editor's tabs close buttons, or disables them when set to 'off'. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "defaultDefaultValue": "right",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.tabSizing": {
            "type": "string",
            "enum": [
                "fit",
                "shrink",
                "fixed"
            ],
            "default": "fit",
            "enumDescriptions": [
                "Always keep tabs large enough to show the full editor label.",
                "Allow tabs to get smaller when the available space is not enough to show all tabs at once.",
                "Make all tabs the same size, while allowing them to get smaller when the available space is not enough to show all tabs at once."
            ],
            "markdownDescription": "Controls the size of editor tabs. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "defaultDefaultValue": "fit",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.tabSizingFixedMinWidth": {
            "type": "number",
            "default": 50,
            "minimum": 38,
            "markdownDescription": "Controls the minimum width of tabs when `#workbench.editor.tabSizing#` size is set to `fixed`.",
            "defaultDefaultValue": 50,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.tabSizingFixedMaxWidth": {
            "type": "number",
            "default": 160,
            "minimum": 38,
            "markdownDescription": "Controls the maximum width of tabs when `#workbench.editor.tabSizing#` size is set to `fixed`.",
            "defaultDefaultValue": 160,
            "scope": 3,
            "restricted": false
        },
        "window.density.editorTabHeight": {
            "type": "string",
            "enum": [
                "default",
                "compact"
            ],
            "default": "default",
            "markdownDescription": "Controls the height of editor tabs. Also applies to the title control bar when `#workbench.editor.showTabs#` is disabled.",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.pinnedTabSizing": {
            "type": "string",
            "enum": [
                "normal",
                "compact",
                "shrink"
            ],
            "default": "normal",
            "enumDescriptions": [
                "A pinned tab inherits the look of non pinned tabs.",
                "A pinned tab will show in a compact form with only icon or first letter of the editor name.",
                "A pinned tab shrinks to a compact fixed size showing parts of the editor name."
            ],
            "markdownDescription": "Controls the size of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "defaultDefaultValue": "normal",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.pinnedTabsOnSeparateRow": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled, displays pinned tabs in a separate row above all other tabs. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.preventPinnedEditorClose": {
            "type": "string",
            "enum": [
                "keyboardAndMouse",
                "keyboard",
                "mouse",
                "never"
            ],
            "default": "keyboardAndMouse",
            "enumDescriptions": [
                "Always prevent closing the pinned editor when using mouse middle click or keyboard.",
                "Prevent closing the pinned editor when using the keyboard.",
                "Prevent closing the pinned editor when using mouse middle click.",
                "Never prevent closing a pinned editor."
            ],
            "description": "Controls whether pinned editors should close when keyboard or middle mouse click is used for closing.",
            "defaultDefaultValue": "keyboardAndMouse",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.splitSizing": {
            "type": "string",
            "enum": [
                "auto",
                "distribute",
                "split"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Splits the active editor group to equal parts, unless all editor groups are already in equal parts. In that case, splits all the editor groups to equal parts.",
                "Splits all the editor groups to equal parts.",
                "Splits the active editor group to equal parts."
            ],
            "description": "Controls the size of editor groups when splitting them.",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.splitOnDragAndDrop": {
            "type": "boolean",
            "default": true,
            "description": "Controls if editor groups can be split from drag and drop operations by dropping an editor or file on the edges of the editor area.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.focusRecentEditorAfterClose": {
            "type": "boolean",
            "description": "Controls whether editors are closed in most recently used order or from left to right.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.showIcons": {
            "type": "boolean",
            "description": "Controls whether opened editors should show with an icon or not. This requires a file icon theme to be enabled as well.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.enablePreview": {
            "type": "boolean",
            "description": "Controls whether opened editors show as preview editors. Preview editors do not stay open, are reused until explicitly set to be kept open (via double-click or editing), and show file names in italics.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.enablePreviewFromQuickOpen": {
            "type": "boolean",
            "markdownDescription": "Controls whether editors opened from Quick Open show as preview editors. Preview editors do not stay open, and are reused until explicitly set to be kept open (via double-click or editing). When enabled, hold Ctrl before selection to open an editor as a non-preview. This value is ignored when `#workbench.editor.enablePreview#` is disabled.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.enablePreviewFromCodeNavigation": {
            "type": "boolean",
            "markdownDescription": "Controls whether editors remain in preview when a code navigation is started from them. Preview editors do not stay open, and are reused until explicitly set to be kept open (via double-click or editing). This value is ignored when `#workbench.editor.enablePreview#` is disabled.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.closeOnFileDelete": {
            "type": "boolean",
            "description": "Controls whether editors showing a file that was opened during the session should close automatically when getting deleted or renamed by some other process. Disabling this will keep the editor open  on such an event. Note that deleting from within the application will always close the editor and that editors with unsaved changes will never close to preserve your data.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.openPositioning": {
            "type": "string",
            "enum": [
                "left",
                "right",
                "first",
                "last"
            ],
            "default": "right",
            "markdownDescription": "Controls where editors open. Select `left` or `right` to open editors to the left or right of the currently active one. Select `first` or `last` to open editors independently from the currently active one.",
            "defaultDefaultValue": "right",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.openSideBySideDirection": {
            "type": "string",
            "enum": [
                "right",
                "down"
            ],
            "default": "right",
            "markdownDescription": "Controls the default direction of editors that are opened side by side (for example, from the Explorer). By default, editors will open on the right hand side of the currently active one. If changed to `down`, the editors will open below the currently active one.",
            "defaultDefaultValue": "right",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.closeEmptyGroups": {
            "type": "boolean",
            "description": "Controls the behavior of empty editor groups when the last tab in the group is closed. When enabled, empty groups will automatically close. When disabled, empty groups will remain part of the grid.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.revealIfOpen": {
            "type": "boolean",
            "description": "Controls whether an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, such as when forcing an editor to open in a specific group or to the side of the currently active group.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.mouseBackForwardToNavigate": {
            "type": "boolean",
            "description": "Enables the use of mouse buttons four and five for commands 'Go Back' and 'Go Forward'.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.navigationScope": {
            "type": "string",
            "enum": [
                "default",
                "editorGroup",
                "editor"
            ],
            "default": "default",
            "markdownDescription": "Controls the scope of history navigation in editors for commands such as 'Go Back' and 'Go Forward'.",
            "enumDescriptions": [
                "Navigate across all opened editors and editor groups.",
                "Navigate only in editors of the active editor group.",
                "Navigate only in the active editor."
            ],
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.sharedViewState": {
            "type": "boolean",
            "description": "Preserves the most recent editor view state (such as scroll position) across all editor groups and restores that if no specific editor view state is found for the editor group.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.splitInGroupLayout": {
            "type": "string",
            "enum": [
                "vertical",
                "horizontal"
            ],
            "default": "horizontal",
            "markdownDescription": "Controls the layout for when an editor is split in an editor group to be either vertical or horizontal.",
            "enumDescriptions": [
                "Editors are positioned from top to bottom.",
                "Editors are positioned from left to right."
            ],
            "defaultDefaultValue": "horizontal",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.centeredLayoutAutoResize": {
            "type": "boolean",
            "default": true,
            "description": "Controls if the centered layout should automatically resize to maximum width when more than one group is open. Once only one group is open it will resize back to the original centered width.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.centeredLayoutFixedWidth": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the centered layout tries to maintain constant width when the window is resized.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.doubleClickTabToToggleEditorGroupSizes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether to maximize/restore the editor group when double clicking on a tab. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.limit.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Controls if the number of opened editors should be limited or not. When enabled, less recently used editors will close to make space for newly opening editors.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.limit.value": {
            "type": "number",
            "default": 10,
            "exclusiveMinimum": 0,
            "markdownDescription": "Controls the maximum number of opened editors. Use the `#workbench.editor.limit.perEditorGroup#` setting to control this limit per editor group or across all groups.",
            "defaultDefaultValue": 10,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.limit.excludeDirty": {
            "type": "boolean",
            "default": false,
            "description": "Controls if the maximum number of opened editors should exclude dirty editors for counting towards the configured limit.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.limit.perEditorGroup": {
            "type": "boolean",
            "default": false,
            "description": "Controls if the limit of maximum opened editors should apply per editor group or across all editor groups.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.commandPalette.history": {
            "type": "number",
            "description": "Controls the number of recently used commands to keep in history for the command palette. Set to 0 to disable command history.",
            "default": 50,
            "minimum": 0,
            "defaultDefaultValue": 50,
            "scope": 3,
            "restricted": false
        },
        "workbench.commandPalette.preserveInput": {
            "type": "boolean",
            "description": "Controls whether the last typed input to the command palette should be restored when opening it the next time.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.commandPalette.experimental.suggestCommands": {
            "type": "boolean",
            "tags": [
                "experimental"
            ],
            "description": "Controls whether the command palette should have a list of commonly used commands.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.commandPalette.experimental.askChatLocation": {
            "type": "string",
            "tags": [
                "experimental"
            ],
            "description": "Controls where the command palette should ask chat questions.",
            "default": "chatView",
            "enum": [
                "chatView",
                "quickChat"
            ],
            "enumDescriptions": [
                "Ask chat questions in the Chat view.",
                "Ask chat questions in Quick Chat."
            ],
            "defaultDefaultValue": "chatView",
            "scope": 3,
            "restricted": false
        },
        "workbench.commandPalette.experimental.enableNaturalLanguageSearch": {
            "type": "boolean",
            "tags": [
                "experimental"
            ],
            "description": "Controls whether the command palette should include similar commands. You must have an extension installed that provides Natural Language support.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.quickOpen.closeOnFocusLost": {
            "type": "boolean",
            "description": "Controls whether Quick Open should close automatically once it loses focus.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.quickOpen.preserveInput": {
            "type": "boolean",
            "description": "Controls whether the last typed input to Quick Open should be restored when opening it the next time.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.settings.openDefaultSettings": {
            "type": "boolean",
            "description": "Controls whether opening settings also opens an editor showing all default settings.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.settings.useSplitJSON": {
            "type": "boolean",
            "markdownDescription": "Controls whether to use the split JSON editor when editing settings as JSON.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.settings.openDefaultKeybindings": {
            "type": "boolean",
            "description": "Controls whether opening keybinding settings also opens an editor showing all default keybindings.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.sideBar.location": {
            "type": "string",
            "enum": [
                "left",
                "right"
            ],
            "default": "left",
            "description": "Controls the location of the primary side bar and activity bar. They can either show on the left or right of the workbench. The secondary side bar will show on the opposite side of the workbench.",
            "defaultDefaultValue": "left",
            "scope": 3,
            "restricted": false
        },
        "workbench.panel.defaultLocation": {
            "type": "string",
            "enum": [
                "left",
                "bottom",
                "right"
            ],
            "default": "bottom",
            "description": "Controls the default location of the panel (Terminal, Debug Console, Output, Problems) in a new workspace. It can either show at the bottom, right, or left of the editor area.",
            "defaultDefaultValue": "bottom",
            "scope": 3,
            "restricted": false
        },
        "workbench.panel.opensMaximized": {
            "type": "string",
            "enum": [
                "always",
                "never",
                "preserve"
            ],
            "default": "preserve",
            "description": "Controls whether the panel opens maximized. It can either always open maximized, never open maximized, or open to the last state it was in before being closed.",
            "enumDescriptions": [
                "Always maximize the panel when opening it.",
                "Never maximize the panel when opening it. The panel will open un-maximized.",
                "Open the panel to the state that it was in, before it was closed."
            ],
            "defaultDefaultValue": "preserve",
            "scope": 3,
            "restricted": false
        },
        "workbench.statusBar.visible": {
            "type": "boolean",
            "default": true,
            "description": "Controls the visibility of the status bar at the bottom of the workbench.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.activityBar.visible": {
            "type": "boolean",
            "default": true,
            "description": "Controls the visibility of the activity bar in the workbench.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.activityBar.iconClickBehavior": {
            "type": "string",
            "enum": [
                "toggle",
                "focus"
            ],
            "default": "toggle",
            "description": "Controls the behavior of clicking an activity bar icon in the workbench.",
            "enumDescriptions": [
                "Hide the side bar if the clicked item is already visible.",
                "Focus side bar if the clicked item is already visible."
            ],
            "defaultDefaultValue": "toggle",
            "scope": 3,
            "restricted": false
        },
        "workbench.view.alwaysShowHeaderActions": {
            "type": "boolean",
            "default": false,
            "description": "Controls the visibility of view header actions. View header actions may either be always visible, or only visible when that view is focused or hovered over.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "workbench.fontAliasing": {
            "type": "string",
            "enum": [
                "default",
                "antialiased",
                "none",
                "auto"
            ],
            "default": "default",
            "description": "Controls font aliasing method in the workbench.",
            "enumDescriptions": [
                "Sub-pixel font smoothing. On most non-retina displays this will give the sharpest text.",
                "Smooth the font on the level of the pixel, as opposed to the subpixel. Can make the font appear lighter overall.",
                "Disables font smoothing. Text will show with jagged sharp edges.",
                "Applies `default` or `antialiased` automatically based on the DPI of displays."
            ],
            "included": true,
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "workbench.settings.editor": {
            "type": "string",
            "enum": [
                "ui",
                "json"
            ],
            "enumDescriptions": [
                "Use the settings UI editor.",
                "Use the JSON file editor."
            ],
            "description": "Determines which settings editor to use by default.",
            "default": "ui",
            "scope": 3,
            "defaultDefaultValue": "ui",
            "restricted": false
        },
        "workbench.hover.delay": {
            "type": "number",
            "description": "Controls the delay in milliseconds after which the hover is shown for workbench items (ex. some extension provided tree view items). Already visible items may require a refresh before reflecting this setting change.",
            "default": 1500,
            "minimum": 0,
            "defaultDefaultValue": 1500,
            "scope": 3,
            "restricted": false
        },
        "workbench.reduceMotion": {
            "type": "string",
            "description": "Controls whether the workbench should render with fewer animations.",
            "enumDescriptions": [
                "Always render with reduced motion.",
                "Do not render with reduced motion",
                "Render with reduced motion based on OS configuration."
            ],
            "default": "auto",
            "tags": [
                "accessibility"
            ],
            "enum": [
                "on",
                "off",
                "auto"
            ],
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "workbench.layoutControl.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether the layout control is shown in the custom title bar. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.layoutControl.type": {
            "type": "string",
            "enum": [
                "menu",
                "toggles",
                "both"
            ],
            "enumDescriptions": [
                "Shows a single button with a dropdown of layout options.",
                "Shows several buttons for toggling the visibility of the panels and side bar.",
                "Shows both the dropdown and toggle buttons."
            ],
            "default": "both",
            "description": "Controls whether the layout control in the custom title bar is displayed as a single menu button or with multiple UI toggles.",
            "defaultDefaultValue": "both",
            "scope": 3,
            "restricted": false
        },
        "workbench.tips.enabled": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, will show the watermark tips when no editor is open.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "window.title": {
            "type": "string",
            "default": "${activeEditorShort}${separator}${rootName}${separator}${profileName}",
            "markdownDescription": "Controls the window title based on the current context such as the opened workspace or active editor. Variables are substituted based on the context:\n- `${activeEditorShort}`: the file name (e.g. myFile.txt).\n- `${activeEditorMedium}`: the path of the file relative to the workspace folder (e.g. myFolder/myFileFolder/myFile.txt).\n- `${activeEditorLong}`: the full path of the file (e.g. /Users/Development/myFolder/myFileFolder/myFile.txt).\n- `${activeFolderShort}`: the name of the folder the file is contained in (e.g. myFileFolder).\n- `${activeFolderMedium}`: the path of the folder the file is contained in, relative to the workspace folder (e.g. myFolder/myFileFolder).\n- `${activeFolderLong}`: the full path of the folder the file is contained in (e.g. /Users/Development/myFolder/myFileFolder).\n- `${folderName}`: name of the workspace folder the file is contained in (e.g. myFolder).\n- `${folderPath}`: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder).\n- `${rootName}`: name of the workspace with optional remote name and workspace indicator if applicable (e.g. myFolder, myRemoteFolder [SSH] or myWorkspace (Workspace)).\n- `${rootNameShort}`: shortened name of the workspace without suffixes (e.g. myFolder, myRemoteFolder or myWorkspace).\n- `${rootPath}`: file path of the opened workspace or folder (e.g. /Users/Development/myWorkspace).\n- `${profileName}`: name of the profile in which the workspace is opened (e.g. Data Science (Profile)). Ignored if default profile is used.\n- `${appName}`: e.g. VS Code.\n- `${remoteName}`: e.g. SSH\n- `${dirty}`: an indicator for when the active editor has unsaved changes.\n- `${focusedView}`: the name of the view that is currently focused.\n- `${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.",
            "defaultDefaultValue": "${activeEditorShort}${separator}${rootName}${separator}${profileName}",
            "scope": 3,
            "restricted": false
        },
        "window.titleSeparator": {
            "type": "string",
            "default": " — ",
            "markdownDescription": "Separator used by `#window.title#`.",
            "defaultDefaultValue": " — ",
            "scope": 3,
            "restricted": false
        },
        "window.commandCenter": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show command launcher together with the window title. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.fullScreen": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether turning on Zen Mode also puts the workbench into full screen mode.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.centerLayout": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether turning on Zen Mode also centers the layout.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.hideTabs": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether turning on Zen Mode also hides workbench tabs.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.hideStatusBar": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether turning on Zen Mode also hides the status bar at the bottom of the workbench.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.hideActivityBar": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether turning on Zen Mode also hides the activity bar either at the left or right of the workbench.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.hideLineNumbers": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether turning on Zen Mode also hides the editor line numbers.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.restore": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether a window should restore to Zen Mode if it was exited in Zen Mode.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "zenMode.silentNotifications": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether notifications do not disturb mode should be enabled while in Zen Mode. If true, only error notifications will pop out.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.externalUriOpeners": {
            "type": "object",
            "markdownDescription": "Configure the opener to use for external URIs (http, https).",
            "defaultSnippets": [
                {
                    "body": {
                        "example.com": "$1"
                    }
                }
            ],
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "string",
                        "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https"
                    },
                    {
                        "type": "string",
                        "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https",
                        "enum": [
                            "default"
                        ],
                        "enumDescriptions": [
                            "Open using VS Code's standard opener."
                        ]
                    },
                    {
                        "type": "string",
                        "enum": [
                            "simpleBrowser.open"
                        ],
                        "enumDescriptions": [
                            "vscode.simple-browser"
                        ]
                    }
                ]
            },
            "default": {},
            "scope": 3,
            "restricted": false
        },
        "inlineChat.mode": {
            "description": "Configure if changes crafted in the interactive editor are applied directly to the document or are previewed first.",
            "default": "livePreview",
            "type": "string",
            "enum": [
                "livePreview",
                "preview",
                "live"
            ],
            "markdownEnumDescriptions": [
                "Changes are applied directly to the document and are highlighted visually via inline or side-by-side diffs. Ending a session will keep the changes.",
                "Changes are previewed only and need to be accepted via the apply button. Ending a session will discard the changes.",
                "Changes are applied directly to the document but can be highlighted via inline diffs. Ending a session will keep the changes."
            ],
            "defaultDefaultValue": "livePreview",
            "scope": 3,
            "restricted": false
        },
        "inlineChat.showDiff": {
            "description": "Enable/disable showing the diff when edits are generated. Works only with inlineChat.mode equal to live or livePreview.",
            "default": true,
            "type": "boolean",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "remote.extensionKind": {
            "type": "object",
            "markdownDescription": "Override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. By overriding an extension's default kind using this setting, you specify if that extension should be installed and enabled locally or remotely.",
            "patternProperties": {
                "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ui",
                                    "workspace"
                                ],
                                "enumDescriptions": [
                                    "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                                    "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
                                ]
                            }
                        },
                        {
                            "type": "string",
                            "enum": [
                                "ui",
                                "workspace"
                            ],
                            "enumDescriptions": [
                                "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                                "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
                            ]
                        }
                    ],
                    "default": [
                        "ui"
                    ]
                }
            },
            "default": {
                "pub.name": [
                    "ui"
                ]
            },
            "defaultDefaultValue": {
                "pub.name": [
                    "ui"
                ]
            },
            "scope": 3,
            "restricted": false
        },
        "remote.restoreForwardedPorts": {
            "type": "boolean",
            "markdownDescription": "Restores the ports you forwarded in a workspace.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "remote.autoForwardPorts": {
            "type": "boolean",
            "markdownDescription": "When enabled, new running processes are detected and ports that they listen on are automatically forwarded. Disabling this setting will not prevent all ports from being forwarded. Even when disabled, extensions will still be able to cause ports to be forwarded, and opening some URLs will still cause ports to forwarded.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "remote.autoForwardPortsSource": {
            "type": "string",
            "markdownDescription": "Sets the source from which ports are automatically forwarded when `#remote.autoForwardPorts#` is true. On Windows and Mac remotes, the `process` and `hybrid` options have no effect and `output` will be used. Requires a reload to take effect.",
            "enum": [
                "process",
                "output",
                "hybrid"
            ],
            "enumDescriptions": [
                "Ports will be automatically forwarded when discovered by watching for processes that are started and include a port.",
                "Ports will be automatically forwarded when discovered by reading terminal and debug output. Not all processes that use ports will print to the integrated terminal or debug console, so some ports will be missed. Ports forwarded based on output will not be \"un-forwarded\" until reload or until the port is closed by the user in the Ports view.",
                "Ports will be automatically forwarded when discovered by reading terminal and debug output. Not all processes that use ports will print to the integrated terminal or debug console, so some ports will be missed. Ports will be \"un-forwarded\" by watching for processes that listen on that port to be terminated."
            ],
            "default": "process",
            "defaultDefaultValue": "process",
            "scope": 3,
            "restricted": false
        },
        "remote.forwardOnOpen": {
            "type": "boolean",
            "description": "Controls whether local URLs with a port will be forwarded when opened from the terminal and the debug console.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "remote.portsAttributes": {
            "type": "object",
            "patternProperties": {
                "(^\\d+(-\\d+)?$)|(.+)": {
                    "type": "object",
                    "description": "A port, range of ports (ex. \"40000-55000\"), host and port (ex. \"db:1234\"), or regular expression (ex. \".+\\\\/server.js\").  For a port number or range, the attributes will apply to that port number or range of port numbers. Attributes which use a regular expression will apply to ports whose associated process command line matches the expression.",
                    "properties": {
                        "onAutoForward": {
                            "type": "string",
                            "enum": [
                                "notify",
                                "openBrowser",
                                "openBrowserOnce",
                                "openPreview",
                                "silent",
                                "ignore"
                            ],
                            "enumDescriptions": [
                                "Shows a notification when a port is automatically forwarded.",
                                "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
                                "Opens the browser when the port is automatically forwarded, but only the first time the port is forward during a session. Depending on your settings, this could open an embedded browser.",
                                "Opens a preview in the same window when the port is automatically forwarded.",
                                "Shows no notification and takes no action when this port is automatically forwarded.",
                                "This port will not be automatically forwarded."
                            ],
                            "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
                            "default": "notify"
                        },
                        "elevateIfNeeded": {
                            "type": "boolean",
                            "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
                            "default": false
                        },
                        "label": {
                            "type": "string",
                            "description": "Label that will be shown in the UI for this port.",
                            "default": "Application"
                        },
                        "requireLocalPort": {
                            "type": "boolean",
                            "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
                            "default": false
                        },
                        "protocol": {
                            "type": "string",
                            "enum": [
                                "http",
                                "https"
                            ],
                            "description": "The protocol to use when forwarding this port."
                        }
                    },
                    "default": {
                        "label": "Application",
                        "onAutoForward": "notify"
                    }
                }
            },
            "markdownDescription": "Set properties that are applied when a specific port number is forwarded. For example:\n\n```\n\"3000\": {\n  \"label\": \"Application\"\n},\n\"40000-55000\": {\n  \"onAutoForward\": \"ignore\"\n},\n\".+\\\\/server.js\": {\n \"onAutoForward\": \"openPreview\"\n}\n```",
            "defaultSnippets": [
                {
                    "body": {
                        "${1:3000}": {
                            "label": "${2:Application}",
                            "onAutoForward": "openPreview"
                        }
                    }
                }
            ],
            "errorMessage": "Must be a port number, range of port numbers, or regular expression.",
            "additionalProperties": false,
            "default": {
                "443": {
                    "protocol": "https"
                },
                "8443": {
                    "protocol": "https"
                }
            },
            "defaultDefaultValue": {
                "443": {
                    "protocol": "https"
                },
                "8443": {
                    "protocol": "https"
                }
            },
            "scope": 3,
            "restricted": false
        },
        "remote.otherPortsAttributes": {
            "type": "object",
            "properties": {
                "onAutoForward": {
                    "type": "string",
                    "enum": [
                        "notify",
                        "openBrowser",
                        "openPreview",
                        "silent",
                        "ignore"
                    ],
                    "enumDescriptions": [
                        "Shows a notification when a port is automatically forwarded.",
                        "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
                        "Opens a preview in the same window when the port is automatically forwarded.",
                        "Shows no notification and takes no action when this port is automatically forwarded.",
                        "This port will not be automatically forwarded."
                    ],
                    "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
                    "default": "notify"
                },
                "elevateIfNeeded": {
                    "type": "boolean",
                    "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
                    "default": false
                },
                "label": {
                    "type": "string",
                    "description": "Label that will be shown in the UI for this port.",
                    "default": "Application"
                },
                "requireLocalPort": {
                    "type": "boolean",
                    "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
                    "default": false
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "http",
                        "https"
                    ],
                    "description": "The protocol to use when forwarding this port."
                }
            },
            "defaultSnippets": [
                {
                    "body": {
                        "onAutoForward": "ignore"
                    }
                }
            ],
            "markdownDescription": "Set default properties that are applied to all ports that don't get properties from the setting `#remote.portsAttributes#`. For example:\n\n```\n{\n  \"onAutoForward\": \"ignore\"\n}\n```",
            "additionalProperties": false,
            "default": {},
            "scope": 3,
            "restricted": false
        },
        "remote.localPortHost": {
            "type": "string",
            "enum": [
                "localhost",
                "allInterfaces"
            ],
            "default": "localhost",
            "description": "Specifies the local host name that will be used for port forwarding.",
            "defaultDefaultValue": "localhost",
            "scope": 3,
            "restricted": false
        },
        "workbench.sash.size": {
            "type": "number",
            "default": 4,
            "minimum": 1,
            "maximum": 20,
            "description": "Controls the feedback area size in pixels of the dragging area in between views/editors. Set it to a larger value if you feel it's hard to resize views using the mouse.",
            "defaultDefaultValue": 4,
            "scope": 3,
            "restricted": false
        },
        "workbench.sash.hoverDelay": {
            "type": "number",
            "default": 300,
            "minimum": 0,
            "maximum": 2000,
            "description": "Controls the hover feedback delay in milliseconds of the dragging area in between views/editors.",
            "defaultDefaultValue": 300,
            "scope": 3,
            "restricted": false
        },
        "workbench.experimental.share.enabled": {
            "type": "boolean",
            "default": false,
            "tags": [
                "experimental"
            ],
            "markdownDescription": "Controls whether to render the Share action next to the command center when `#window.commandCenter#` is `true`.",
            "restricted": false,
            "defaultDefaultValue": false,
            "scope": 3
        },
        "remote.downloadExtensionsLocally": {
            "type": "boolean",
            "markdownDescription": "When enabled extensions are downloaded locally and installed on remote.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "task.problemMatchers.neverPrompt": {
            "markdownDescription": "Configures whether to show the problem matcher prompt when running a task. Set to `true` to never prompt, or use a dictionary of task types to turn off prompting only for specific task types.",
            "oneOf": [
                {
                    "type": "boolean",
                    "markdownDescription": "Sets problem matcher prompting behavior for all tasks."
                },
                {
                    "type": "object",
                    "patternProperties": {
                        ".*": {
                            "type": "boolean"
                        }
                    },
                    "markdownDescription": "An object containing task type-boolean pairs to never prompt for problem matchers on.",
                    "default": {
                        "shell": true
                    }
                }
            ],
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "task.autoDetect": {
            "markdownDescription": "Controls enablement of `provideTasks` for all task provider extension. If the Tasks: Run Task command is slow, disabling auto detect for task providers may help. Individual extensions may also provide settings that disable auto detection.",
            "type": "string",
            "enum": [
                "on",
                "off"
            ],
            "default": "on",
            "defaultDefaultValue": "on",
            "scope": 3,
            "restricted": false
        },
        "task.slowProviderWarning": {
            "markdownDescription": "Configures whether a warning is shown when a provider is slow",
            "oneOf": [
                {
                    "type": "boolean",
                    "markdownDescription": "Sets the slow provider warning for all tasks."
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "markdownDescription": "An array of task types to never show the slow provider warning."
                    }
                }
            ],
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "task.quickOpen.history": {
            "markdownDescription": "Controls the number of recent items tracked in task quick open dialog.",
            "type": "number",
            "default": 30,
            "minimum": 0,
            "maximum": 30,
            "defaultDefaultValue": 30,
            "scope": 3,
            "restricted": false
        },
        "task.quickOpen.detail": {
            "markdownDescription": "Controls whether to show the task detail for tasks that have a detail in task quick picks, such as Run Task.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "task.quickOpen.skip": {
            "type": "boolean",
            "description": "Controls whether the task quick pick is skipped when there is only one task to pick from.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "task.quickOpen.showAll": {
            "type": "boolean",
            "description": "Causes the Tasks: Run Task command to use the slower \"show all\" behavior instead of the faster two level picker where tasks are grouped by provider.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "task.allowAutomaticTasks": {
            "type": "string",
            "enum": [
                "on",
                "off"
            ],
            "enumDescriptions": [
                "Always",
                "Never"
            ],
            "description": "Enable automatic tasks - note that tasks won't run in an untrusted workspace.",
            "default": "on",
            "restricted": true,
            "defaultDefaultValue": "on",
            "scope": 3
        },
        "task.reconnection": {
            "type": "boolean",
            "description": "On window reload, reconnect to tasks that have problem matchers.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "task.saveBeforeRun": {
            "markdownDescription": "Save all dirty editors before running a task.",
            "type": "string",
            "enum": [
                "always",
                "never",
                "prompt"
            ],
            "enumDescriptions": [
                "Always saves all editors before running.",
                "Never saves editors before running.",
                "Prompts whether to save editors before running."
            ],
            "default": "always",
            "defaultDefaultValue": "always",
            "scope": 3,
            "restricted": false
        },
        "workbench.colorTheme": {
            "type": "string",
            "description": "Specifies the color theme used in the workbench.",
            "default": "Default Dark Modern",
            "enum": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Visual Studio Dark",
                "Default High Contrast",
                "Default Dark Modern",
                "Default Dark+",
                "Kimbie Dark",
                "Visual Studio Light",
                "Default High Contrast Light",
                "Default Light Modern",
                "Default Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "enumItemLabels": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Dark (Visual Studio)",
                "Dark High Contrast",
                "Dark Modern",
                "Dark+",
                "Kimbie Dark",
                "Light (Visual Studio)",
                "Light High Contrast",
                "Light Modern",
                "Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "errorMessage": "Theme is unknown or not installed.",
            "defaultDefaultValue": "Default Dark Modern",
            "scope": 3,
            "restricted": false
        },
        "workbench.preferredDarkColorTheme": {
            "type": "string",
            "markdownDescription": "Specifies the preferred color theme for dark OS appearance when `#window.autoDetectColorScheme#` is enabled.",
            "default": "Default Dark Modern",
            "enum": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Visual Studio Dark",
                "Default High Contrast",
                "Default Dark Modern",
                "Default Dark+",
                "Kimbie Dark",
                "Visual Studio Light",
                "Default High Contrast Light",
                "Default Light Modern",
                "Default Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "enumItemLabels": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Dark (Visual Studio)",
                "Dark High Contrast",
                "Dark Modern",
                "Dark+",
                "Kimbie Dark",
                "Light (Visual Studio)",
                "Light High Contrast",
                "Light Modern",
                "Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "errorMessage": "Theme is unknown or not installed.",
            "defaultDefaultValue": "Default Dark Modern",
            "scope": 3,
            "restricted": false
        },
        "workbench.preferredLightColorTheme": {
            "type": "string",
            "markdownDescription": "Specifies the preferred color theme for light OS appearance when `#window.autoDetectColorScheme#` is enabled.",
            "default": "Default Light Modern",
            "enum": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Visual Studio Dark",
                "Default High Contrast",
                "Default Dark Modern",
                "Default Dark+",
                "Kimbie Dark",
                "Visual Studio Light",
                "Default High Contrast Light",
                "Default Light Modern",
                "Default Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "enumItemLabels": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Dark (Visual Studio)",
                "Dark High Contrast",
                "Dark Modern",
                "Dark+",
                "Kimbie Dark",
                "Light (Visual Studio)",
                "Light High Contrast",
                "Light Modern",
                "Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "errorMessage": "Theme is unknown or not installed.",
            "defaultDefaultValue": "Default Light Modern",
            "scope": 3,
            "restricted": false
        },
        "workbench.preferredHighContrastColorTheme": {
            "type": "string",
            "markdownDescription": "Specifies the preferred color theme used in high contrast dark mode when `#window.autoDetectHighContrast#` is enabled.",
            "default": "Default High Contrast",
            "enum": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Visual Studio Dark",
                "Default High Contrast",
                "Default Dark Modern",
                "Default Dark+",
                "Kimbie Dark",
                "Visual Studio Light",
                "Default High Contrast Light",
                "Default Light Modern",
                "Default Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "enumItemLabels": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Dark (Visual Studio)",
                "Dark High Contrast",
                "Dark Modern",
                "Dark+",
                "Kimbie Dark",
                "Light (Visual Studio)",
                "Light High Contrast",
                "Light Modern",
                "Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "errorMessage": "Theme is unknown or not installed.",
            "defaultDefaultValue": "Default High Contrast",
            "scope": 3,
            "restricted": false
        },
        "workbench.preferredHighContrastLightColorTheme": {
            "type": "string",
            "markdownDescription": "Specifies the preferred color theme used in high contrast light mode when `#window.autoDetectHighContrast#` is enabled.",
            "default": "Default High Contrast Light",
            "enum": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Visual Studio Dark",
                "Default High Contrast",
                "Default Dark Modern",
                "Default Dark+",
                "Kimbie Dark",
                "Visual Studio Light",
                "Default High Contrast Light",
                "Default Light Modern",
                "Default Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "enumItemLabels": [
                "Abyss",
                "Catppuccin Frappé",
                "Catppuccin Latte",
                "Catppuccin Macchiato",
                "Catppuccin Mocha",
                "Dark (Visual Studio)",
                "Dark High Contrast",
                "Dark Modern",
                "Dark+",
                "Kimbie Dark",
                "Light (Visual Studio)",
                "Light High Contrast",
                "Light Modern",
                "Light+",
                "Monokai",
                "Monokai Dimmed",
                "Quiet Light",
                "Red",
                "Solarized Dark",
                "Solarized Light",
                "Tomorrow Night Blue"
            ],
            "errorMessage": "Theme is unknown or not installed.",
            "defaultDefaultValue": "Default High Contrast Light",
            "scope": 3,
            "restricted": false
        },
        "workbench.iconTheme": {
            "type": [
                "string",
                "null"
            ],
            "default": "vs-seti",
            "description": "Specifies the file icon theme used in the workbench or 'null' to not show any file icons.",
            "enum": [
                null,
                "vs-minimal",
                "vs-seti",
                "catppuccin-mocha",
                "catppuccin-latte",
                "catppuccin-frappe",
                "catppuccin-macchiato"
            ],
            "enumItemLabels": [
                "None",
                "Minimal (Visual Studio Code)",
                "Seti (Visual Studio Code)",
                "Catppuccin Mocha",
                "Catppuccin Latte",
                "Catppuccin Frappé",
                "Catppuccin Macchiato"
            ],
            "enumDescriptions": [
                "No file icons",
                "",
                "",
                "",
                "",
                "",
                ""
            ],
            "errorMessage": "File icon theme is unknown or not installed.",
            "defaultDefaultValue": "vs-seti",
            "scope": 3,
            "restricted": false
        },
        "workbench.colorCustomizations": {
            "type": "object",
            "description": "Overrides colors from the currently selected color theme.",
            "allOf": [
                {
                    "$ref": "vscode://schemas/workbench-colors"
                },
                {
                    "properties": {
                        "[Abyss]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Catppuccin Frappé]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Catppuccin Latte]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Catppuccin Macchiato]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Catppuccin Mocha]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Visual Studio Dark]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Default High Contrast]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Default Dark Modern]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Default Dark+]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Kimbie Dark]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Visual Studio Light]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Default High Contrast Light]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Default Light Modern]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Default Light+]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Monokai]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Monokai Dimmed]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Quiet Light]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Red]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Solarized Dark]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Solarized Light]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        },
                        "[Tomorrow Night Blue]": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        }
                    },
                    "patternProperties": {
                        "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
                            "$ref": "vscode://schemas/workbench-colors",
                            "additionalProperties": false
                        }
                    }
                }
            ],
            "default": {},
            "defaultSnippets": [
                {
                    "body": {}
                }
            ],
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "workbench.productIconTheme": {
            "type": [
                "string",
                "null"
            ],
            "default": "Default",
            "description": "Specifies the product icon theme used.",
            "enum": [
                "Default",
                "icons-carbon"
            ],
            "enumItemLabels": [
                "Default",
                "Carbon Icons"
            ],
            "enumDescriptions": [
                "Default",
                ""
            ],
            "errorMessage": "Product icon theme is unknown or not installed.",
            "defaultDefaultValue": "Default",
            "scope": 3,
            "restricted": false
        },
        "window.autoDetectColorScheme": {
            "type": "boolean",
            "markdownDescription": "If set, automatically switch to the preferred color theme based on the OS appearance. If the OS appearance is dark, the theme specified at `#workbench.preferredDarkColorTheme#` is used, for light `#workbench.preferredLightColorTheme#`.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "editor.tokenColorCustomizations": {
            "description": "Overrides editor syntax colors and font style from the currently selected color theme.",
            "default": {
                "[*Light*]": {
                    "textMateRules": [
                        {
                            "scope": "ref.matchtext",
                            "settings": {
                                "foreground": "#000"
                            }
                        }
                    ]
                },
                "[*Dark*]": {
                    "textMateRules": [
                        {
                            "scope": "ref.matchtext",
                            "settings": {
                                "foreground": "#fff"
                            }
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "description": "Sets the colors and styles for comments",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "strings": {
                            "description": "Sets the colors and styles for strings literals.",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "keywords": {
                            "description": "Sets the colors and styles for keywords.",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "numbers": {
                            "description": "Sets the colors and styles for number literals.",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "types": {
                            "description": "Sets the colors and styles for type declarations and references.",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "functions": {
                            "description": "Sets the colors and styles for functions declarations and references.",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "variables": {
                            "description": "Sets the colors and styles for variables declarations and references.",
                            "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                        },
                        "textMateRules": {
                            "description": "Sets colors and styles using textmate theming rules (advanced).",
                            "$ref": "vscode://schemas/textmate-colors"
                        },
                        "semanticHighlighting": {
                            "description": "Whether semantic highlighting should be enabled for this theme.",
                            "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                            "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                            "type": "boolean"
                        }
                    },
                    "additionalProperties": false,
                    "patternProperties": {
                        "^\\[": {}
                    }
                },
                {
                    "properties": {
                        "[Abyss]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Frappé]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Latte]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Macchiato]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Mocha]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Visual Studio Dark]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default High Contrast]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Dark Modern]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Dark+]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Kimbie Dark]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Visual Studio Light]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default High Contrast Light]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Light Modern]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Light+]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Monokai]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Monokai Dimmed]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Quiet Light]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Red]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Solarized Dark]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Solarized Light]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Tomorrow Night Blue]": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "patternProperties": {
                        "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
                            "properties": {
                                "comments": {
                                    "description": "Sets the colors and styles for comments",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "strings": {
                                    "description": "Sets the colors and styles for strings literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "keywords": {
                                    "description": "Sets the colors and styles for keywords.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "numbers": {
                                    "description": "Sets the colors and styles for number literals.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "types": {
                                    "description": "Sets the colors and styles for type declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "functions": {
                                    "description": "Sets the colors and styles for functions declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "variables": {
                                    "description": "Sets the colors and styles for variables declarations and references.",
                                    "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                                },
                                "textMateRules": {
                                    "description": "Sets colors and styles using textmate theming rules (advanced).",
                                    "$ref": "vscode://schemas/textmate-colors"
                                },
                                "semanticHighlighting": {
                                    "description": "Whether semantic highlighting should be enabled for this theme.",
                                    "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                                    "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            ],
            "defaultDefaultValue": {},
            "defaultValueSource": {
                "id": "GitHub.copilot",
                "displayName": "GitHub Copilot"
            },
            "scope": 3,
            "restricted": false
        },
        "editor.semanticTokenColorCustomizations": {
            "description": "Overrides editor semantic token color and styles from the currently selected color theme.",
            "default": {},
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether semantic highlighting is enabled or disabled for this theme",
                            "suggestSortText": "0_enabled"
                        },
                        "rules": {
                            "$ref": "vscode://schemas/token-styling",
                            "description": "Semantic token styling rules for this theme.",
                            "suggestSortText": "0_rules"
                        }
                    },
                    "additionalProperties": false,
                    "patternProperties": {
                        "^\\[": {}
                    }
                },
                {
                    "properties": {
                        "[Abyss]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Frappé]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Latte]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Macchiato]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Catppuccin Mocha]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Visual Studio Dark]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default High Contrast]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Dark Modern]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Dark+]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Kimbie Dark]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Visual Studio Light]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default High Contrast Light]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Light Modern]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Default Light+]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Monokai]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Monokai Dimmed]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Quiet Light]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Red]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Solarized Dark]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Solarized Light]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        },
                        "[Tomorrow Night Blue]": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "patternProperties": {
                        "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Whether semantic highlighting is enabled or disabled for this theme",
                                    "suggestSortText": "0_enabled"
                                },
                                "rules": {
                                    "$ref": "vscode://schemas/token-styling",
                                    "description": "Semantic token styling rules for this theme.",
                                    "suggestSortText": "0_rules"
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                }
            ],
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "application.experimental.rendererProfiling": {
            "type": "boolean",
            "default": false,
            "tags": [
                "experimental"
            ],
            "markdownDescription": "When enabled slow renderers are automatically profiled",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "comments.openPanel": {
            "enum": [
                "neverOpen",
                "openOnSessionStart",
                "openOnSessionStartWithComments"
            ],
            "default": "openOnSessionStartWithComments",
            "description": "Controls when the comments panel should open.",
            "restricted": false,
            "markdownDeprecationMessage": "This setting is deprecated in favor of `comments.openView`.",
            "defaultDefaultValue": "openOnSessionStartWithComments",
            "scope": 3,
            "deprecationMessage": "This setting is deprecated in favor of `comments.openView`."
        },
        "comments.openView": {
            "enum": [
                "never",
                "file",
                "firstFile",
                "firstFileUnresolved"
            ],
            "enumDescriptions": [
                "The comments view will never be opened.",
                "The comments view will open when a file with comments is active.",
                "If the comments view has not been opened yet during this session it will open the first time during a session that a file with comments is active.",
                "If the comments view has not been opened yet during this session and the comment is not resolved, it will open the first time during a session that a file with comments is active."
            ],
            "default": "firstFile",
            "description": "Controls when the comments view should open.",
            "restricted": false,
            "defaultDefaultValue": "firstFile",
            "scope": 3
        },
        "comments.useRelativeTime": {
            "type": "boolean",
            "default": true,
            "description": "Determines if relative time will be used in comment timestamps (ex. '1 day ago').",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "comments.visible": {
            "type": "boolean",
            "default": true,
            "description": "Controls the visibility of the comments bar and comment threads in editors that have commenting ranges and comments. Comments are still accessible via the Comments view and will cause commenting to be toggled on in the same way running the command \"Comments: Toggle Editor Commenting\" toggles comments.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "comments.maxHeight": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the comments widget scrolls or expands.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "comments.collapseOnResolve": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the comment thread should collapse when the thread is resolved.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.terminal": {
            "description": "Provide information about how to access the terminal accessibility help menu when the terminal is focused",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.diffEditor": {
            "description": "Provide information about how to navigate changes in the diff editor when it is focused",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.panelChat": {
            "description": "Provide information about how to access the chat help menu when the chat input is focused",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.inlineChat": {
            "description": "Provide information about how to access the inline editor chat accessibility help menu and alert with hints which describe how to use the feature when the input is focused",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.inlineCompletions": {
            "description": "Provide information about how to access the inline completions hover and accessible view",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.keybindingsEditor": {
            "description": "Provide information about how to change a keybinding in the keybindings editor when a row is focused",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.notebook": {
            "description": "Provide information about how to focus the cell container or inner editor when a notebook cell is focused.",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.hover": {
            "description": "Provide information about how to open the hover in an accessible view.",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.notification": {
            "description": "Provide information about how to open the notification in an accessible view.",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.emptyEditorHint": {
            "description": "Provide information about relevant actions in an empty text editor.",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "accessibility.verbosity.comments": {
            "description": "Provide information about actions that can be taken in the comment widget or in a file which contains comments.",
            "type": "boolean",
            "default": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.navigation.allowNavigateToSurroundingCells": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled cursor can navigate to the next/previous cell when the current cursor in the cell editor is at the first/last line.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.diff.ignoreMetadata": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Hide Metadata Differences",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.diff.ignoreOutputs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Hide Outputs Differences",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "screencastMode.verticalOffset": {
            "type": "number",
            "default": 20,
            "minimum": 0,
            "maximum": 90,
            "description": "Controls the vertical offset of the screencast mode overlay from the bottom as a percentage of the workbench height.",
            "defaultDefaultValue": 20,
            "scope": 3,
            "restricted": false
        },
        "screencastMode.fontSize": {
            "type": "number",
            "default": 56,
            "minimum": 20,
            "maximum": 100,
            "description": "Controls the font size (in pixels) of the screencast mode keyboard.",
            "defaultDefaultValue": 56,
            "scope": 3,
            "restricted": false
        },
        "screencastMode.keyboardOptions": {
            "type": "object",
            "description": "Options for customizing the keyboard overlay in screencast mode.",
            "properties": {
                "showKeys": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show raw keys."
                },
                "showKeybindings": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show keyboard shortcuts."
                },
                "showCommands": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show command names."
                },
                "showCommandGroups": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show command group names, when commands are also shown."
                },
                "showSingleEditorCursorMoves": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show single editor cursor move commands."
                }
            },
            "default": {
                "showKeys": true,
                "showKeybindings": true,
                "showCommands": true,
                "showCommandGroups": false,
                "showSingleEditorCursorMoves": true
            },
            "additionalProperties": false,
            "defaultDefaultValue": {
                "showKeys": true,
                "showKeybindings": true,
                "showCommands": true,
                "showCommandGroups": false,
                "showSingleEditorCursorMoves": true
            },
            "scope": 3,
            "restricted": false
        },
        "screencastMode.keyboardOverlayTimeout": {
            "type": "number",
            "default": 800,
            "minimum": 500,
            "maximum": 5000,
            "description": "Controls how long (in milliseconds) the keyboard overlay is shown in screencast mode.",
            "defaultDefaultValue": 800,
            "scope": 3,
            "restricted": false
        },
        "screencastMode.mouseIndicatorColor": {
            "type": "string",
            "format": "color-hex",
            "default": "#FF0000",
            "description": "Controls the color in hex (#RGB, #RGBA, #RRGGBB or #RRGGBBAA) of the mouse indicator in screencast mode.",
            "defaultDefaultValue": "#FF0000",
            "scope": 3,
            "restricted": false
        },
        "screencastMode.mouseIndicatorSize": {
            "type": "number",
            "default": 20,
            "minimum": 20,
            "maximum": 100,
            "description": "Controls the size (in pixels) of the mouse indicator in screencast mode.",
            "defaultDefaultValue": 20,
            "scope": 3,
            "restricted": false
        },
        "interactiveWindow.alwaysScrollOnNewCell": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Automatically scroll the interactive window to show the output of the last statement executed. If this value is false, the window will only scroll if the last cell was already the one scrolled to.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "mergeEditor.diffAlgorithm": {
            "type": "string",
            "enum": [
                "legacy",
                "advanced"
            ],
            "default": "advanced",
            "markdownEnumDescriptions": [
                "Uses the legacy diffing algorithm.",
                "Uses the advanced diffing algorithm."
            ],
            "defaultDefaultValue": "advanced",
            "scope": 3,
            "restricted": false
        },
        "mergeEditor.showDeletionMarkers": {
            "type": "boolean",
            "default": true,
            "description": "Controls if deletions in base or one of the inputs should be indicated by a vertical bar.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "workbench.settings.enableNaturalLanguageSearch": {
            "type": "boolean",
            "description": "Controls whether to enable the natural language search mode for settings. The natural language search is provided by a Microsoft online service.",
            "default": true,
            "scope": 3,
            "tags": [
                "usesOnlineServices"
            ],
            "defaultDefaultValue": true,
            "restricted": false
        },
        "workbench.settings.settingsSearchTocBehavior": {
            "type": "string",
            "enum": [
                "hide",
                "filter"
            ],
            "enumDescriptions": [
                "Hide the Table of Contents while searching. The search results will not be grouped by category, and instead will be sorted by similarity to the query, with exact keyword matches coming first.",
                "Filter the Table of Contents to just categories that have matching settings. Clicking a category will filter the results to that category. The search results will be grouped by category."
            ],
            "description": "Controls the behavior of the settings editor Table of Contents while searching.",
            "default": "filter",
            "scope": 3,
            "defaultDefaultValue": "filter",
            "restricted": false
        },
        "files.refactoring.autoSave": {
            "description": "Controls if files that were part of a refactoring are saved automatically",
            "default": true,
            "type": "boolean",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.allowBreakpointsEverywhere": {
            "type": "boolean",
            "description": "Allow setting breakpoints in any file.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.openExplorerOnEnd": {
            "type": "boolean",
            "description": "Automatically open the explorer view at the end of a debug session.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.inlineValues": {
            "type": "string",
            "enum": [
                "on",
                "off",
                "auto"
            ],
            "description": "Show variable values inline in editor while debugging.",
            "enumDescriptions": [
                "Always show variable values inline in editor while debugging.",
                "Never show variable values inline in editor while debugging.",
                "Show variable values inline in editor while debugging when the language supports inline value locations."
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "debug.toolBarLocation": {
            "enum": [
                "floating",
                "docked",
                "commandCenter",
                "hidden"
            ],
            "markdownDescription": "Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, `commandCenter` (requires `#window.commandCenter#`), or `hidden`.",
            "default": "floating",
            "markdownEnumDescriptions": [
                "Show debug toolbar in all views.",
                "Show debug toolbar only in debug views.",
                "`(Experimental)` Show debug toolbar in the command center.",
                "Do not show debug toolbar."
            ],
            "defaultDefaultValue": "floating",
            "scope": 3,
            "restricted": false
        },
        "debug.showInStatusBar": {
            "enum": [
                "never",
                "always",
                "onFirstSessionStart"
            ],
            "enumDescriptions": [
                "Never show debug in Status bar",
                "Always show debug in Status bar",
                "Show debug in Status bar only after debug was started for the first time"
            ],
            "description": "Controls when the debug Status bar should be visible.",
            "default": "onFirstSessionStart",
            "defaultDefaultValue": "onFirstSessionStart",
            "scope": 3,
            "restricted": false
        },
        "debug.internalConsoleOptions": {
            "enum": [
                "neverOpen",
                "openOnSessionStart",
                "openOnFirstSessionStart"
            ],
            "default": "openOnFirstSessionStart",
            "description": "Controls when the internal Debug Console should open.",
            "defaultDefaultValue": "openOnFirstSessionStart",
            "scope": 3,
            "restricted": false
        },
        "debug.console.closeOnEnd": {
            "type": "boolean",
            "description": "Controls if the Debug Console should be automatically closed when the debug session ends.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.terminal.clearBeforeReusing": {
            "type": "boolean",
            "description": "Before starting a new debug session in an integrated or external terminal, clear the terminal.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.openDebug": {
            "enum": [
                "neverOpen",
                "openOnSessionStart",
                "openOnFirstSessionStart",
                "openOnDebugBreak"
            ],
            "default": "openOnDebugBreak",
            "description": "Controls when the debug view should open.",
            "defaultDefaultValue": "openOnDebugBreak",
            "scope": 3,
            "restricted": false
        },
        "debug.showSubSessionsInToolBar": {
            "type": "boolean",
            "description": "Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.console.fontSize": {
            "type": "number",
            "description": "Controls the font size in pixels in the Debug Console.",
            "default": 12,
            "defaultDefaultValue": 12,
            "scope": 3,
            "restricted": false
        },
        "debug.console.fontFamily": {
            "type": "string",
            "description": "Controls the font family in the Debug Console.",
            "default": "default",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "debug.console.lineHeight": {
            "type": "number",
            "description": "Controls the line height in pixels in the Debug Console. Use 0 to compute the line height from the font size.",
            "default": 0,
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "debug.console.wordWrap": {
            "type": "boolean",
            "description": "Controls if the lines should wrap in the Debug Console.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.console.historySuggestions": {
            "type": "boolean",
            "description": "Controls if the Debug Console should suggest previously typed input.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.console.collapseIdenticalLines": {
            "type": "boolean",
            "description": "Controls if the Debug Console should collapse identical lines and show a number of occurrences with a badge.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.console.acceptSuggestionOnEnter": {
            "enum": [
                "off",
                "on"
            ],
            "description": "Controls whether suggestions should be accepted on Enter in the Debug Console. Enter is also used to evaluate whatever is typed in the Debug Console.",
            "default": "off",
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "launch": {
            "type": "object",
            "description": "Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.",
            "default": {
                "configurations": [],
                "compounds": []
            },
            "$ref": "vscode://schemas/launch",
            "defaultDefaultValue": {
                "configurations": [],
                "compounds": []
            },
            "scope": 3,
            "restricted": false
        },
        "debug.focusWindowOnBreak": {
            "type": "boolean",
            "description": "Controls whether the workbench window should be focused when the debugger breaks.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.focusEditorOnBreak": {
            "type": "boolean",
            "description": "Controls whether the editor should be focused when the debugger breaks.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.onTaskErrors": {
            "enum": [
                "debugAnyway",
                "showErrors",
                "prompt",
                "abort"
            ],
            "enumDescriptions": [
                "Ignore task errors and start debugging.",
                "Show the Problems view and do not start debugging.",
                "Prompt user.",
                "Cancel debugging."
            ],
            "description": "Controls what to do when errors are encountered after running a preLaunchTask.",
            "default": "prompt",
            "defaultDefaultValue": "prompt",
            "scope": 3,
            "restricted": false
        },
        "debug.showBreakpointsInOverviewRuler": {
            "type": "boolean",
            "description": "Controls whether breakpoints should be shown in the overview ruler.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.showInlineBreakpointCandidates": {
            "type": "boolean",
            "description": "Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.confirmOnExit": {
            "description": "Controls whether to confirm when the window closes if there are active debug sessions.",
            "type": "string",
            "enum": [
                "never",
                "always"
            ],
            "enumDescriptions": [
                "Never confirm.",
                "Always confirm if there are debug sessions."
            ],
            "default": "never",
            "defaultDefaultValue": "never",
            "scope": 3,
            "restricted": false
        },
        "debug.disassemblyView.showSourceCode": {
            "type": "boolean",
            "default": true,
            "description": "Show Source Code in Disassembly View.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "debug.autoExpandLazyVariables": {
            "type": "boolean",
            "default": false,
            "description": "Automatically show values for variables that are lazily resolved by the debugger, such as getters.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "debug.enableStatusBarColor": {
            "type": "boolean",
            "description": "Color status bar when debugger is active",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "chat.editor.fontSize": {
            "type": "number",
            "description": "Controls the font size in pixels in chat codeblocks.",
            "default": 12,
            "defaultDefaultValue": 12,
            "scope": 3,
            "restricted": false
        },
        "chat.editor.fontFamily": {
            "type": "string",
            "description": "Controls the font family in chat codeblocks.",
            "default": "default",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "chat.editor.fontWeight": {
            "type": "string",
            "description": "Controls the font weight in chat codeblocks.",
            "default": "default",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "chat.editor.wordWrap": {
            "type": "string",
            "description": "Controls whether lines should wrap in chat codeblocks.",
            "default": "off",
            "enum": [
                "on",
                "off"
            ],
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "chat.editor.lineHeight": {
            "type": "number",
            "description": "Controls the line height in pixels in chat codeblocks. Use 0 to compute the line height from the font size.",
            "default": 0,
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "files.associations": {
            "type": "object",
            "markdownDescription": "Configure [glob patterns](https://aka.ms/vscode-glob-patterns) of file associations to languages (for example `\"*.extension\": \"html\"`). Patterns will match on the absolute path of a file if they contain a path separator and will match on the name of the file otherwise. These have precedence over the default associations of the languages installed.",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "scope": 3,
            "restricted": false
        },
        "files.enableTrash": {
            "type": "boolean",
            "default": true,
            "description": "Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "files.autoSave": {
            "type": "string",
            "enum": [
                "off",
                "afterDelay",
                "onFocusChange",
                "onWindowChange"
            ],
            "markdownEnumDescriptions": [
                "An editor with changes is never automatically saved.",
                "An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.",
                "An editor with changes is automatically saved when the editor loses focus.",
                "An editor with changes is automatically saved when the window loses focus."
            ],
            "default": "off",
            "markdownDescription": "Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.",
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "files.autoSaveDelay": {
            "type": "number",
            "default": 1000,
            "minimum": 0,
            "markdownDescription": "Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `afterDelay`.",
            "defaultDefaultValue": 1000,
            "scope": 3,
            "restricted": false
        },
        "files.defaultLanguage": {
            "type": "string",
            "markdownDescription": "The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.",
            "default": "",
            "scope": 3,
            "restricted": false
        },
        "files.readonlyFromPermissions": {
            "type": "boolean",
            "markdownDescription": "Marks files as read-only when their file permissions indicate as such. This can be overridden via `#files.readonlyInclude#` and `#files.readonlyExclude#` settings.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "files.restoreUndoStack": {
            "type": "boolean",
            "description": "Restore the undo stack when a file is reopened.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "files.simpleDialog.enable": {
            "type": "boolean",
            "description": "Enables the simple file dialog for opening and saving files and folders. The simple file dialog replaces the system file dialog when enabled.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "files.participants.timeout": {
            "type": "number",
            "default": 60000,
            "markdownDescription": "Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.",
            "defaultDefaultValue": 60000,
            "scope": 3,
            "restricted": false
        },
        "explorer.openEditors.visible": {
            "type": "number",
            "description": "The initial maximum number of editors shown in the Open Editors pane. Exceeding this limit will show a scroll bar and allow resizing the pane to display more items.",
            "default": 9,
            "minimum": 1,
            "defaultDefaultValue": 9,
            "scope": 3,
            "restricted": false
        },
        "explorer.openEditors.minVisible": {
            "type": "number",
            "description": "The minimum number of editor slots pre-allocated in the Open Editors pane. If set to 0 the Open Editors pane will dynamically resize based on the number of editors.",
            "default": 0,
            "minimum": 0,
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "explorer.openEditors.sortOrder": {
            "type": "string",
            "enum": [
                "editorOrder",
                "alphabetical",
                "fullPath"
            ],
            "description": "Controls the sorting order of editors in the Open Editors pane.",
            "enumDescriptions": [
                "Editors are ordered in the same order editor tabs are shown.",
                "Editors are ordered alphabetically by tab name inside each editor group.",
                "Editors are ordered alphabetically by full path inside each editor group."
            ],
            "default": "editorOrder",
            "defaultDefaultValue": "editorOrder",
            "scope": 3,
            "restricted": false
        },
        "explorer.autoReveal": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "focusNoScroll"
            ],
            "default": true,
            "enumDescriptions": [
                "Files will be revealed and selected.",
                "Files will not be revealed and selected.",
                "Files will not be scrolled into view, but will still be focused."
            ],
            "description": "Controls whether the Explorer should automatically reveal and select files when opening them.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.autoRevealExclude": {
            "type": "object",
            "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders from being revealed and selected in the Explorer when they are opened. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths.",
            "default": {
                "**/node_modules": true,
                "**/bower_components": true
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "when": {
                                "type": "string",
                                "pattern": "\\w*\\$\\(basename\\)\\w*",
                                "default": "$(basename).ext",
                                "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
                            }
                        }
                    }
                ]
            },
            "defaultDefaultValue": {
                "**/node_modules": true,
                "**/bower_components": true
            },
            "scope": 3,
            "restricted": false
        },
        "explorer.enableDragAndDrop": {
            "type": "boolean",
            "description": "Controls whether the Explorer should allow to move files and folders via drag and drop. This setting only effects drag and drop from inside the Explorer.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.confirmDragAndDrop": {
            "type": "boolean",
            "description": "Controls whether the Explorer should ask for confirmation to move files and folders via drag and drop.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.confirmDelete": {
            "type": "boolean",
            "description": "Controls whether the Explorer should ask for confirmation when deleting a file via the trash.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.enableUndo": {
            "type": "boolean",
            "description": "Controls whether the Explorer should support undoing file and folder operations.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.confirmUndo": {
            "type": "string",
            "enum": [
                "verbose",
                "default",
                "light"
            ],
            "description": "Controls whether the Explorer should ask for confirmation when undoing.",
            "default": "default",
            "enumDescriptions": [
                "Explorer will prompt before all undo operations.",
                "Explorer will prompt before destructive undo operations.",
                "Explorer will not prompt before undo operations when focused."
            ],
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "explorer.expandSingleFolderWorkspaces": {
            "type": "boolean",
            "description": "Controls whether the Explorer should expand multi-root workspaces containing only one folder during initialization",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.sortOrder": {
            "type": "string",
            "enum": [
                "default",
                "mixed",
                "filesFirst",
                "type",
                "modified",
                "foldersNestsFiles"
            ],
            "default": "default",
            "enumDescriptions": [
                "Files and folders are sorted by their names. Folders are displayed before files.",
                "Files and folders are sorted by their names. Files are interwoven with folders.",
                "Files and folders are sorted by their names. Files are displayed before folders.",
                "Files and folders are grouped by extension type then sorted by their names. Folders are displayed before files.",
                "Files and folders are sorted by last modified date in descending order. Folders are displayed before files.",
                "Files and folders are sorted by their names. Folders are displayed before files. Files with nested children are displayed before other files."
            ],
            "markdownDescription": "Controls the property-based sorting of files and folders in the Explorer. When `#explorer.fileNesting.enabled#` is enabled, also controls sorting of nested files.",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "explorer.sortOrderLexicographicOptions": {
            "type": "string",
            "enum": [
                "default",
                "upper",
                "lower",
                "unicode"
            ],
            "default": "default",
            "enumDescriptions": [
                "Uppercase and lowercase names are mixed together.",
                "Uppercase names are grouped together before lowercase names.",
                "Lowercase names are grouped together before uppercase names.",
                "Names are sorted in Unicode order."
            ],
            "description": "Controls the lexicographic sorting of file and folder names in the Explorer.",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "explorer.decorations.colors": {
            "type": "boolean",
            "description": "Controls whether file decorations should use colors.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.decorations.badges": {
            "type": "boolean",
            "description": "Controls whether file decorations should use badges.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.incrementalNaming": {
            "type": "string",
            "enum": [
                "simple",
                "smart",
                "disabled"
            ],
            "enumDescriptions": [
                "Appends the word \"copy\" at the end of the duplicated name potentially followed by a number.",
                "Adds a number at the end of the duplicated name. If some number is already part of the name, tries to increase that number.",
                "Disables incremental naming. If two files with the same name exist you will be prompted to overwrite the existing file."
            ],
            "description": "Controls what naming strategy to use when a giving a new name to a duplicated Explorer item on paste.",
            "default": "simple",
            "defaultDefaultValue": "simple",
            "scope": 3,
            "restricted": false
        },
        "explorer.compactFolders": {
            "type": "boolean",
            "description": "Controls whether the Explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "explorer.copyRelativePathSeparator": {
            "type": "string",
            "enum": [
                "/",
                "\\",
                "auto"
            ],
            "enumDescriptions": [
                "Use slash as path separation character.",
                "Use backslash as path separation character.",
                "Uses operating system specific path separation character."
            ],
            "description": "The path separation character used when copying relative file paths.",
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "explorer.fileNesting.expand": {
            "type": "boolean",
            "markdownDescription": "Controls whether file nests are automatically expanded. `#explorer.fileNesting.enabled#` must be set for this to take effect.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "problems.autoReveal": {
            "description": "Controls whether Problems view should automatically reveal files when opening them.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "problems.defaultViewMode": {
            "description": "Controls the default view mode of the Problems view.",
            "type": "string",
            "default": "tree",
            "enum": [
                "table",
                "tree"
            ],
            "defaultDefaultValue": "tree",
            "scope": 3,
            "restricted": false
        },
        "problems.showCurrentInStatus": {
            "description": "When enabled shows the current problem in the status bar.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "problems.sortOrder": {
            "description": "Controls the order in which problems are navigated.",
            "type": "string",
            "default": "severity",
            "enum": [
                "severity",
                "position"
            ],
            "enumDescriptions": [
                "Navigate problems ordered by severity",
                "Navigate problems ordered by position"
            ],
            "defaultDefaultValue": "severity",
            "scope": 3,
            "restricted": false
        },
        "outline.icons": {
            "description": "Render Outline elements with icons.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "outline.problems.enabled": {
            "description": "Show errors and warnings on Outline elements.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "outline.problems.colors": {
            "description": "Use colors for errors and warnings on Outline elements.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "outline.problems.badges": {
            "description": "Use badges for errors and warnings on Outline elements.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "output.smartScroll.enabled": {
            "type": "boolean",
            "description": "Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.",
            "default": true,
            "scope": 3,
            "tags": [
                "output"
            ],
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testing.autoRun.delay": {
            "type": "integer",
            "minimum": 0,
            "description": "How long to wait, in milliseconds, after a test is marked as outdated and starting a new run.",
            "default": 1000,
            "defaultDefaultValue": 1000,
            "scope": 3,
            "restricted": false
        },
        "testing.automaticallyOpenPeekView": {
            "description": "Configures when the error Peek view is automatically opened.",
            "enum": [
                "failureAnywhere",
                "failureInVisibleDocument",
                "never"
            ],
            "default": "failureInVisibleDocument",
            "enumDescriptions": [
                "Open automatically no matter where the failure is.",
                "Open automatically when a test fails in a visible document.",
                "Never automatically open."
            ],
            "defaultDefaultValue": "failureInVisibleDocument",
            "scope": 3,
            "restricted": false
        },
        "testing.showAllMessages": {
            "description": "Controls whether to show messages from all test runs.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "testing.automaticallyOpenPeekViewDuringAutoRun": {
            "description": "Controls whether to automatically open the Peek view during continuous run mode.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "testing.countBadge": {
            "description": "Controls the count badge on the Testing icon on the Activity Bar.",
            "enum": [
                "failed",
                "off",
                "passed",
                "skipped"
            ],
            "enumDescriptions": [
                "Show the number of failed tests",
                "Disable the testing count badge",
                "Show the number of passed tests",
                "Show the number of skipped tests"
            ],
            "default": "failed",
            "defaultDefaultValue": "failed",
            "scope": 3,
            "restricted": false
        },
        "testing.followRunningTest": {
            "description": "Controls whether the running test should be followed in the Test Explorer view.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "testing.defaultGutterClickAction": {
            "description": "Controls the action to take when left-clicking on a test decoration in the gutter.",
            "enum": [
                "run",
                "debug",
                "contextMenu"
            ],
            "enumDescriptions": [
                "Run the test.",
                "Debug the test.",
                "Open the context menu for more options."
            ],
            "default": "run",
            "defaultDefaultValue": "run",
            "scope": 3,
            "restricted": false
        },
        "testing.gutterEnabled": {
            "description": "Controls whether test decorations are shown in the editor gutter.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "testing.saveBeforeTest": {
            "description": "Control whether save all dirty editors before running a test.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "testing.openTesting": {
            "enum": [
                "neverOpen",
                "openOnTestStart",
                "openOnTestFailure",
                "openExplorerOnTestStart"
            ],
            "enumDescriptions": [
                "Never automatically open the testing views",
                "Open the test results view when tests start",
                "Open the test result view on any test failure",
                "Open the test explorer when tests start"
            ],
            "default": "openOnTestStart",
            "description": "Controls when the testing view should open.",
            "defaultDefaultValue": "openOnTestStart",
            "scope": 3,
            "restricted": false
        },
        "testing.alwaysRevealTestOnStateChange": {
            "markdownDescription": "Always reveal the executed test when `#testing.followRunningTest#` is on. If this setting is turned off, only failed tests will be revealed.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "timeline.pageSize": {
            "type": [
                "number",
                "null"
            ],
            "default": null,
            "markdownDescription": "The number of items to show in the Timeline view by default and when loading more items. Setting to `null` (the default) will automatically choose a page size based on the visible area of the Timeline view.",
            "defaultDefaultValue": null,
            "scope": 3,
            "restricted": false
        },
        "timeline.pageOnScroll": {
            "type": "boolean",
            "default": false,
            "description": "Experimental. Controls whether the Timeline view will load the next page of items when you scroll to the end of the list.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "window.zoomLevel": {
            "type": "number",
            "default": 0,
            "minimum": -5,
            "description": "Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
            "ignoreSync": true,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "window.closeWhenEmpty": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "telemetry.enableCrashReporter": {
            "type": "boolean",
            "description": "Enable crash reports to be collected. This helps us improve stability. \nThis option requires restart to take effect.",
            "default": true,
            "tags": [
                "usesOnlineServices",
                "telemetry"
            ],
            "markdownDeprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false,
            "deprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting."
        },
        "keyboard.touchbar.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enables the macOS touchbar buttons on the keyboard if available.",
            "included": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "keyboard.touchbar.ignored": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "A set of identifiers for entries in the touchbar that should not show up (for example `workbench.action.navigateBack`).",
            "included": true,
            "defaultDefaultValue": [],
            "scope": 3,
            "restricted": false
        },
        "workbench.experimental.cloudChanges.autoStore": {
            "enum": [
                "onShutdown",
                "off"
            ],
            "enumDescriptions": [
                "Automatically store current working changes in the cloud on window close.",
                "Never attempt to automatically store working changes in the cloud."
            ],
            "type": "string",
            "tags": [
                "experimental",
                "usesOnlineServices"
            ],
            "default": "off",
            "markdownDescription": "Controls whether to automatically store available working changes in the cloud for the current workspace. This setting has no effect in the web.",
            "defaultDefaultValue": "off",
            "scope": 3,
            "restricted": false
        },
        "workbench.cloudChanges.autoResume": {
            "enum": [
                "onReload",
                "off"
            ],
            "enumDescriptions": [
                "Automatically resume available working changes from the cloud on window reload.",
                "Never attempt to resume working changes from the cloud."
            ],
            "type": "string",
            "tags": [
                "usesOnlineServices"
            ],
            "default": "onReload",
            "markdownDescription": "Controls whether to automatically resume available working changes stored in the cloud for the current workspace.",
            "defaultDefaultValue": "onReload",
            "scope": 3,
            "restricted": false
        },
        "workbench.cloudChanges.continueOn": {
            "enum": [
                "prompt",
                "off"
            ],
            "enumDescriptions": [
                "Prompt the user to sign in to store working changes in the cloud with Continue Working On.",
                "Do not store working changes in the cloud with Continue Working On unless the user has already turned on Cloud Changes."
            ],
            "type": "string",
            "tags": [
                "usesOnlineServices"
            ],
            "default": "prompt",
            "markdownDescription": "Controls whether to prompt the user to store working changes in the cloud when using Continue Working On.",
            "defaultDefaultValue": "prompt",
            "scope": 3,
            "restricted": false
        },
        "workbench.experimental.cloudChanges.partialMatches.enabled": {
            "type": "boolean",
            "tags": [
                "experimental",
                "usesOnlineServices"
            ],
            "default": false,
            "markdownDescription": "Controls whether to surface cloud changes which partially match the current session.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "extensions.ignoreRecommendations": {
            "type": "boolean",
            "description": "When enabled, the notifications for extension recommendations will not be shown.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "extensions.showRecommendationsOnlyOnDemand": {
            "type": "boolean",
            "deprecationMessage": "This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default.",
            "default": false,
            "tags": [
                "usesOnlineServices"
            ],
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "extensions.closeExtensionDetailsOnViewChange": {
            "type": "boolean",
            "description": "When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "extensions.webWorker": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "auto"
            ],
            "enumDescriptions": [
                "The Web Worker Extension Host will always be launched.",
                "The Web Worker Extension Host will never be launched.",
                "The Web Worker Extension Host will be launched when a web extension needs it."
            ],
            "description": "Enable web worker extension host.",
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "extensions.supportVirtualWorkspaces": {
            "type": "object",
            "markdownDescription": "Override the virtual workspaces support of an extension.",
            "patternProperties": {
                "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false,
            "default": {},
            "defaultSnippets": [
                {
                    "body": {
                        "pub.name": false
                    }
                }
            ],
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "extensions.experimental.affinity": {
            "type": "object",
            "markdownDescription": "Configure an extension to execute in a different extension host process.",
            "patternProperties": {
                "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
                    "type": "integer",
                    "default": 1
                }
            },
            "additionalProperties": false,
            "default": {},
            "defaultSnippets": [
                {
                    "body": {
                        "pub.name": 1
                    }
                }
            ],
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "extensions.experimental.deferredStartupFinishedActivation": {
            "type": "boolean",
            "description": "When enabled, extensions which declare the `onStartupFinished` activation event will be activated after a timeout.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.outline.showCodeCells": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled notebook outline shows code cells.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.breadcrumbs.showCodeCells": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled notebook breadcrumbs contain code cells.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.gotoSymbols.showAllSymbols": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled goto symbol quickpick will display full code symbols from the notebook, as well as markdown headers.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.displayOrder": {
            "description": "Priority list for output mime types",
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "defaultDefaultValue": [],
            "scope": 3,
            "restricted": false
        },
        "notebook.cellToolbarLocation": {
            "description": "Where the cell toolbar should be shown, or whether it should be hidden.",
            "type": "object",
            "additionalProperties": {
                "markdownDescription": "Configure the cell toolbar position for for specific file types",
                "type": "string",
                "enum": [
                    "left",
                    "right",
                    "hidden"
                ]
            },
            "default": {
                "default": "right"
            },
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": {
                "default": "right"
            },
            "scope": 3,
            "restricted": false
        },
        "notebook.showCellStatusBar": {
            "description": "Whether the cell status bar should be shown.",
            "type": "string",
            "enum": [
                "hidden",
                "visible",
                "visibleAfterExecute"
            ],
            "enumDescriptions": [
                "The cell Status bar is always hidden.",
                "The cell Status bar is always visible.",
                "The cell Status bar is hidden until the cell has executed. Then it becomes visible to show the execution status."
            ],
            "default": "visible",
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": "visible",
            "scope": 3,
            "restricted": false
        },
        "notebook.diff.enablePreview": {
            "description": "Whether to use the enhanced text diff editor for notebook.",
            "type": "boolean",
            "default": true,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.diff.overviewRuler": {
            "description": "Whether to render the overview ruler in the diff editor for notebook.",
            "type": "boolean",
            "default": false,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.cellToolbarVisibility": {
            "markdownDescription": "Whether the cell toolbar should appear on hover or click.",
            "type": "string",
            "enum": [
                "hover",
                "click"
            ],
            "default": "click",
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": "click",
            "scope": 3,
            "restricted": false
        },
        "notebook.undoRedoPerCell": {
            "description": "Whether to use separate undo/redo stack for each cell.",
            "type": "boolean",
            "default": true,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.compactView": {
            "description": "Control whether the notebook editor should be rendered in a compact form. For example, when turned on, it will decrease the left margin width.",
            "type": "boolean",
            "default": true,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.cellFocusIndicator": {
            "description": "Controls where the focus indicator is rendered, either along the cell borders or on the left gutter.",
            "type": "string",
            "enum": [
                "border",
                "gutter"
            ],
            "default": "gutter",
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": "gutter",
            "scope": 3,
            "restricted": false
        },
        "notebook.insertToolbarLocation": {
            "description": "Control where the insert cell actions should appear.",
            "type": "string",
            "enum": [
                "betweenCells",
                "notebookToolbar",
                "both",
                "hidden"
            ],
            "enumDescriptions": [
                "A toolbar that appears on hover between cells.",
                "The toolbar at the top of the notebook editor.",
                "Both toolbars.",
                "The insert actions don't appear anywhere."
            ],
            "default": "both",
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": "both",
            "scope": 3,
            "restricted": false
        },
        "notebook.globalToolbar": {
            "description": "Control whether to render a global toolbar inside the notebook editor.",
            "type": "boolean",
            "default": true,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.stickyScroll.enabled": {
            "description": "Experimental. Control whether to render notebook Sticky Scroll headers in the notebook editor.",
            "type": "boolean",
            "default": false,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.consolidatedOutputButton": {
            "description": "Control whether outputs action should be rendered in the output toolbar.",
            "type": "boolean",
            "default": true,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.showFoldingControls": {
            "description": "Controls when the Markdown header folding arrow is shown.",
            "type": "string",
            "enum": [
                "always",
                "never",
                "mouseover"
            ],
            "enumDescriptions": [
                "The folding controls are always visible.",
                "Never show the folding controls and reduce the gutter size.",
                "The folding controls are visible only on mouseover."
            ],
            "default": "mouseover",
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": "mouseover",
            "scope": 3,
            "restricted": false
        },
        "notebook.dragAndDropEnabled": {
            "description": "Control whether the notebook editor should allow moving cells through drag and drop.",
            "type": "boolean",
            "default": true,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.consolidatedRunButton": {
            "description": "Control whether extra actions are shown in a dropdown next to the run button.",
            "type": "boolean",
            "default": false,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.globalToolbarShowLabel": {
            "description": "Control whether the actions on the notebook toolbar should render label or not.",
            "type": "string",
            "enum": [
                "always",
                "never",
                "dynamic"
            ],
            "default": "always",
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": "always",
            "scope": 3,
            "restricted": false
        },
        "notebook.output.textLineLimit": {
            "markdownDescription": "Controls how many lines of text are displayed in a text output. If `#notebook.output.scrolling#` is enabled, this setting is used to determine the scroll height of the output.",
            "type": "number",
            "default": 30,
            "tags": [
                "notebookLayout",
                "notebookOutputLayout"
            ],
            "defaultDefaultValue": 30,
            "scope": 3,
            "restricted": false
        },
        "notebook.markup.fontSize": {
            "markdownDescription": "Controls the font size in pixels of rendered markup in notebooks. When set to `0`, 120% of `#editor.fontSize#` is used.",
            "type": "number",
            "default": 0,
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "notebook.editorOptionsCustomizations": {
            "description": "Settings for code editors used in notebooks. This can be used to customize most editor.* settings.",
            "default": {},
            "allOf": [
                {
                    "properties": {
                        "editor.acceptSuggestionOnCommitCharacter": {
                            "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.acceptSuggestionOnEnter": {
                            "markdownEnumDescriptions": [
                                "",
                                "Only accept a suggestion with `Enter` when it makes a textual change.",
                                ""
                            ],
                            "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
                            "type": "string",
                            "enum": [
                                "on",
                                "smart",
                                "off"
                            ],
                            "default": "on",
                            "defaultDefaultValue": "on",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.accessibilitySupport": {
                            "type": "string",
                            "enum": [
                                "auto",
                                "on",
                                "off"
                            ],
                            "enumDescriptions": [
                                "Use platform APIs to detect when a Screen Reader is attached",
                                "Optimize for usage with a Screen Reader",
                                "Assume a screen reader is not attached"
                            ],
                            "default": "auto",
                            "tags": [
                                "accessibility"
                            ],
                            "description": "Controls if the UI should run in a mode where it is optimized for screen readers.",
                            "defaultDefaultValue": "auto",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.accessibilityPageSize": {
                            "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
                            "tags": [
                                "accessibility"
                            ],
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 1073741824,
                            "defaultDefaultValue": 10,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoClosingBrackets": {
                            "enumDescriptions": [
                                "",
                                "Use language configurations to determine when to autoclose brackets.",
                                "Autoclose brackets only when the cursor is to the left of whitespace.",
                                ""
                            ],
                            "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
                            "type": "string",
                            "enum": [
                                "always",
                                "languageDefined",
                                "beforeWhitespace",
                                "never"
                            ],
                            "default": "languageDefined",
                            "defaultDefaultValue": "languageDefined",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoClosingComments": {
                            "enumDescriptions": [
                                "",
                                "Use language configurations to determine when to autoclose comments.",
                                "Autoclose comments only when the cursor is to the left of whitespace.",
                                ""
                            ],
                            "description": "Controls whether the editor should automatically close comments after the user adds an opening comment.",
                            "type": "string",
                            "enum": [
                                "always",
                                "languageDefined",
                                "beforeWhitespace",
                                "never"
                            ],
                            "default": "languageDefined",
                            "defaultDefaultValue": "languageDefined",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.screenReaderAnnounceInlineSuggestion": {
                            "description": "Control whether inline suggestions are announced by a screen reader.",
                            "tags": [
                                "accessibility"
                            ],
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoClosingDelete": {
                            "enumDescriptions": [
                                "",
                                "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
                                ""
                            ],
                            "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
                            "type": "string",
                            "enum": [
                                "always",
                                "auto",
                                "never"
                            ],
                            "default": "auto",
                            "defaultDefaultValue": "auto",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoClosingOvertype": {
                            "enumDescriptions": [
                                "",
                                "Type over closing quotes or brackets only if they were automatically inserted.",
                                ""
                            ],
                            "description": "Controls whether the editor should type over closing quotes or brackets.",
                            "type": "string",
                            "enum": [
                                "always",
                                "auto",
                                "never"
                            ],
                            "default": "auto",
                            "defaultDefaultValue": "auto",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoClosingQuotes": {
                            "enumDescriptions": [
                                "",
                                "Use language configurations to determine when to autoclose quotes.",
                                "Autoclose quotes only when the cursor is to the left of whitespace.",
                                ""
                            ],
                            "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
                            "type": "string",
                            "enum": [
                                "always",
                                "languageDefined",
                                "beforeWhitespace",
                                "never"
                            ],
                            "default": "languageDefined",
                            "defaultDefaultValue": "languageDefined",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoIndent": {
                            "enumDescriptions": [
                                "The editor will not insert indentation automatically.",
                                "The editor will keep the current line's indentation.",
                                "The editor will keep the current line's indentation and honor language defined brackets.",
                                "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
                                "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
                            ],
                            "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
                            "type": "string",
                            "enum": [
                                "none",
                                "keep",
                                "brackets",
                                "advanced",
                                "full"
                            ],
                            "default": "full",
                            "defaultDefaultValue": "full",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.autoSurround": {
                            "enumDescriptions": [
                                "Use language configurations to determine when to automatically surround selections.",
                                "Surround with quotes but not brackets.",
                                "Surround with brackets but not quotes.",
                                ""
                            ],
                            "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
                            "type": "string",
                            "enum": [
                                "languageDefined",
                                "quotes",
                                "brackets",
                                "never"
                            ],
                            "default": "languageDefined",
                            "defaultDefaultValue": "languageDefined",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.bracketPairColorization.enabled": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.bracketPairColorization.independentColorPoolPerBracketType": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether each bracket type has its own independent color pool.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.guides.bracketPairs": {
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "enum": [
                                true,
                                "active",
                                false
                            ],
                            "enumDescriptions": [
                                "Enables bracket pair guides.",
                                "Enables bracket pair guides only for the active bracket pair.",
                                "Disables bracket pair guides."
                            ],
                            "default": false,
                            "description": "Controls whether bracket pair guides are enabled or not.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.guides.bracketPairsHorizontal": {
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "enum": [
                                true,
                                "active",
                                false
                            ],
                            "enumDescriptions": [
                                "Enables horizontal guides as addition to vertical bracket pair guides.",
                                "Enables horizontal guides only for the active bracket pair.",
                                "Disables horizontal bracket pair guides."
                            ],
                            "default": "active",
                            "description": "Controls whether horizontal bracket pair guides are enabled or not.",
                            "defaultDefaultValue": "active",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.guides.highlightActiveBracketPair": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the editor should highlight the active bracket pair.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.guides.indentation": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the editor should render indent guides.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.guides.highlightActiveIndentation": {
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "enum": [
                                true,
                                "always",
                                false
                            ],
                            "enumDescriptions": [
                                "Highlights the active indent guide.",
                                "Highlights the active indent guide even if bracket guides are highlighted.",
                                "Do not highlight the active indent guide."
                            ],
                            "default": true,
                            "description": "Controls whether the editor should highlight the active indent guide.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.codeLens": {
                            "description": "Controls whether the editor shows CodeLens.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.codeLensFontFamily": {
                            "description": "Controls the font family for CodeLens.",
                            "type": "string",
                            "default": "",
                            "defaultDefaultValue": "",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.codeLensFontSize": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100,
                            "markdownDescription": "Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.colorDecorators": {
                            "description": "Controls whether the editor should render the inline color decorators and color picker.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.colorDecoratorsLimit": {
                            "markdownDescription": "Controls the max number of color decorators that can be rendered in an editor at once.",
                            "type": "integer",
                            "default": 500,
                            "minimum": 1,
                            "maximum": 1000000,
                            "defaultDefaultValue": 500,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.columnSelection": {
                            "description": "Enable that the selection with the mouse and keys is doing column selection.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.comments.insertSpace": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether a space character is inserted when commenting.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.comments.ignoreEmptyLines": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.copyWithSyntaxHighlighting": {
                            "description": "Controls whether syntax highlighting should be copied into the clipboard.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.cursorBlinking": {
                            "description": "Control the cursor animation style.",
                            "type": "string",
                            "enum": [
                                "blink",
                                "smooth",
                                "phase",
                                "expand",
                                "solid"
                            ],
                            "default": "blink",
                            "defaultDefaultValue": "blink",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.cursorSmoothCaretAnimation": {
                            "enumDescriptions": [
                                "Smooth caret animation is disabled.",
                                "Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
                                "Smooth caret animation is always enabled."
                            ],
                            "description": "Controls whether the smooth caret animation should be enabled.",
                            "type": "string",
                            "enum": [
                                "off",
                                "explicit",
                                "on"
                            ],
                            "default": "off",
                            "defaultDefaultValue": "off",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.cursorStyle": {
                            "description": "Controls the cursor style.",
                            "type": "string",
                            "enum": [
                                "line",
                                "block",
                                "underline",
                                "line-thin",
                                "block-outline",
                                "underline-thin"
                            ],
                            "default": "line",
                            "defaultDefaultValue": "line",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.cursorSurroundingLines": {
                            "description": "Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 1073741824,
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.cursorSurroundingLinesStyle": {
                            "enumDescriptions": [
                                "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
                                "`cursorSurroundingLines` is enforced always."
                            ],
                            "markdownDescription": "Controls when `#cursorSurroundingLines#` should be enforced.",
                            "type": "string",
                            "enum": [
                                "default",
                                "all"
                            ],
                            "default": "default",
                            "defaultDefaultValue": "default",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.cursorWidth": {
                            "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 1073741824,
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.dragAndDrop": {
                            "description": "Controls whether the editor should allow moving selections via drag and drop.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.dropIntoEditor.enabled": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "Controls whether you can drag and drop a file into a text editor by holding down `shift` (instead of opening the file in an editor).",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.dropIntoEditor.showDropSelector": {
                            "type": "string",
                            "markdownDescription": "Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.",
                            "enum": [
                                "afterDrop",
                                "never"
                            ],
                            "enumDescriptions": [
                                "Show the drop selector widget after a file is dropped into the editor.",
                                "Never show the drop selector widget. Instead the default drop provider is always used."
                            ],
                            "default": "afterDrop",
                            "defaultDefaultValue": "afterDrop",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.emptySelectionClipboard": {
                            "description": "Controls whether copying without a selection copies the current line.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.experimentalWhitespaceRendering": {
                            "enumDescriptions": [
                                "Use a new rendering method with svgs.",
                                "Use a new rendering method with font characters.",
                                "Use the stable rendering method."
                            ],
                            "description": "Controls whether whitespace is rendered with a new, experimental method.",
                            "type": "string",
                            "enum": [
                                "svg",
                                "font",
                                "off"
                            ],
                            "default": "svg",
                            "defaultDefaultValue": "svg",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.fastScrollSensitivity": {
                            "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
                            "type": "number",
                            "default": 5,
                            "defaultDefaultValue": 5,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.find.cursorMoveOnType": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the cursor should jump to find matches while typing.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.find.seedSearchStringFromSelection": {
                            "type": "string",
                            "enum": [
                                "never",
                                "always",
                                "selection"
                            ],
                            "default": "always",
                            "enumDescriptions": [
                                "Never seed search string from the editor selection.",
                                "Always seed search string from the editor selection, including word at cursor position.",
                                "Only seed search string from the editor selection."
                            ],
                            "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
                            "defaultDefaultValue": "always",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.find.autoFindInSelection": {
                            "type": "string",
                            "enum": [
                                "never",
                                "always",
                                "multiline"
                            ],
                            "default": "never",
                            "enumDescriptions": [
                                "Never turn on Find in Selection automatically (default).",
                                "Always turn on Find in Selection automatically.",
                                "Turn on Find in Selection automatically when multiple lines of content are selected."
                            ],
                            "description": "Controls the condition for turning on Find in Selection automatically.",
                            "defaultDefaultValue": "never",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.find.globalFindClipboard": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
                            "included": true,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.find.addExtraSpaceOnTop": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.find.loop": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.folding": {
                            "description": "Controls whether the editor has code folding enabled.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.foldingStrategy": {
                            "enumDescriptions": [
                                "Use a language-specific folding strategy if available, else the indentation-based one.",
                                "Use the indentation-based folding strategy."
                            ],
                            "description": "Controls the strategy for computing folding ranges.",
                            "type": "string",
                            "enum": [
                                "auto",
                                "indentation"
                            ],
                            "default": "auto",
                            "defaultDefaultValue": "auto",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.foldingHighlight": {
                            "description": "Controls whether the editor should highlight folded ranges.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.foldingImportsByDefault": {
                            "description": "Controls whether the editor automatically collapses import ranges.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.foldingMaximumRegions": {
                            "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
                            "type": "integer",
                            "default": 5000,
                            "minimum": 10,
                            "maximum": 65000,
                            "defaultDefaultValue": 5000,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.unfoldOnClickAfterEndOfLine": {
                            "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.fontFamily": {
                            "description": "Controls the font family.",
                            "type": "string",
                            "default": "Menlo, Monaco, 'Courier New', monospace",
                            "defaultDefaultValue": "Menlo, Monaco, 'Courier New', monospace",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.fontLigatures": {
                            "anyOf": [
                                {
                                    "type": "boolean",
                                    "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
                                },
                                {
                                    "type": "string",
                                    "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
                                }
                            ],
                            "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.fontSize": {
                            "type": "number",
                            "minimum": 6,
                            "maximum": 100,
                            "default": 12,
                            "description": "Controls the font size in pixels.",
                            "defaultDefaultValue": 12,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.fontWeight": {
                            "anyOf": [
                                {
                                    "type": "number",
                                    "minimum": 1,
                                    "maximum": 1000,
                                    "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                                },
                                {
                                    "type": "string",
                                    "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                                },
                                {
                                    "enum": [
                                        "normal",
                                        "bold",
                                        "100",
                                        "200",
                                        "300",
                                        "400",
                                        "500",
                                        "600",
                                        "700",
                                        "800",
                                        "900"
                                    ]
                                }
                            ],
                            "default": "normal",
                            "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
                            "defaultDefaultValue": "normal",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.fontVariations": {
                            "anyOf": [
                                {
                                    "type": "boolean",
                                    "description": "Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property."
                                },
                                {
                                    "type": "string",
                                    "description": "Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings."
                                }
                            ],
                            "description": "Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.formatOnPaste": {
                            "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.formatOnType": {
                            "description": "Controls whether the editor should automatically format the line after typing.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.glyphMargin": {
                            "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.multiple": {
                            "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
                            "default": null,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.multipleDefinitions": {
                            "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
                            "type": "string",
                            "enum": [
                                "peek",
                                "gotoAndPeek",
                                "goto"
                            ],
                            "default": "peek",
                            "enumDescriptions": [
                                "Show Peek view of the results (default)",
                                "Go to the primary result and show a Peek view",
                                "Go to the primary result and enable Peek-less navigation to others"
                            ],
                            "defaultDefaultValue": "peek",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.multipleTypeDefinitions": {
                            "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
                            "type": "string",
                            "enum": [
                                "peek",
                                "gotoAndPeek",
                                "goto"
                            ],
                            "default": "peek",
                            "enumDescriptions": [
                                "Show Peek view of the results (default)",
                                "Go to the primary result and show a Peek view",
                                "Go to the primary result and enable Peek-less navigation to others"
                            ],
                            "defaultDefaultValue": "peek",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.multipleDeclarations": {
                            "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
                            "type": "string",
                            "enum": [
                                "peek",
                                "gotoAndPeek",
                                "goto"
                            ],
                            "default": "peek",
                            "enumDescriptions": [
                                "Show Peek view of the results (default)",
                                "Go to the primary result and show a Peek view",
                                "Go to the primary result and enable Peek-less navigation to others"
                            ],
                            "defaultDefaultValue": "peek",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.multipleImplementations": {
                            "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
                            "type": "string",
                            "enum": [
                                "peek",
                                "gotoAndPeek",
                                "goto"
                            ],
                            "default": "peek",
                            "enumDescriptions": [
                                "Show Peek view of the results (default)",
                                "Go to the primary result and show a Peek view",
                                "Go to the primary result and enable Peek-less navigation to others"
                            ],
                            "defaultDefaultValue": "peek",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.multipleReferences": {
                            "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
                            "type": "string",
                            "enum": [
                                "peek",
                                "gotoAndPeek",
                                "goto"
                            ],
                            "default": "peek",
                            "enumDescriptions": [
                                "Show Peek view of the results (default)",
                                "Go to the primary result and show a Peek view",
                                "Go to the primary result and enable Peek-less navigation to others"
                            ],
                            "defaultDefaultValue": "peek",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.alternativeDefinitionCommand": {
                            "type": "string",
                            "default": "editor.action.goToReferences",
                            "enum": [
                                "",
                                "editor.action.referenceSearch.trigger",
                                "editor.action.goToReferences",
                                "editor.action.peekImplementation",
                                "editor.action.goToImplementation",
                                "editor.action.peekTypeDefinition",
                                "editor.action.goToTypeDefinition",
                                "editor.action.peekDeclaration",
                                "editor.action.revealDeclaration",
                                "editor.action.peekDefinition",
                                "editor.action.revealDefinitionAside",
                                "editor.action.revealDefinition"
                            ],
                            "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
                            "defaultDefaultValue": "editor.action.goToReferences",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.alternativeTypeDefinitionCommand": {
                            "type": "string",
                            "default": "editor.action.goToReferences",
                            "enum": [
                                "",
                                "editor.action.referenceSearch.trigger",
                                "editor.action.goToReferences",
                                "editor.action.peekImplementation",
                                "editor.action.goToImplementation",
                                "editor.action.peekTypeDefinition",
                                "editor.action.goToTypeDefinition",
                                "editor.action.peekDeclaration",
                                "editor.action.revealDeclaration",
                                "editor.action.peekDefinition",
                                "editor.action.revealDefinitionAside",
                                "editor.action.revealDefinition"
                            ],
                            "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
                            "defaultDefaultValue": "editor.action.goToReferences",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.alternativeDeclarationCommand": {
                            "type": "string",
                            "default": "editor.action.goToReferences",
                            "enum": [
                                "",
                                "editor.action.referenceSearch.trigger",
                                "editor.action.goToReferences",
                                "editor.action.peekImplementation",
                                "editor.action.goToImplementation",
                                "editor.action.peekTypeDefinition",
                                "editor.action.goToTypeDefinition",
                                "editor.action.peekDeclaration",
                                "editor.action.revealDeclaration",
                                "editor.action.peekDefinition",
                                "editor.action.revealDefinitionAside",
                                "editor.action.revealDefinition"
                            ],
                            "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
                            "defaultDefaultValue": "editor.action.goToReferences",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.alternativeImplementationCommand": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "",
                                "editor.action.referenceSearch.trigger",
                                "editor.action.goToReferences",
                                "editor.action.peekImplementation",
                                "editor.action.goToImplementation",
                                "editor.action.peekTypeDefinition",
                                "editor.action.goToTypeDefinition",
                                "editor.action.peekDeclaration",
                                "editor.action.revealDeclaration",
                                "editor.action.peekDefinition",
                                "editor.action.revealDefinitionAside",
                                "editor.action.revealDefinition"
                            ],
                            "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
                            "defaultDefaultValue": "",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.gotoLocation.alternativeReferenceCommand": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "",
                                "editor.action.referenceSearch.trigger",
                                "editor.action.goToReferences",
                                "editor.action.peekImplementation",
                                "editor.action.goToImplementation",
                                "editor.action.peekTypeDefinition",
                                "editor.action.goToTypeDefinition",
                                "editor.action.peekDeclaration",
                                "editor.action.revealDeclaration",
                                "editor.action.peekDefinition",
                                "editor.action.revealDefinitionAside",
                                "editor.action.revealDefinition"
                            ],
                            "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
                            "defaultDefaultValue": "",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.hideCursorInOverviewRuler": {
                            "description": "Controls whether the cursor should be hidden in the overview ruler.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.hover.enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the hover is shown.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.hover.delay": {
                            "type": "number",
                            "default": 300,
                            "minimum": 0,
                            "maximum": 10000,
                            "description": "Controls the delay in milliseconds after which the hover is shown.",
                            "defaultDefaultValue": 300,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.hover.sticky": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the hover should remain visible when mouse is moved over it.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.hover.hidingDelay": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 300,
                            "description": "Controls the delay in milliseconds after thich the hover is hidden. Requires `editor.hover.sticky` to be enabled.",
                            "defaultDefaultValue": 300,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.hover.above": {
                            "type": "boolean",
                            "default": true,
                            "description": "Prefer showing hovers above the line, if there's space.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlineSuggest.enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether to automatically show inline suggestions in the editor.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlineSuggest.showToolbar": {
                            "type": "string",
                            "default": "onHover",
                            "enum": [
                                "always",
                                "onHover"
                            ],
                            "enumDescriptions": [
                                "Show the inline suggestion toolbar whenever an inline suggestion is shown.",
                                "Show the inline suggestion toolbar when hovering over an inline suggestion."
                            ],
                            "description": "Controls when to show the inline suggestion toolbar.",
                            "defaultDefaultValue": "onHover",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlineSuggest.suppressSuggestions": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.letterSpacing": {
                            "description": "Controls the letter spacing in pixels.",
                            "type": "number",
                            "default": 0,
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.lightbulb.enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enables the Code Action lightbulb in the editor.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.lineHeight": {
                            "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
                            "type": "number",
                            "default": 0,
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.lineNumbers": {
                            "type": "string",
                            "enum": [
                                "off",
                                "on",
                                "relative",
                                "interval"
                            ],
                            "enumDescriptions": [
                                "Line numbers are not rendered.",
                                "Line numbers are rendered as absolute number.",
                                "Line numbers are rendered as distance in lines to cursor position.",
                                "Line numbers are rendered every 10 lines."
                            ],
                            "default": "on",
                            "description": "Controls the display of line numbers.",
                            "defaultDefaultValue": "on",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.linkedEditing": {
                            "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.links": {
                            "description": "Controls whether the editor should detect links and make them clickable.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.matchBrackets": {
                            "description": "Highlight matching brackets.",
                            "type": "string",
                            "enum": [
                                "always",
                                "near",
                                "never"
                            ],
                            "default": "always",
                            "defaultDefaultValue": "always",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the minimap is shown.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.autohide": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether the minimap is hidden automatically.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.size": {
                            "type": "string",
                            "enum": [
                                "proportional",
                                "fill",
                                "fit"
                            ],
                            "enumDescriptions": [
                                "The minimap has the same size as the editor contents (and might scroll).",
                                "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
                                "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
                            ],
                            "default": "proportional",
                            "description": "Controls the size of the minimap.",
                            "defaultDefaultValue": "proportional",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.side": {
                            "type": "string",
                            "enum": [
                                "left",
                                "right"
                            ],
                            "default": "right",
                            "description": "Controls the side where to render the minimap.",
                            "defaultDefaultValue": "right",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.showSlider": {
                            "type": "string",
                            "enum": [
                                "always",
                                "mouseover"
                            ],
                            "default": "mouseover",
                            "description": "Controls when the minimap slider is shown.",
                            "defaultDefaultValue": "mouseover",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.scale": {
                            "type": "number",
                            "default": 1,
                            "minimum": 1,
                            "maximum": 3,
                            "enum": [
                                1,
                                2,
                                3
                            ],
                            "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
                            "defaultDefaultValue": 1,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.renderCharacters": {
                            "type": "boolean",
                            "default": true,
                            "description": "Render the actual characters on a line as opposed to color blocks.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.minimap.maxColumn": {
                            "type": "number",
                            "default": 120,
                            "description": "Limit the width of the minimap to render at most a certain number of columns.",
                            "defaultDefaultValue": 120,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.mouseWheelScrollSensitivity": {
                            "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
                            "type": "number",
                            "default": 1,
                            "defaultDefaultValue": 1,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.mouseWheelZoom": {
                            "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.multiCursorMergeOverlapping": {
                            "description": "Merge multiple cursors when they are overlapping.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.multiCursorModifier": {
                            "markdownEnumDescriptions": [
                                "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
                                "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
                            ],
                            "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
                            "type": "string",
                            "enum": [
                                "ctrlCmd",
                                "alt"
                            ],
                            "default": "alt",
                            "defaultDefaultValue": "alt",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.multiCursorPaste": {
                            "markdownEnumDescriptions": [
                                "Each cursor pastes a single line of the text.",
                                "Each cursor pastes the full text."
                            ],
                            "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
                            "type": "string",
                            "enum": [
                                "spread",
                                "full"
                            ],
                            "default": "spread",
                            "defaultDefaultValue": "spread",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.multiCursorLimit": {
                            "markdownDescription": "Controls the max number of cursors that can be in an active editor at once.",
                            "type": "integer",
                            "default": 10000,
                            "minimum": 1,
                            "maximum": 100000,
                            "defaultDefaultValue": 10000,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.occurrencesHighlight": {
                            "description": "Controls whether the editor should highlight semantic symbol occurrences.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.overviewRulerBorder": {
                            "description": "Controls whether a border should be drawn around the overview ruler.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.padding.top": {
                            "type": "number",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 1000,
                            "description": "Controls the amount of space between the top edge of the editor and the first line.",
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.padding.bottom": {
                            "type": "number",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 1000,
                            "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.pasteAs.enabled": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "Controls whether you can paste content in different ways.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.pasteAs.showPasteSelector": {
                            "type": "string",
                            "markdownDescription": "Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.",
                            "enum": [
                                "afterPaste",
                                "never"
                            ],
                            "enumDescriptions": [
                                "Show the paste selector widget after content is pasted into the editor.",
                                "Never show the paste selector widget. Instead the default pasting behavior is always used."
                            ],
                            "default": "afterPaste",
                            "defaultDefaultValue": "afterPaste",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.parameterHints.enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.parameterHints.cycle": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.peekWidgetDefaultFocus": {
                            "enumDescriptions": [
                                "Focus the tree when opening peek",
                                "Focus the editor when opening peek"
                            ],
                            "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
                            "type": "string",
                            "enum": [
                                "tree",
                                "editor"
                            ],
                            "default": "tree",
                            "defaultDefaultValue": "tree",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.definitionLinkOpensInPeek": {
                            "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.quickSuggestions": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "strings": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "on",
                                                "inline",
                                                "off"
                                            ],
                                            "enumDescriptions": [
                                                "Quick suggestions show inside the suggest widget",
                                                "Quick suggestions show as ghost text",
                                                "Quick suggestions are disabled"
                                            ]
                                        }
                                    ],
                                    "default": "off",
                                    "description": "Enable quick suggestions inside strings."
                                },
                                "comments": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "on",
                                                "inline",
                                                "off"
                                            ],
                                            "enumDescriptions": [
                                                "Quick suggestions show inside the suggest widget",
                                                "Quick suggestions show as ghost text",
                                                "Quick suggestions are disabled"
                                            ]
                                        }
                                    ],
                                    "default": "off",
                                    "description": "Enable quick suggestions inside comments."
                                },
                                "other": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "string",
                                            "enum": [
                                                "on",
                                                "inline",
                                                "off"
                                            ],
                                            "enumDescriptions": [
                                                "Quick suggestions show inside the suggest widget",
                                                "Quick suggestions show as ghost text",
                                                "Quick suggestions are disabled"
                                            ]
                                        }
                                    ],
                                    "default": "on",
                                    "description": "Enable quick suggestions outside of strings and comments."
                                }
                            },
                            "default": {
                                "other": "on",
                                "comments": "off",
                                "strings": "off"
                            },
                            "markdownDescription": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
                            "defaultDefaultValue": {
                                "other": "on",
                                "comments": "off",
                                "strings": "off"
                            },
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.quickSuggestionsDelay": {
                            "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
                            "type": "integer",
                            "default": 10,
                            "minimum": 0,
                            "maximum": 1073741824,
                            "defaultDefaultValue": 10,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.renameOnType": {
                            "description": "Controls whether the editor auto renames on type.",
                            "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false,
                            "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
                        },
                        "editor.renderControlCharacters": {
                            "description": "Controls whether the editor should render control characters.",
                            "restricted": true,
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5
                        },
                        "editor.renderFinalNewline": {
                            "description": "Render last line number when the file ends with a newline.",
                            "type": "string",
                            "enum": [
                                "off",
                                "on",
                                "dimmed"
                            ],
                            "default": "on",
                            "defaultDefaultValue": "on",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.renderLineHighlight": {
                            "enumDescriptions": [
                                "",
                                "",
                                "",
                                "Highlights both the gutter and the current line."
                            ],
                            "description": "Controls how the editor should render the current line highlight.",
                            "type": "string",
                            "enum": [
                                "none",
                                "gutter",
                                "line",
                                "all"
                            ],
                            "default": "line",
                            "defaultDefaultValue": "line",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.renderLineHighlightOnlyWhenFocus": {
                            "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.renderWhitespace": {
                            "enumDescriptions": [
                                "",
                                "Render whitespace characters except for single spaces between words.",
                                "Render whitespace characters only on selected text.",
                                "Render only trailing whitespace characters.",
                                ""
                            ],
                            "description": "Controls how the editor should render whitespace characters.",
                            "type": "string",
                            "enum": [
                                "none",
                                "boundary",
                                "selection",
                                "trailing",
                                "all"
                            ],
                            "default": "selection",
                            "defaultDefaultValue": "selection",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.roundedSelection": {
                            "description": "Controls whether selections should have rounded corners.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.rulers": {
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "number",
                                        "description": "Number of monospace characters at which this editor ruler will render."
                                    },
                                    {
                                        "type": [
                                            "object"
                                        ],
                                        "properties": {
                                            "column": {
                                                "type": "number",
                                                "description": "Number of monospace characters at which this editor ruler will render."
                                            },
                                            "color": {
                                                "type": "string",
                                                "description": "Color of this editor ruler.",
                                                "format": "color-hex"
                                            }
                                        }
                                    }
                                ]
                            },
                            "default": [],
                            "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
                            "defaultDefaultValue": [],
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollbar.vertical": {
                            "type": "string",
                            "enum": [
                                "auto",
                                "visible",
                                "hidden"
                            ],
                            "enumDescriptions": [
                                "The vertical scrollbar will be visible only when necessary.",
                                "The vertical scrollbar will always be visible.",
                                "The vertical scrollbar will always be hidden."
                            ],
                            "default": "auto",
                            "description": "Controls the visibility of the vertical scrollbar.",
                            "defaultDefaultValue": "auto",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollbar.horizontal": {
                            "type": "string",
                            "enum": [
                                "auto",
                                "visible",
                                "hidden"
                            ],
                            "enumDescriptions": [
                                "The horizontal scrollbar will be visible only when necessary.",
                                "The horizontal scrollbar will always be visible.",
                                "The horizontal scrollbar will always be hidden."
                            ],
                            "default": "auto",
                            "description": "Controls the visibility of the horizontal scrollbar.",
                            "defaultDefaultValue": "auto",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollbar.verticalScrollbarSize": {
                            "type": "number",
                            "default": 14,
                            "description": "The width of the vertical scrollbar.",
                            "defaultDefaultValue": 14,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollbar.horizontalScrollbarSize": {
                            "type": "number",
                            "default": 12,
                            "description": "The height of the horizontal scrollbar.",
                            "defaultDefaultValue": 12,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollbar.scrollByPage": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether clicks scroll by page or jump to click position.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollBeyondLastColumn": {
                            "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
                            "type": "integer",
                            "default": 4,
                            "minimum": 0,
                            "maximum": 1073741824,
                            "defaultDefaultValue": 4,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollBeyondLastLine": {
                            "description": "Controls whether the editor will scroll beyond the last line.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.scrollPredominantAxis": {
                            "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.selectionClipboard": {
                            "description": "Controls whether the Linux primary clipboard should be supported.",
                            "included": false,
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.selectionHighlight": {
                            "description": "Controls whether the editor should highlight matches similar to the selection.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.showFoldingControls": {
                            "enumDescriptions": [
                                "Always show the folding controls.",
                                "Never show the folding controls and reduce the gutter size.",
                                "Only show the folding controls when the mouse is over the gutter."
                            ],
                            "description": "Controls when the folding controls on the gutter are shown.",
                            "type": "string",
                            "enum": [
                                "always",
                                "never",
                                "mouseover"
                            ],
                            "default": "mouseover",
                            "defaultDefaultValue": "mouseover",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.showUnused": {
                            "description": "Controls fading out of unused code.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.snippetSuggestions": {
                            "enumDescriptions": [
                                "Show snippet suggestions on top of other suggestions.",
                                "Show snippet suggestions below other suggestions.",
                                "Show snippets suggestions with other suggestions.",
                                "Do not show snippet suggestions."
                            ],
                            "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
                            "type": "string",
                            "enum": [
                                "top",
                                "bottom",
                                "inline",
                                "none"
                            ],
                            "default": "inline",
                            "defaultDefaultValue": "inline",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
                            "description": "Whether leading and trailing whitespace should always be selected.",
                            "default": true,
                            "type": "boolean",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.smartSelect.selectSubwords": {
                            "description": "Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.",
                            "default": true,
                            "type": "boolean",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.smoothScrolling": {
                            "description": "Controls whether the editor will scroll using an animation.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.stickyScroll.enabled": {
                            "type": "boolean",
                            "default": false,
                            "description": "Shows the nested current scopes during the scroll at the top of the editor.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.stickyScroll.maxLineCount": {
                            "type": "number",
                            "default": 5,
                            "minimum": 1,
                            "maximum": 10,
                            "description": "Defines the maximum number of sticky lines to show.",
                            "defaultDefaultValue": 5,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.stickyScroll.defaultModel": {
                            "type": "string",
                            "enum": [
                                "outlineModel",
                                "foldingProviderModel",
                                "indentationModel"
                            ],
                            "default": "outlineModel",
                            "description": "Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.",
                            "defaultDefaultValue": "outlineModel",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.stickyScroll.scrollWithEditor": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable scrolling of the sticky scroll widget with the editor's horizontal scrollbar.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.stickyTabStops": {
                            "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.insertMode": {
                            "type": "string",
                            "enum": [
                                "insert",
                                "replace"
                            ],
                            "enumDescriptions": [
                                "Insert suggestion without overwriting text right of the cursor.",
                                "Insert suggestion and overwrite text right of the cursor."
                            ],
                            "default": "insert",
                            "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
                            "defaultDefaultValue": "insert",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.filterGraceful": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.localityBonus": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether sorting favors words that appear close to the cursor.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.shareSuggestSelections": {
                            "type": "boolean",
                            "default": false,
                            "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.selectionMode": {
                            "type": "string",
                            "enum": [
                                "always",
                                "never",
                                "whenTriggerCharacter",
                                "whenQuickSuggestion"
                            ],
                            "enumDescriptions": [
                                "Always select a suggestion when automatically triggering IntelliSense.",
                                "Never select a suggestion when automatically triggering IntelliSense.",
                                "Select a suggestion only when triggering IntelliSense from a trigger character.",
                                "Select a suggestion only when triggering IntelliSense as you type."
                            ],
                            "default": "always",
                            "markdownDescription": "Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
                            "defaultDefaultValue": "always",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.snippetsPreventQuickSuggestions": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether an active snippet prevents quick suggestions.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showIcons": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether to show or hide icons in suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showStatusBar": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.preview": {
                            "type": "boolean",
                            "default": false,
                            "description": "Controls whether to preview the suggestion outcome in the editor.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showInlineDetails": {
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether suggest details show inline with the label or only in the details widget.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.maxVisibleSuggestions": {
                            "type": "number",
                            "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
                            "default": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.filteredTypes": {
                            "type": "object",
                            "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
                            "default": {},
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showMethods": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showFunctions": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showConstructors": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showDeprecated": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.matchOnWordStartOnly": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showFields": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showVariables": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showClasses": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showStructs": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showInterfaces": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showModules": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showProperties": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showEvents": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showOperators": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showUnits": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showValues": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showConstants": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showEnums": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showEnumMembers": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showKeywords": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showWords": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showColors": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showFiles": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showReferences": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showCustomcolors": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showFolders": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showTypeParameters": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showSnippets": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showUsers": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggest.showIssues": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggestFontSize": {
                            "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 1000,
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggestLineHeight": {
                            "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
                            "type": "integer",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 1000,
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggestOnTriggerCharacters": {
                            "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.suggestSelection": {
                            "markdownEnumDescriptions": [
                                "Always select the first suggestion.",
                                "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
                                "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
                            ],
                            "description": "Controls how suggestions are pre-selected when showing the suggest list.",
                            "type": "string",
                            "enum": [
                                "first",
                                "recentlyUsed",
                                "recentlyUsedByPrefix"
                            ],
                            "default": "first",
                            "defaultDefaultValue": "first",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.tabCompletion": {
                            "enumDescriptions": [
                                "Tab complete will insert the best matching suggestion when pressing tab.",
                                "Disable tab completions.",
                                "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
                            ],
                            "description": "Enables tab completions.",
                            "type": "string",
                            "enum": [
                                "on",
                                "off",
                                "onlySnippets"
                            ],
                            "default": "off",
                            "defaultDefaultValue": "off",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.unicodeHighlight.nonBasicASCII": {
                            "restricted": true,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "enum": [
                                true,
                                false,
                                "inUntrustedWorkspace"
                            ],
                            "default": "inUntrustedWorkspace",
                            "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
                            "defaultDefaultValue": "inUntrustedWorkspace",
                            "scope": 5
                        },
                        "editor.unicodeHighlight.invisibleCharacters": {
                            "restricted": true,
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
                            "defaultDefaultValue": true,
                            "scope": 5
                        },
                        "editor.unicodeHighlight.ambiguousCharacters": {
                            "restricted": true,
                            "type": "boolean",
                            "default": true,
                            "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
                            "defaultDefaultValue": true,
                            "scope": 5
                        },
                        "editor.unicodeHighlight.includeComments": {
                            "restricted": true,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "enum": [
                                true,
                                false,
                                "inUntrustedWorkspace"
                            ],
                            "default": "inUntrustedWorkspace",
                            "description": "Controls whether characters in comments should also be subject to Unicode highlighting.",
                            "defaultDefaultValue": "inUntrustedWorkspace",
                            "scope": 5
                        },
                        "editor.unicodeHighlight.includeStrings": {
                            "restricted": true,
                            "type": [
                                "boolean",
                                "string"
                            ],
                            "enum": [
                                true,
                                false,
                                "inUntrustedWorkspace"
                            ],
                            "default": true,
                            "description": "Controls whether characters in strings should also be subject to Unicode highlighting.",
                            "defaultDefaultValue": true,
                            "scope": 5
                        },
                        "editor.unicodeHighlight.allowedCharacters": {
                            "restricted": true,
                            "type": "object",
                            "default": {},
                            "description": "Defines allowed characters that are not being highlighted.",
                            "additionalProperties": {
                                "type": "boolean"
                            },
                            "defaultDefaultValue": {},
                            "scope": 5
                        },
                        "editor.unicodeHighlight.allowedLocales": {
                            "restricted": true,
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            },
                            "default": {
                                "_os": true,
                                "_vscode": true
                            },
                            "description": "Unicode characters that are common in allowed locales are not being highlighted.",
                            "defaultDefaultValue": {
                                "_os": true,
                                "_vscode": true
                            },
                            "scope": 5
                        },
                        "editor.unusualLineTerminators": {
                            "enumDescriptions": [
                                "Unusual line terminators are automatically removed.",
                                "Unusual line terminators are ignored.",
                                "Unusual line terminators prompt to be removed."
                            ],
                            "description": "Remove unusual line terminators that might cause problems.",
                            "type": "string",
                            "enum": [
                                "auto",
                                "off",
                                "prompt"
                            ],
                            "default": "prompt",
                            "defaultDefaultValue": "prompt",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.useTabStops": {
                            "description": "Inserting and deleting whitespace follows tab stops.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.wordBreak": {
                            "markdownEnumDescriptions": [
                                "Use the default line break rule.",
                                "Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal."
                            ],
                            "description": "Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
                            "type": "string",
                            "enum": [
                                "normal",
                                "keepAll"
                            ],
                            "default": "normal",
                            "defaultDefaultValue": "normal",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.wordSeparators": {
                            "description": "Characters that will be used as word separators when doing word related navigations or operations.",
                            "type": "string",
                            "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
                            "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.wordWrap": {
                            "markdownEnumDescriptions": [
                                "Lines will never wrap.",
                                "Lines will wrap at the viewport width.",
                                "Lines will wrap at `#editor.wordWrapColumn#`.",
                                "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
                            ],
                            "description": "Controls how lines should wrap.",
                            "type": "string",
                            "enum": [
                                "off",
                                "on",
                                "wordWrapColumn",
                                "bounded"
                            ],
                            "default": "off",
                            "defaultDefaultValue": "off",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.wordWrapColumn": {
                            "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
                            "type": "integer",
                            "default": 80,
                            "minimum": 1,
                            "maximum": 1073741824,
                            "defaultDefaultValue": 80,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.wrappingIndent": {
                            "type": "string",
                            "enum": [
                                "none",
                                "same",
                                "indent",
                                "deepIndent"
                            ],
                            "enumDescriptions": [
                                "No indentation. Wrapped lines begin at column 1.",
                                "Wrapped lines get the same indentation as the parent.",
                                "Wrapped lines get +1 indentation toward the parent.",
                                "Wrapped lines get +2 indentation toward the parent."
                            ],
                            "description": "Controls the indentation of wrapped lines.",
                            "default": "same",
                            "defaultDefaultValue": "same",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.wrappingStrategy": {
                            "enumDescriptions": [
                                "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
                                "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
                            ],
                            "type": "string",
                            "enum": [
                                "simple",
                                "advanced"
                            ],
                            "default": "simple",
                            "description": "Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
                            "defaultDefaultValue": "simple",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.showDeprecated": {
                            "description": "Controls strikethrough deprecated variables.",
                            "type": "boolean",
                            "default": true,
                            "defaultDefaultValue": true,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlayHints.enabled": {
                            "type": "string",
                            "default": "on",
                            "description": "Enables the inlay hints in the editor.",
                            "enum": [
                                "on",
                                "onUnlessPressed",
                                "offUnlessPressed",
                                "off"
                            ],
                            "markdownEnumDescriptions": [
                                "Inlay hints are enabled",
                                "Inlay hints are showing by default and hide when holding Ctrl+Option",
                                "Inlay hints are hidden by default and show when holding Ctrl+Option",
                                "Inlay hints are disabled"
                            ],
                            "defaultDefaultValue": "on",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlayHints.fontSize": {
                            "type": "number",
                            "default": 0,
                            "markdownDescription": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
                            "defaultDefaultValue": 0,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlayHints.fontFamily": {
                            "type": "string",
                            "default": "",
                            "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
                            "defaultDefaultValue": "",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlayHints.padding": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enables the padding around the inlay hints in the editor.",
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.tabFocusMode": {
                            "markdownDescription": "Controls whether the editor receives tabs or defers them to the workbench for navigation.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.defaultColorDecorators": {
                            "markdownDescription": "Controls whether inline color decorations should be shown using the default document color provider",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.colorDecoratorsActivatedOn": {
                            "enumDescriptions": [
                                "Make the color picker appear both on click and hover of the color decorator",
                                "Make the color picker appear on hover of the color decorator",
                                "Make the color picker appear on click of the color decorator"
                            ],
                            "description": "Controls the condition to make a color picker appear from a color decorator",
                            "type": "string",
                            "enum": [
                                "clickAndHover",
                                "hover",
                                "click"
                            ],
                            "default": "clickAndHover",
                            "defaultDefaultValue": "clickAndHover",
                            "scope": 5,
                            "restricted": false
                        },
                        "editor.inlineCompletionsAccessibilityVerbose": {
                            "description": "Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.",
                            "type": "boolean",
                            "default": false,
                            "defaultDefaultValue": false,
                            "scope": 5,
                            "restricted": false
                        }
                    }
                }
            ],
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "interactiveWindow.collapseCellInputCode": {
            "markdownDescription": "Controls whether code cells in the interactive window are collapsed by default.",
            "type": "string",
            "enum": [
                "always",
                "never",
                "fromEditor"
            ],
            "default": "fromEditor",
            "defaultDefaultValue": "fromEditor",
            "scope": 3,
            "restricted": false
        },
        "notebook.output.lineHeight": {
            "markdownDescription": "Line height of the output text within notebook cells.\n - When set to 0, editor line height is used.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
            "type": "number",
            "default": 0,
            "tags": [
                "notebookLayout",
                "notebookOutputLayout"
            ],
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "notebook.output.fontSize": {
            "markdownDescription": "Font size for the output text within notebook cells. When set to 0, `#editor.fontSize#` is used.",
            "type": "number",
            "default": 0,
            "tags": [
                "notebookLayout",
                "notebookOutputLayout"
            ],
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "notebook.output.fontFamily": {
            "markdownDescription": "The font family of the output text within notebook cells. When set to empty, the `#editor.fontFamily#` is used.",
            "type": "string",
            "tags": [
                "notebookLayout",
                "notebookOutputLayout"
            ],
            "default": "",
            "scope": 3,
            "restricted": false
        },
        "notebook.output.scrolling": {
            "markdownDescription": "Initially render notebook outputs in a scrollable region when longer than the limit",
            "type": "boolean",
            "tags": [
                "notebookLayout",
                "notebookOutputLayout"
            ],
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.output.wordWrap": {
            "markdownDescription": "Controls whether the lines in output should wrap.",
            "type": "boolean",
            "tags": [
                "notebookLayout",
                "notebookOutputLayout"
            ],
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.formatOnSave.enabled": {
            "markdownDescription": "Format a notebook on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.",
            "type": "boolean",
            "tags": [
                "notebookLayout"
            ],
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.codeActionsOnSave": {
            "markdownDescription": "Run a series of CodeActions for a notebook on save. CodeActions must be specified, the file must not be saved after delay, and the editor must not be shutting down. Example: `\"notebook.source.organizeImports\": \"explicit\"`",
            "type": "object",
            "additionalProperties": {
                "type": [
                    "string",
                    "boolean"
                ],
                "enum": [
                    "explicit",
                    "never",
                    true,
                    false
                ],
                "enumDescriptions": [
                    "Triggers Code Actions only when explicitly saved.",
                    "Never triggers Code Actions on save.",
                    "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
                    "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"never\"."
                ]
            },
            "default": {},
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "notebook.formatOnCellExecution": {
            "markdownDescription": "Format a notebook cell upon execution. A formatter must be available.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.confirmDeleteRunningCell": {
            "markdownDescription": "Control whether a confirmation prompt is required to delete a running cell.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "notebook.find.scope": {
            "markdownDescription": "Customize the Find Widget behavior for searching within notebook cells. When both markup source and markup preview are enabled, the Find Widget will search either the source code or preview based on the current state of the cell.",
            "type": "object",
            "properties": {
                "markupSource": {
                    "type": "boolean",
                    "default": true
                },
                "markupPreview": {
                    "type": "boolean",
                    "default": true
                },
                "codeSource": {
                    "type": "boolean",
                    "default": true
                },
                "codeOutput": {
                    "type": "boolean",
                    "default": true
                }
            },
            "default": {
                "markupSource": true,
                "markupPreview": true,
                "codeSource": true,
                "codeOutput": true
            },
            "tags": [
                "notebookLayout"
            ],
            "defaultDefaultValue": {
                "markupSource": true,
                "markupPreview": true,
                "codeSource": true,
                "codeOutput": true
            },
            "scope": 3,
            "restricted": false
        },
        "notebook.experimental.remoteSave": {
            "markdownDescription": "Enables the incremental saving of notebooks in Remote environment. When enabled, only the changes to the notebook are sent to the extension host, improving performance for large notebooks and slow network connections.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "notebook.scrolling.revealNextCellOnExecute": {
            "markdownDescription": "How far to scroll when revealing the next cell upon running notebook.cell.executeAndSelectBelow.",
            "type": "string",
            "enum": [
                "fullCell",
                "firstLine",
                "none"
            ],
            "markdownEnumDescriptions": [
                "Scroll to fully reveal the next cell.",
                "Scroll to reveal the first line of the next cell.",
                "Do not scroll."
            ],
            "default": "fullCell",
            "defaultDefaultValue": "fullCell",
            "scope": 3,
            "restricted": false
        },
        "notebook.scrolling.experimental.anchorToFocusedCell": {
            "markdownDescription": "Experimental. Keep the focused cell steady while surrounding cells change size.",
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "markdownEnumDescriptions": [
                "Anchor the viewport to the focused cell depending on context unless notebook.scrolling.revealCellBehavior is set to none.",
                "Always anchor the viewport to the focused cell.",
                "The focused cell may shift around as cells resize."
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "search.mode": {
            "type": "string",
            "enum": [
                "view",
                "reuseEditor",
                "newEditor"
            ],
            "default": "view",
            "markdownDescription": "Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the search view, or in a search editor.",
            "enumDescriptions": [
                "Search in the search view, either in the panel or side bars.",
                "Search in an existing search editor if present, otherwise in a new search editor.",
                "Search in a new search editor."
            ],
            "defaultDefaultValue": "view",
            "scope": 3,
            "restricted": false
        },
        "search.useRipgrep": {
            "type": "boolean",
            "description": "This setting is deprecated and now falls back on \"search.usePCRE2\".",
            "deprecationMessage": "Deprecated. Consider \"search.usePCRE2\" for advanced regex feature support.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.maintainFileSearchCache": {
            "type": "boolean",
            "deprecationMessage": "The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.",
            "description": "When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.quickOpen.includeSymbols": {
            "type": "boolean",
            "description": "Whether to include results from a global symbol search in the file results for Quick Open.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.quickOpen.includeHistory": {
            "type": "boolean",
            "description": "Whether to include results from recently opened files in the file results for Quick Open.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.quickOpen.history.filterSortOrder": {
            "type": "string",
            "enum": [
                "default",
                "recency"
            ],
            "default": "default",
            "enumDescriptions": [
                "History entries are sorted by relevance based on the filter value used. More relevant entries appear first.",
                "History entries are sorted by recency. More recently opened entries appear first."
            ],
            "description": "Controls sorting order of editor history in quick open when filtering.",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "search.followSymlinks": {
            "type": "boolean",
            "description": "Controls whether to follow symlinks while searching.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.smartCase": {
            "type": "boolean",
            "description": "Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.globalFindClipboard": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the search view should read or modify the shared find clipboard on macOS.",
            "included": true,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.location": {
            "type": "string",
            "enum": [
                "sidebar",
                "panel"
            ],
            "default": "sidebar",
            "description": "Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.",
            "deprecationMessage": "This setting is deprecated. You can drag the search icon to a new location instead.",
            "defaultDefaultValue": "sidebar",
            "scope": 3,
            "restricted": false
        },
        "search.maxResults": {
            "type": [
                "number",
                "null"
            ],
            "default": 20000,
            "markdownDescription": "Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.",
            "defaultDefaultValue": 20000,
            "scope": 3,
            "restricted": false
        },
        "search.collapseResults": {
            "type": "string",
            "enum": [
                "auto",
                "alwaysCollapse",
                "alwaysExpand"
            ],
            "enumDescriptions": [
                "Files with less than 10 results are expanded. Others are collapsed.",
                "",
                ""
            ],
            "default": "alwaysExpand",
            "description": "Controls whether the search results will be collapsed or expanded.",
            "defaultDefaultValue": "alwaysExpand",
            "scope": 3,
            "restricted": false
        },
        "search.useReplacePreview": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to open Replace Preview when selecting or replacing a match.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.showLineNumbers": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether to show line numbers for search results.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.usePCRE2": {
            "type": "boolean",
            "default": false,
            "description": "Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.",
            "deprecationMessage": "Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.actionsPosition": {
            "type": "string",
            "enum": [
                "auto",
                "right"
            ],
            "enumDescriptions": [
                "Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.",
                "Always position the actionbar to the right."
            ],
            "default": "right",
            "description": "Controls the positioning of the actionbar on rows in the search view.",
            "defaultDefaultValue": "right",
            "scope": 3,
            "restricted": false
        },
        "search.searchOnType": {
            "type": "boolean",
            "default": true,
            "description": "Search all files as you type.",
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.seedWithNearestWord": {
            "type": "boolean",
            "default": false,
            "description": "Enable seeding search from the word nearest the cursor when the active editor has no selection.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.seedOnFocus": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.searchOnTypeDebouncePeriod": {
            "type": "number",
            "default": 300,
            "markdownDescription": "When `#search.searchOnType#` is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when `#search.searchOnType#` is disabled.",
            "defaultDefaultValue": 300,
            "scope": 3,
            "restricted": false
        },
        "search.searchEditor.doubleClickBehaviour": {
            "type": "string",
            "enum": [
                "selectWord",
                "goToLocation",
                "openLocationToSide"
            ],
            "default": "goToLocation",
            "enumDescriptions": [
                "Double-clicking selects the word under the cursor.",
                "Double-clicking opens the result in the active editor group.",
                "Double-clicking opens the result in the editor group to the side, creating one if it does not yet exist."
            ],
            "markdownDescription": "Configure effect of double-clicking a result in a search editor.",
            "defaultDefaultValue": "goToLocation",
            "scope": 3,
            "restricted": false
        },
        "search.searchEditor.reusePriorSearchConfiguration": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.",
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.searchEditor.defaultNumberOfContextLines": {
            "type": [
                "number",
                "null"
            ],
            "default": 1,
            "markdownDescription": "The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.",
            "defaultDefaultValue": 1,
            "scope": 3,
            "restricted": false
        },
        "search.sortOrder": {
            "type": "string",
            "enum": [
                "default",
                "fileNames",
                "type",
                "modified",
                "countDescending",
                "countAscending"
            ],
            "default": "default",
            "enumDescriptions": [
                "Results are sorted by folder and file names, in alphabetical order.",
                "Results are sorted by file names ignoring folder order, in alphabetical order.",
                "Results are sorted by file extensions, in alphabetical order.",
                "Results are sorted by file last modified date, in descending order.",
                "Results are sorted by count per file, in descending order.",
                "Results are sorted by count per file, in ascending order."
            ],
            "description": "Controls sorting order of search results.",
            "defaultDefaultValue": "default",
            "scope": 3,
            "restricted": false
        },
        "search.decorations.colors": {
            "type": "boolean",
            "description": "Controls whether search file decorations should use colors.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.decorations.badges": {
            "type": "boolean",
            "description": "Controls whether search file decorations should use badges.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "search.defaultViewMode": {
            "type": "string",
            "enum": [
                "tree",
                "list"
            ],
            "default": "list",
            "enumDescriptions": [
                "Shows search results as a tree.",
                "Shows search results as a list."
            ],
            "description": "Controls the default search result view mode.",
            "defaultDefaultValue": "list",
            "scope": 3,
            "restricted": false
        },
        "search.experimental.closedNotebookRichContentResults": {
            "type": "boolean",
            "description": "Show notebook editor rich content results for closed notebooks. Please refresh your search results after changing this setting.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "search.experimental.quickAccess.preserveInput": {
            "type": "boolean",
            "description": "Controls whether the last typed input to Quick Search should be restored when opening it the next time.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.automationProfile.linux": {
            "restricted": true,
            "markdownDescription": "The terminal profile to use on Linux for automation-related terminal usage like tasks and debug.",
            "type": [
                "object",
                "null"
            ],
            "default": null,
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "object",
                    "required": [
                        "path"
                    ],
                    "properties": {
                        "path": {
                            "description": "A single path to a shell executable.",
                            "type": [
                                "string"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "args": {
                            "description": "An optional set of arguments to run the shell executable with.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "overrideName": {
                            "description": "Controls whether or not the profile name overrides the auto detected one.",
                            "type": "boolean"
                        },
                        "icon": {
                            "description": "A codicon ID to associate with the terminal icon.",
                            "type": "string",
                            "enum": [
                                "add",
                                "plus",
                                "gist-new",
                                "repo-create",
                                "lightbulb",
                                "light-bulb",
                                "repo",
                                "repo-delete",
                                "gist-fork",
                                "repo-forked",
                                "git-pull-request",
                                "git-pull-request-abandoned",
                                "record-keys",
                                "keyboard",
                                "tag",
                                "tag-add",
                                "tag-remove",
                                "git-pull-request-label",
                                "person",
                                "person-follow",
                                "person-outline",
                                "person-filled",
                                "git-branch",
                                "git-branch-create",
                                "git-branch-delete",
                                "source-control",
                                "mirror",
                                "mirror-public",
                                "star",
                                "star-add",
                                "star-delete",
                                "star-empty",
                                "comment",
                                "comment-add",
                                "alert",
                                "warning",
                                "search",
                                "search-save",
                                "log-out",
                                "sign-out",
                                "log-in",
                                "sign-in",
                                "eye",
                                "eye-unwatch",
                                "eye-watch",
                                "circle-filled",
                                "primitive-dot",
                                "close-dirty",
                                "debug-breakpoint",
                                "debug-breakpoint-disabled",
                                "debug-hint",
                                "primitive-square",
                                "edit",
                                "pencil",
                                "info",
                                "issue-opened",
                                "gist-private",
                                "git-fork-private",
                                "lock",
                                "mirror-private",
                                "close",
                                "remove-close",
                                "x",
                                "repo-sync",
                                "sync",
                                "clone",
                                "desktop-download",
                                "beaker",
                                "microscope",
                                "vm",
                                "device-desktop",
                                "file",
                                "file-text",
                                "more",
                                "ellipsis",
                                "kebab-horizontal",
                                "mail-reply",
                                "reply",
                                "organization",
                                "organization-filled",
                                "organization-outline",
                                "new-file",
                                "file-add",
                                "new-folder",
                                "file-directory-create",
                                "trash",
                                "trashcan",
                                "history",
                                "clock",
                                "folder",
                                "file-directory",
                                "symbol-folder",
                                "logo-github",
                                "mark-github",
                                "github",
                                "terminal",
                                "console",
                                "repl",
                                "zap",
                                "symbol-event",
                                "error",
                                "stop",
                                "variable",
                                "symbol-variable",
                                "array",
                                "symbol-array",
                                "symbol-module",
                                "symbol-package",
                                "symbol-namespace",
                                "symbol-object",
                                "symbol-method",
                                "symbol-function",
                                "symbol-constructor",
                                "symbol-boolean",
                                "symbol-null",
                                "symbol-numeric",
                                "symbol-number",
                                "symbol-structure",
                                "symbol-struct",
                                "symbol-parameter",
                                "symbol-type-parameter",
                                "symbol-key",
                                "symbol-text",
                                "symbol-reference",
                                "go-to-file",
                                "symbol-enum",
                                "symbol-value",
                                "symbol-ruler",
                                "symbol-unit",
                                "activate-breakpoints",
                                "archive",
                                "arrow-both",
                                "arrow-down",
                                "arrow-left",
                                "arrow-right",
                                "arrow-small-down",
                                "arrow-small-left",
                                "arrow-small-right",
                                "arrow-small-up",
                                "arrow-up",
                                "bell",
                                "bold",
                                "book",
                                "bookmark",
                                "debug-breakpoint-conditional-unverified",
                                "debug-breakpoint-conditional",
                                "debug-breakpoint-conditional-disabled",
                                "debug-breakpoint-data-unverified",
                                "debug-breakpoint-data",
                                "debug-breakpoint-data-disabled",
                                "debug-breakpoint-log-unverified",
                                "debug-breakpoint-log",
                                "debug-breakpoint-log-disabled",
                                "briefcase",
                                "broadcast",
                                "browser",
                                "bug",
                                "calendar",
                                "case-sensitive",
                                "check",
                                "checklist",
                                "chevron-down",
                                "drop-down-button",
                                "chevron-left",
                                "chevron-right",
                                "chevron-up",
                                "chrome-close",
                                "chrome-maximize",
                                "chrome-minimize",
                                "chrome-restore",
                                "circle",
                                "circle-outline",
                                "debug-breakpoint-unverified",
                                "circle-slash",
                                "circuit-board",
                                "clear-all",
                                "clippy",
                                "close-all",
                                "cloud-download",
                                "cloud-upload",
                                "code",
                                "collapse-all",
                                "color-mode",
                                "comment-discussion",
                                "compare-changes",
                                "credit-card",
                                "dash",
                                "dashboard",
                                "database",
                                "debug-continue",
                                "debug-disconnect",
                                "debug-pause",
                                "debug-restart",
                                "debug-start",
                                "debug-step-into",
                                "debug-step-out",
                                "debug-step-over",
                                "debug-stop",
                                "debug",
                                "device-camera-video",
                                "device-camera",
                                "device-mobile",
                                "diff-added",
                                "diff-ignored",
                                "diff-modified",
                                "diff-removed",
                                "diff-renamed",
                                "diff",
                                "discard",
                                "editor-layout",
                                "empty-window",
                                "exclude",
                                "extensions",
                                "eye-closed",
                                "file-binary",
                                "file-code",
                                "file-media",
                                "file-pdf",
                                "file-submodule",
                                "file-symlink-directory",
                                "file-symlink-file",
                                "file-zip",
                                "files",
                                "filter",
                                "flame",
                                "fold-down",
                                "fold-up",
                                "fold",
                                "folder-active",
                                "folder-opened",
                                "gear",
                                "gift",
                                "gist-secret",
                                "gist",
                                "git-commit",
                                "git-compare",
                                "git-merge",
                                "github-action",
                                "github-alt",
                                "globe",
                                "grabber",
                                "graph",
                                "gripper",
                                "heart",
                                "home",
                                "horizontal-rule",
                                "hubot",
                                "inbox",
                                "issue-closed",
                                "issue-reopened",
                                "issues",
                                "italic",
                                "jersey",
                                "json",
                                "bracket",
                                "kebab-vertical",
                                "key",
                                "law",
                                "lightbulb-autofix",
                                "link-external",
                                "link",
                                "list-ordered",
                                "list-unordered",
                                "live-share",
                                "loading",
                                "location",
                                "mail-read",
                                "mail",
                                "markdown",
                                "megaphone",
                                "mention",
                                "milestone",
                                "git-pull-request-milestone",
                                "mortar-board",
                                "move",
                                "multiple-windows",
                                "mute",
                                "no-newline",
                                "note",
                                "octoface",
                                "open-preview",
                                "package",
                                "paintcan",
                                "pin",
                                "play",
                                "run",
                                "plug",
                                "preserve-case",
                                "preview",
                                "project",
                                "pulse",
                                "question",
                                "quote",
                                "radio-tower",
                                "reactions",
                                "references",
                                "refresh",
                                "regex",
                                "remote-explorer",
                                "remote",
                                "remove",
                                "replace-all",
                                "replace",
                                "repo-clone",
                                "repo-force-push",
                                "repo-pull",
                                "repo-push",
                                "report",
                                "request-changes",
                                "rocket",
                                "root-folder-opened",
                                "root-folder",
                                "rss",
                                "ruby",
                                "save-all",
                                "save-as",
                                "save",
                                "screen-full",
                                "screen-normal",
                                "search-stop",
                                "server",
                                "settings-gear",
                                "settings",
                                "shield",
                                "smiley",
                                "sort-precedence",
                                "split-horizontal",
                                "split-vertical",
                                "squirrel",
                                "star-full",
                                "star-half",
                                "symbol-class",
                                "symbol-color",
                                "symbol-customcolor",
                                "symbol-constant",
                                "symbol-enum-member",
                                "symbol-field",
                                "symbol-file",
                                "symbol-interface",
                                "symbol-keyword",
                                "symbol-misc",
                                "symbol-operator",
                                "symbol-property",
                                "wrench",
                                "wrench-subaction",
                                "symbol-snippet",
                                "tasklist",
                                "telescope",
                                "text-size",
                                "three-bars",
                                "thumbsdown",
                                "thumbsup",
                                "tools",
                                "triangle-down",
                                "triangle-left",
                                "triangle-right",
                                "triangle-up",
                                "twitter",
                                "unfold",
                                "unlock",
                                "unmute",
                                "unverified",
                                "verified",
                                "versions",
                                "vm-active",
                                "vm-outline",
                                "vm-running",
                                "watch",
                                "whitespace",
                                "whole-word",
                                "window",
                                "word-wrap",
                                "zoom-in",
                                "zoom-out",
                                "list-filter",
                                "list-flat",
                                "list-selection",
                                "selection",
                                "list-tree",
                                "debug-breakpoint-function-unverified",
                                "debug-breakpoint-function",
                                "debug-breakpoint-function-disabled",
                                "debug-stackframe-active",
                                "circle-small-filled",
                                "debug-stackframe-dot",
                                "debug-stackframe",
                                "debug-stackframe-focused",
                                "debug-breakpoint-unsupported",
                                "symbol-string",
                                "debug-reverse-continue",
                                "debug-step-back",
                                "debug-restart-frame",
                                "call-incoming",
                                "call-outgoing",
                                "menu",
                                "expand-all",
                                "feedback",
                                "git-pull-request-reviewer",
                                "group-by-ref-type",
                                "ungroup-by-ref-type",
                                "account",
                                "git-pull-request-assignee",
                                "bell-dot",
                                "debug-console",
                                "library",
                                "output",
                                "run-all",
                                "sync-ignored",
                                "pinned",
                                "github-inverted",
                                "debug-alt",
                                "server-process",
                                "server-environment",
                                "pass",
                                "stop-circle",
                                "play-circle",
                                "record",
                                "debug-alt-small",
                                "vm-connect",
                                "cloud",
                                "merge",
                                "export",
                                "graph-left",
                                "magnet",
                                "notebook",
                                "redo",
                                "check-all",
                                "pinned-dirty",
                                "pass-filled",
                                "circle-large-filled",
                                "circle-large",
                                "circle-large-outline",
                                "combine",
                                "gather",
                                "table",
                                "variable-group",
                                "type-hierarchy",
                                "type-hierarchy-sub",
                                "type-hierarchy-super",
                                "git-pull-request-create",
                                "run-above",
                                "run-below",
                                "notebook-template",
                                "debug-rerun",
                                "workspace-trusted",
                                "workspace-untrusted",
                                "workspace-unspecified",
                                "terminal-cmd",
                                "terminal-debian",
                                "terminal-linux",
                                "terminal-powershell",
                                "terminal-tmux",
                                "terminal-ubuntu",
                                "terminal-bash",
                                "arrow-swap",
                                "copy",
                                "person-add",
                                "filter-filled",
                                "wand",
                                "debug-line-by-line",
                                "inspect",
                                "layers",
                                "layers-dot",
                                "layers-active",
                                "compass",
                                "compass-dot",
                                "compass-active",
                                "azure",
                                "issue-draft",
                                "git-pull-request-closed",
                                "git-pull-request-draft",
                                "debug-all",
                                "debug-coverage",
                                "run-errors",
                                "folder-library",
                                "debug-continue-small",
                                "beaker-stop",
                                "graph-line",
                                "graph-scatter",
                                "pie-chart",
                                "bracket-dot",
                                "bracket-error",
                                "lock-small",
                                "azure-devops",
                                "verified-filled",
                                "newline",
                                "layout",
                                "layout-activitybar-left",
                                "layout-activitybar-right",
                                "layout-panel-left",
                                "layout-panel-center",
                                "layout-panel-justify",
                                "layout-panel-right",
                                "layout-panel",
                                "layout-sidebar-left",
                                "layout-sidebar-right",
                                "layout-statusbar",
                                "layout-menubar",
                                "layout-centered",
                                "layout-sidebar-right-off",
                                "layout-panel-off",
                                "layout-sidebar-left-off",
                                "target",
                                "indent",
                                "record-small",
                                "error-small",
                                "arrow-circle-down",
                                "arrow-circle-left",
                                "arrow-circle-right",
                                "arrow-circle-up",
                                "heart-filled",
                                "map",
                                "map-filled",
                                "circle-small",
                                "bell-slash",
                                "bell-slash-dot",
                                "comment-unresolved",
                                "git-pull-request-go-to-changes",
                                "git-pull-request-new-changes",
                                "search-fuzzy",
                                "comment-draft",
                                "send",
                                "sparkle",
                                "insert",
                                "mic",
                                "dialog-error",
                                "dialog-warning",
                                "dialog-info",
                                "dialog-close",
                                "tree-item-expanded",
                                "tree-filter-on-type-on",
                                "tree-filter-on-type-off",
                                "tree-filter-clear",
                                "tree-item-loading",
                                "menu-selection",
                                "menu-submenu",
                                "menubar-more",
                                "scrollbar-button-left",
                                "scrollbar-button-right",
                                "scrollbar-button-up",
                                "scrollbar-button-down",
                                "toolbar-more",
                                "quick-input-back"
                            ],
                            "markdownEnumDescriptions": [
                                "$(add)",
                                "$(plus)",
                                "$(gist-new)",
                                "$(repo-create)",
                                "$(lightbulb)",
                                "$(light-bulb)",
                                "$(repo)",
                                "$(repo-delete)",
                                "$(gist-fork)",
                                "$(repo-forked)",
                                "$(git-pull-request)",
                                "$(git-pull-request-abandoned)",
                                "$(record-keys)",
                                "$(keyboard)",
                                "$(tag)",
                                "$(tag-add)",
                                "$(tag-remove)",
                                "$(git-pull-request-label)",
                                "$(person)",
                                "$(person-follow)",
                                "$(person-outline)",
                                "$(person-filled)",
                                "$(git-branch)",
                                "$(git-branch-create)",
                                "$(git-branch-delete)",
                                "$(source-control)",
                                "$(mirror)",
                                "$(mirror-public)",
                                "$(star)",
                                "$(star-add)",
                                "$(star-delete)",
                                "$(star-empty)",
                                "$(comment)",
                                "$(comment-add)",
                                "$(alert)",
                                "$(warning)",
                                "$(search)",
                                "$(search-save)",
                                "$(log-out)",
                                "$(sign-out)",
                                "$(log-in)",
                                "$(sign-in)",
                                "$(eye)",
                                "$(eye-unwatch)",
                                "$(eye-watch)",
                                "$(circle-filled)",
                                "$(primitive-dot)",
                                "$(close-dirty)",
                                "$(debug-breakpoint)",
                                "$(debug-breakpoint-disabled)",
                                "$(debug-hint)",
                                "$(primitive-square)",
                                "$(edit)",
                                "$(pencil)",
                                "$(info)",
                                "$(issue-opened)",
                                "$(gist-private)",
                                "$(git-fork-private)",
                                "$(lock)",
                                "$(mirror-private)",
                                "$(close)",
                                "$(remove-close)",
                                "$(x)",
                                "$(repo-sync)",
                                "$(sync)",
                                "$(clone)",
                                "$(desktop-download)",
                                "$(beaker)",
                                "$(microscope)",
                                "$(vm)",
                                "$(device-desktop)",
                                "$(file)",
                                "$(file-text)",
                                "$(more)",
                                "$(ellipsis)",
                                "$(kebab-horizontal)",
                                "$(mail-reply)",
                                "$(reply)",
                                "$(organization)",
                                "$(organization-filled)",
                                "$(organization-outline)",
                                "$(new-file)",
                                "$(file-add)",
                                "$(new-folder)",
                                "$(file-directory-create)",
                                "$(trash)",
                                "$(trashcan)",
                                "$(history)",
                                "$(clock)",
                                "$(folder)",
                                "$(file-directory)",
                                "$(symbol-folder)",
                                "$(logo-github)",
                                "$(mark-github)",
                                "$(github)",
                                "$(terminal)",
                                "$(console)",
                                "$(repl)",
                                "$(zap)",
                                "$(symbol-event)",
                                "$(error)",
                                "$(stop)",
                                "$(variable)",
                                "$(symbol-variable)",
                                "$(array)",
                                "$(symbol-array)",
                                "$(symbol-module)",
                                "$(symbol-package)",
                                "$(symbol-namespace)",
                                "$(symbol-object)",
                                "$(symbol-method)",
                                "$(symbol-function)",
                                "$(symbol-constructor)",
                                "$(symbol-boolean)",
                                "$(symbol-null)",
                                "$(symbol-numeric)",
                                "$(symbol-number)",
                                "$(symbol-structure)",
                                "$(symbol-struct)",
                                "$(symbol-parameter)",
                                "$(symbol-type-parameter)",
                                "$(symbol-key)",
                                "$(symbol-text)",
                                "$(symbol-reference)",
                                "$(go-to-file)",
                                "$(symbol-enum)",
                                "$(symbol-value)",
                                "$(symbol-ruler)",
                                "$(symbol-unit)",
                                "$(activate-breakpoints)",
                                "$(archive)",
                                "$(arrow-both)",
                                "$(arrow-down)",
                                "$(arrow-left)",
                                "$(arrow-right)",
                                "$(arrow-small-down)",
                                "$(arrow-small-left)",
                                "$(arrow-small-right)",
                                "$(arrow-small-up)",
                                "$(arrow-up)",
                                "$(bell)",
                                "$(bold)",
                                "$(book)",
                                "$(bookmark)",
                                "$(debug-breakpoint-conditional-unverified)",
                                "$(debug-breakpoint-conditional)",
                                "$(debug-breakpoint-conditional-disabled)",
                                "$(debug-breakpoint-data-unverified)",
                                "$(debug-breakpoint-data)",
                                "$(debug-breakpoint-data-disabled)",
                                "$(debug-breakpoint-log-unverified)",
                                "$(debug-breakpoint-log)",
                                "$(debug-breakpoint-log-disabled)",
                                "$(briefcase)",
                                "$(broadcast)",
                                "$(browser)",
                                "$(bug)",
                                "$(calendar)",
                                "$(case-sensitive)",
                                "$(check)",
                                "$(checklist)",
                                "$(chevron-down)",
                                "$(drop-down-button)",
                                "$(chevron-left)",
                                "$(chevron-right)",
                                "$(chevron-up)",
                                "$(chrome-close)",
                                "$(chrome-maximize)",
                                "$(chrome-minimize)",
                                "$(chrome-restore)",
                                "$(circle)",
                                "$(circle-outline)",
                                "$(debug-breakpoint-unverified)",
                                "$(circle-slash)",
                                "$(circuit-board)",
                                "$(clear-all)",
                                "$(clippy)",
                                "$(close-all)",
                                "$(cloud-download)",
                                "$(cloud-upload)",
                                "$(code)",
                                "$(collapse-all)",
                                "$(color-mode)",
                                "$(comment-discussion)",
                                "$(compare-changes)",
                                "$(credit-card)",
                                "$(dash)",
                                "$(dashboard)",
                                "$(database)",
                                "$(debug-continue)",
                                "$(debug-disconnect)",
                                "$(debug-pause)",
                                "$(debug-restart)",
                                "$(debug-start)",
                                "$(debug-step-into)",
                                "$(debug-step-out)",
                                "$(debug-step-over)",
                                "$(debug-stop)",
                                "$(debug)",
                                "$(device-camera-video)",
                                "$(device-camera)",
                                "$(device-mobile)",
                                "$(diff-added)",
                                "$(diff-ignored)",
                                "$(diff-modified)",
                                "$(diff-removed)",
                                "$(diff-renamed)",
                                "$(diff)",
                                "$(discard)",
                                "$(editor-layout)",
                                "$(empty-window)",
                                "$(exclude)",
                                "$(extensions)",
                                "$(eye-closed)",
                                "$(file-binary)",
                                "$(file-code)",
                                "$(file-media)",
                                "$(file-pdf)",
                                "$(file-submodule)",
                                "$(file-symlink-directory)",
                                "$(file-symlink-file)",
                                "$(file-zip)",
                                "$(files)",
                                "$(filter)",
                                "$(flame)",
                                "$(fold-down)",
                                "$(fold-up)",
                                "$(fold)",
                                "$(folder-active)",
                                "$(folder-opened)",
                                "$(gear)",
                                "$(gift)",
                                "$(gist-secret)",
                                "$(gist)",
                                "$(git-commit)",
                                "$(git-compare)",
                                "$(git-merge)",
                                "$(github-action)",
                                "$(github-alt)",
                                "$(globe)",
                                "$(grabber)",
                                "$(graph)",
                                "$(gripper)",
                                "$(heart)",
                                "$(home)",
                                "$(horizontal-rule)",
                                "$(hubot)",
                                "$(inbox)",
                                "$(issue-closed)",
                                "$(issue-reopened)",
                                "$(issues)",
                                "$(italic)",
                                "$(jersey)",
                                "$(json)",
                                "$(bracket)",
                                "$(kebab-vertical)",
                                "$(key)",
                                "$(law)",
                                "$(lightbulb-autofix)",
                                "$(link-external)",
                                "$(link)",
                                "$(list-ordered)",
                                "$(list-unordered)",
                                "$(live-share)",
                                "$(loading)",
                                "$(location)",
                                "$(mail-read)",
                                "$(mail)",
                                "$(markdown)",
                                "$(megaphone)",
                                "$(mention)",
                                "$(milestone)",
                                "$(git-pull-request-milestone)",
                                "$(mortar-board)",
                                "$(move)",
                                "$(multiple-windows)",
                                "$(mute)",
                                "$(no-newline)",
                                "$(note)",
                                "$(octoface)",
                                "$(open-preview)",
                                "$(package)",
                                "$(paintcan)",
                                "$(pin)",
                                "$(play)",
                                "$(run)",
                                "$(plug)",
                                "$(preserve-case)",
                                "$(preview)",
                                "$(project)",
                                "$(pulse)",
                                "$(question)",
                                "$(quote)",
                                "$(radio-tower)",
                                "$(reactions)",
                                "$(references)",
                                "$(refresh)",
                                "$(regex)",
                                "$(remote-explorer)",
                                "$(remote)",
                                "$(remove)",
                                "$(replace-all)",
                                "$(replace)",
                                "$(repo-clone)",
                                "$(repo-force-push)",
                                "$(repo-pull)",
                                "$(repo-push)",
                                "$(report)",
                                "$(request-changes)",
                                "$(rocket)",
                                "$(root-folder-opened)",
                                "$(root-folder)",
                                "$(rss)",
                                "$(ruby)",
                                "$(save-all)",
                                "$(save-as)",
                                "$(save)",
                                "$(screen-full)",
                                "$(screen-normal)",
                                "$(search-stop)",
                                "$(server)",
                                "$(settings-gear)",
                                "$(settings)",
                                "$(shield)",
                                "$(smiley)",
                                "$(sort-precedence)",
                                "$(split-horizontal)",
                                "$(split-vertical)",
                                "$(squirrel)",
                                "$(star-full)",
                                "$(star-half)",
                                "$(symbol-class)",
                                "$(symbol-color)",
                                "$(symbol-customcolor)",
                                "$(symbol-constant)",
                                "$(symbol-enum-member)",
                                "$(symbol-field)",
                                "$(symbol-file)",
                                "$(symbol-interface)",
                                "$(symbol-keyword)",
                                "$(symbol-misc)",
                                "$(symbol-operator)",
                                "$(symbol-property)",
                                "$(wrench)",
                                "$(wrench-subaction)",
                                "$(symbol-snippet)",
                                "$(tasklist)",
                                "$(telescope)",
                                "$(text-size)",
                                "$(three-bars)",
                                "$(thumbsdown)",
                                "$(thumbsup)",
                                "$(tools)",
                                "$(triangle-down)",
                                "$(triangle-left)",
                                "$(triangle-right)",
                                "$(triangle-up)",
                                "$(twitter)",
                                "$(unfold)",
                                "$(unlock)",
                                "$(unmute)",
                                "$(unverified)",
                                "$(verified)",
                                "$(versions)",
                                "$(vm-active)",
                                "$(vm-outline)",
                                "$(vm-running)",
                                "$(watch)",
                                "$(whitespace)",
                                "$(whole-word)",
                                "$(window)",
                                "$(word-wrap)",
                                "$(zoom-in)",
                                "$(zoom-out)",
                                "$(list-filter)",
                                "$(list-flat)",
                                "$(list-selection)",
                                "$(selection)",
                                "$(list-tree)",
                                "$(debug-breakpoint-function-unverified)",
                                "$(debug-breakpoint-function)",
                                "$(debug-breakpoint-function-disabled)",
                                "$(debug-stackframe-active)",
                                "$(circle-small-filled)",
                                "$(debug-stackframe-dot)",
                                "$(debug-stackframe)",
                                "$(debug-stackframe-focused)",
                                "$(debug-breakpoint-unsupported)",
                                "$(symbol-string)",
                                "$(debug-reverse-continue)",
                                "$(debug-step-back)",
                                "$(debug-restart-frame)",
                                "$(call-incoming)",
                                "$(call-outgoing)",
                                "$(menu)",
                                "$(expand-all)",
                                "$(feedback)",
                                "$(git-pull-request-reviewer)",
                                "$(group-by-ref-type)",
                                "$(ungroup-by-ref-type)",
                                "$(account)",
                                "$(git-pull-request-assignee)",
                                "$(bell-dot)",
                                "$(debug-console)",
                                "$(library)",
                                "$(output)",
                                "$(run-all)",
                                "$(sync-ignored)",
                                "$(pinned)",
                                "$(github-inverted)",
                                "$(debug-alt)",
                                "$(server-process)",
                                "$(server-environment)",
                                "$(pass)",
                                "$(stop-circle)",
                                "$(play-circle)",
                                "$(record)",
                                "$(debug-alt-small)",
                                "$(vm-connect)",
                                "$(cloud)",
                                "$(merge)",
                                "$(export)",
                                "$(graph-left)",
                                "$(magnet)",
                                "$(notebook)",
                                "$(redo)",
                                "$(check-all)",
                                "$(pinned-dirty)",
                                "$(pass-filled)",
                                "$(circle-large-filled)",
                                "$(circle-large)",
                                "$(circle-large-outline)",
                                "$(combine)",
                                "$(gather)",
                                "$(table)",
                                "$(variable-group)",
                                "$(type-hierarchy)",
                                "$(type-hierarchy-sub)",
                                "$(type-hierarchy-super)",
                                "$(git-pull-request-create)",
                                "$(run-above)",
                                "$(run-below)",
                                "$(notebook-template)",
                                "$(debug-rerun)",
                                "$(workspace-trusted)",
                                "$(workspace-untrusted)",
                                "$(workspace-unspecified)",
                                "$(terminal-cmd)",
                                "$(terminal-debian)",
                                "$(terminal-linux)",
                                "$(terminal-powershell)",
                                "$(terminal-tmux)",
                                "$(terminal-ubuntu)",
                                "$(terminal-bash)",
                                "$(arrow-swap)",
                                "$(copy)",
                                "$(person-add)",
                                "$(filter-filled)",
                                "$(wand)",
                                "$(debug-line-by-line)",
                                "$(inspect)",
                                "$(layers)",
                                "$(layers-dot)",
                                "$(layers-active)",
                                "$(compass)",
                                "$(compass-dot)",
                                "$(compass-active)",
                                "$(azure)",
                                "$(issue-draft)",
                                "$(git-pull-request-closed)",
                                "$(git-pull-request-draft)",
                                "$(debug-all)",
                                "$(debug-coverage)",
                                "$(run-errors)",
                                "$(folder-library)",
                                "$(debug-continue-small)",
                                "$(beaker-stop)",
                                "$(graph-line)",
                                "$(graph-scatter)",
                                "$(pie-chart)",
                                "$(bracket-dot)",
                                "$(bracket-error)",
                                "$(lock-small)",
                                "$(azure-devops)",
                                "$(verified-filled)",
                                "$(newline)",
                                "$(layout)",
                                "$(layout-activitybar-left)",
                                "$(layout-activitybar-right)",
                                "$(layout-panel-left)",
                                "$(layout-panel-center)",
                                "$(layout-panel-justify)",
                                "$(layout-panel-right)",
                                "$(layout-panel)",
                                "$(layout-sidebar-left)",
                                "$(layout-sidebar-right)",
                                "$(layout-statusbar)",
                                "$(layout-menubar)",
                                "$(layout-centered)",
                                "$(layout-sidebar-right-off)",
                                "$(layout-panel-off)",
                                "$(layout-sidebar-left-off)",
                                "$(target)",
                                "$(indent)",
                                "$(record-small)",
                                "$(error-small)",
                                "$(arrow-circle-down)",
                                "$(arrow-circle-left)",
                                "$(arrow-circle-right)",
                                "$(arrow-circle-up)",
                                "$(heart-filled)",
                                "$(map)",
                                "$(map-filled)",
                                "$(circle-small)",
                                "$(bell-slash)",
                                "$(bell-slash-dot)",
                                "$(comment-unresolved)",
                                "$(git-pull-request-go-to-changes)",
                                "$(git-pull-request-new-changes)",
                                "$(search-fuzzy)",
                                "$(comment-draft)",
                                "$(send)",
                                "$(sparkle)",
                                "$(insert)",
                                "$(mic)",
                                "$(dialog-error)",
                                "$(dialog-warning)",
                                "$(dialog-info)",
                                "$(dialog-close)",
                                "$(tree-item-expanded)",
                                "$(tree-filter-on-type-on)",
                                "$(tree-filter-on-type-off)",
                                "$(tree-filter-clear)",
                                "$(tree-item-loading)",
                                "$(menu-selection)",
                                "$(menu-submenu)",
                                "$(menubar-more)",
                                "$(scrollbar-button-left)",
                                "$(scrollbar-button-right)",
                                "$(scrollbar-button-up)",
                                "$(scrollbar-button-down)",
                                "$(toolbar-more)",
                                "$(quick-input-back)"
                            ]
                        },
                        "color": {
                            "description": "A theme color ID to associate with the terminal icon.",
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "terminal.ansiBlack",
                                "terminal.ansiRed",
                                "terminal.ansiGreen",
                                "terminal.ansiYellow",
                                "terminal.ansiBlue",
                                "terminal.ansiMagenta",
                                "terminal.ansiCyan",
                                "terminal.ansiWhite"
                            ],
                            "default": null
                        },
                        "env": {
                            "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                            "type": "object",
                            "additionalProperties": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "default": {}
                        }
                    }
                }
            ],
            "defaultSnippets": [
                {
                    "body": {
                        "path": "${1}",
                        "icon": "${2}"
                    }
                }
            ],
            "defaultDefaultValue": null,
            "scope": 3
        },
        "terminal.integrated.automationProfile.osx": {
            "restricted": true,
            "markdownDescription": "The terminal profile to use on macOS for automation-related terminal usage like tasks and debug.",
            "type": [
                "object",
                "null"
            ],
            "default": null,
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "object",
                    "required": [
                        "path"
                    ],
                    "properties": {
                        "path": {
                            "description": "A single path to a shell executable.",
                            "type": [
                                "string"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "args": {
                            "description": "An optional set of arguments to run the shell executable with.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "overrideName": {
                            "description": "Controls whether or not the profile name overrides the auto detected one.",
                            "type": "boolean"
                        },
                        "icon": {
                            "description": "A codicon ID to associate with the terminal icon.",
                            "type": "string",
                            "enum": [
                                "add",
                                "plus",
                                "gist-new",
                                "repo-create",
                                "lightbulb",
                                "light-bulb",
                                "repo",
                                "repo-delete",
                                "gist-fork",
                                "repo-forked",
                                "git-pull-request",
                                "git-pull-request-abandoned",
                                "record-keys",
                                "keyboard",
                                "tag",
                                "tag-add",
                                "tag-remove",
                                "git-pull-request-label",
                                "person",
                                "person-follow",
                                "person-outline",
                                "person-filled",
                                "git-branch",
                                "git-branch-create",
                                "git-branch-delete",
                                "source-control",
                                "mirror",
                                "mirror-public",
                                "star",
                                "star-add",
                                "star-delete",
                                "star-empty",
                                "comment",
                                "comment-add",
                                "alert",
                                "warning",
                                "search",
                                "search-save",
                                "log-out",
                                "sign-out",
                                "log-in",
                                "sign-in",
                                "eye",
                                "eye-unwatch",
                                "eye-watch",
                                "circle-filled",
                                "primitive-dot",
                                "close-dirty",
                                "debug-breakpoint",
                                "debug-breakpoint-disabled",
                                "debug-hint",
                                "primitive-square",
                                "edit",
                                "pencil",
                                "info",
                                "issue-opened",
                                "gist-private",
                                "git-fork-private",
                                "lock",
                                "mirror-private",
                                "close",
                                "remove-close",
                                "x",
                                "repo-sync",
                                "sync",
                                "clone",
                                "desktop-download",
                                "beaker",
                                "microscope",
                                "vm",
                                "device-desktop",
                                "file",
                                "file-text",
                                "more",
                                "ellipsis",
                                "kebab-horizontal",
                                "mail-reply",
                                "reply",
                                "organization",
                                "organization-filled",
                                "organization-outline",
                                "new-file",
                                "file-add",
                                "new-folder",
                                "file-directory-create",
                                "trash",
                                "trashcan",
                                "history",
                                "clock",
                                "folder",
                                "file-directory",
                                "symbol-folder",
                                "logo-github",
                                "mark-github",
                                "github",
                                "terminal",
                                "console",
                                "repl",
                                "zap",
                                "symbol-event",
                                "error",
                                "stop",
                                "variable",
                                "symbol-variable",
                                "array",
                                "symbol-array",
                                "symbol-module",
                                "symbol-package",
                                "symbol-namespace",
                                "symbol-object",
                                "symbol-method",
                                "symbol-function",
                                "symbol-constructor",
                                "symbol-boolean",
                                "symbol-null",
                                "symbol-numeric",
                                "symbol-number",
                                "symbol-structure",
                                "symbol-struct",
                                "symbol-parameter",
                                "symbol-type-parameter",
                                "symbol-key",
                                "symbol-text",
                                "symbol-reference",
                                "go-to-file",
                                "symbol-enum",
                                "symbol-value",
                                "symbol-ruler",
                                "symbol-unit",
                                "activate-breakpoints",
                                "archive",
                                "arrow-both",
                                "arrow-down",
                                "arrow-left",
                                "arrow-right",
                                "arrow-small-down",
                                "arrow-small-left",
                                "arrow-small-right",
                                "arrow-small-up",
                                "arrow-up",
                                "bell",
                                "bold",
                                "book",
                                "bookmark",
                                "debug-breakpoint-conditional-unverified",
                                "debug-breakpoint-conditional",
                                "debug-breakpoint-conditional-disabled",
                                "debug-breakpoint-data-unverified",
                                "debug-breakpoint-data",
                                "debug-breakpoint-data-disabled",
                                "debug-breakpoint-log-unverified",
                                "debug-breakpoint-log",
                                "debug-breakpoint-log-disabled",
                                "briefcase",
                                "broadcast",
                                "browser",
                                "bug",
                                "calendar",
                                "case-sensitive",
                                "check",
                                "checklist",
                                "chevron-down",
                                "drop-down-button",
                                "chevron-left",
                                "chevron-right",
                                "chevron-up",
                                "chrome-close",
                                "chrome-maximize",
                                "chrome-minimize",
                                "chrome-restore",
                                "circle",
                                "circle-outline",
                                "debug-breakpoint-unverified",
                                "circle-slash",
                                "circuit-board",
                                "clear-all",
                                "clippy",
                                "close-all",
                                "cloud-download",
                                "cloud-upload",
                                "code",
                                "collapse-all",
                                "color-mode",
                                "comment-discussion",
                                "compare-changes",
                                "credit-card",
                                "dash",
                                "dashboard",
                                "database",
                                "debug-continue",
                                "debug-disconnect",
                                "debug-pause",
                                "debug-restart",
                                "debug-start",
                                "debug-step-into",
                                "debug-step-out",
                                "debug-step-over",
                                "debug-stop",
                                "debug",
                                "device-camera-video",
                                "device-camera",
                                "device-mobile",
                                "diff-added",
                                "diff-ignored",
                                "diff-modified",
                                "diff-removed",
                                "diff-renamed",
                                "diff",
                                "discard",
                                "editor-layout",
                                "empty-window",
                                "exclude",
                                "extensions",
                                "eye-closed",
                                "file-binary",
                                "file-code",
                                "file-media",
                                "file-pdf",
                                "file-submodule",
                                "file-symlink-directory",
                                "file-symlink-file",
                                "file-zip",
                                "files",
                                "filter",
                                "flame",
                                "fold-down",
                                "fold-up",
                                "fold",
                                "folder-active",
                                "folder-opened",
                                "gear",
                                "gift",
                                "gist-secret",
                                "gist",
                                "git-commit",
                                "git-compare",
                                "git-merge",
                                "github-action",
                                "github-alt",
                                "globe",
                                "grabber",
                                "graph",
                                "gripper",
                                "heart",
                                "home",
                                "horizontal-rule",
                                "hubot",
                                "inbox",
                                "issue-closed",
                                "issue-reopened",
                                "issues",
                                "italic",
                                "jersey",
                                "json",
                                "bracket",
                                "kebab-vertical",
                                "key",
                                "law",
                                "lightbulb-autofix",
                                "link-external",
                                "link",
                                "list-ordered",
                                "list-unordered",
                                "live-share",
                                "loading",
                                "location",
                                "mail-read",
                                "mail",
                                "markdown",
                                "megaphone",
                                "mention",
                                "milestone",
                                "git-pull-request-milestone",
                                "mortar-board",
                                "move",
                                "multiple-windows",
                                "mute",
                                "no-newline",
                                "note",
                                "octoface",
                                "open-preview",
                                "package",
                                "paintcan",
                                "pin",
                                "play",
                                "run",
                                "plug",
                                "preserve-case",
                                "preview",
                                "project",
                                "pulse",
                                "question",
                                "quote",
                                "radio-tower",
                                "reactions",
                                "references",
                                "refresh",
                                "regex",
                                "remote-explorer",
                                "remote",
                                "remove",
                                "replace-all",
                                "replace",
                                "repo-clone",
                                "repo-force-push",
                                "repo-pull",
                                "repo-push",
                                "report",
                                "request-changes",
                                "rocket",
                                "root-folder-opened",
                                "root-folder",
                                "rss",
                                "ruby",
                                "save-all",
                                "save-as",
                                "save",
                                "screen-full",
                                "screen-normal",
                                "search-stop",
                                "server",
                                "settings-gear",
                                "settings",
                                "shield",
                                "smiley",
                                "sort-precedence",
                                "split-horizontal",
                                "split-vertical",
                                "squirrel",
                                "star-full",
                                "star-half",
                                "symbol-class",
                                "symbol-color",
                                "symbol-customcolor",
                                "symbol-constant",
                                "symbol-enum-member",
                                "symbol-field",
                                "symbol-file",
                                "symbol-interface",
                                "symbol-keyword",
                                "symbol-misc",
                                "symbol-operator",
                                "symbol-property",
                                "wrench",
                                "wrench-subaction",
                                "symbol-snippet",
                                "tasklist",
                                "telescope",
                                "text-size",
                                "three-bars",
                                "thumbsdown",
                                "thumbsup",
                                "tools",
                                "triangle-down",
                                "triangle-left",
                                "triangle-right",
                                "triangle-up",
                                "twitter",
                                "unfold",
                                "unlock",
                                "unmute",
                                "unverified",
                                "verified",
                                "versions",
                                "vm-active",
                                "vm-outline",
                                "vm-running",
                                "watch",
                                "whitespace",
                                "whole-word",
                                "window",
                                "word-wrap",
                                "zoom-in",
                                "zoom-out",
                                "list-filter",
                                "list-flat",
                                "list-selection",
                                "selection",
                                "list-tree",
                                "debug-breakpoint-function-unverified",
                                "debug-breakpoint-function",
                                "debug-breakpoint-function-disabled",
                                "debug-stackframe-active",
                                "circle-small-filled",
                                "debug-stackframe-dot",
                                "debug-stackframe",
                                "debug-stackframe-focused",
                                "debug-breakpoint-unsupported",
                                "symbol-string",
                                "debug-reverse-continue",
                                "debug-step-back",
                                "debug-restart-frame",
                                "call-incoming",
                                "call-outgoing",
                                "menu",
                                "expand-all",
                                "feedback",
                                "git-pull-request-reviewer",
                                "group-by-ref-type",
                                "ungroup-by-ref-type",
                                "account",
                                "git-pull-request-assignee",
                                "bell-dot",
                                "debug-console",
                                "library",
                                "output",
                                "run-all",
                                "sync-ignored",
                                "pinned",
                                "github-inverted",
                                "debug-alt",
                                "server-process",
                                "server-environment",
                                "pass",
                                "stop-circle",
                                "play-circle",
                                "record",
                                "debug-alt-small",
                                "vm-connect",
                                "cloud",
                                "merge",
                                "export",
                                "graph-left",
                                "magnet",
                                "notebook",
                                "redo",
                                "check-all",
                                "pinned-dirty",
                                "pass-filled",
                                "circle-large-filled",
                                "circle-large",
                                "circle-large-outline",
                                "combine",
                                "gather",
                                "table",
                                "variable-group",
                                "type-hierarchy",
                                "type-hierarchy-sub",
                                "type-hierarchy-super",
                                "git-pull-request-create",
                                "run-above",
                                "run-below",
                                "notebook-template",
                                "debug-rerun",
                                "workspace-trusted",
                                "workspace-untrusted",
                                "workspace-unspecified",
                                "terminal-cmd",
                                "terminal-debian",
                                "terminal-linux",
                                "terminal-powershell",
                                "terminal-tmux",
                                "terminal-ubuntu",
                                "terminal-bash",
                                "arrow-swap",
                                "copy",
                                "person-add",
                                "filter-filled",
                                "wand",
                                "debug-line-by-line",
                                "inspect",
                                "layers",
                                "layers-dot",
                                "layers-active",
                                "compass",
                                "compass-dot",
                                "compass-active",
                                "azure",
                                "issue-draft",
                                "git-pull-request-closed",
                                "git-pull-request-draft",
                                "debug-all",
                                "debug-coverage",
                                "run-errors",
                                "folder-library",
                                "debug-continue-small",
                                "beaker-stop",
                                "graph-line",
                                "graph-scatter",
                                "pie-chart",
                                "bracket-dot",
                                "bracket-error",
                                "lock-small",
                                "azure-devops",
                                "verified-filled",
                                "newline",
                                "layout",
                                "layout-activitybar-left",
                                "layout-activitybar-right",
                                "layout-panel-left",
                                "layout-panel-center",
                                "layout-panel-justify",
                                "layout-panel-right",
                                "layout-panel",
                                "layout-sidebar-left",
                                "layout-sidebar-right",
                                "layout-statusbar",
                                "layout-menubar",
                                "layout-centered",
                                "layout-sidebar-right-off",
                                "layout-panel-off",
                                "layout-sidebar-left-off",
                                "target",
                                "indent",
                                "record-small",
                                "error-small",
                                "arrow-circle-down",
                                "arrow-circle-left",
                                "arrow-circle-right",
                                "arrow-circle-up",
                                "heart-filled",
                                "map",
                                "map-filled",
                                "circle-small",
                                "bell-slash",
                                "bell-slash-dot",
                                "comment-unresolved",
                                "git-pull-request-go-to-changes",
                                "git-pull-request-new-changes",
                                "search-fuzzy",
                                "comment-draft",
                                "send",
                                "sparkle",
                                "insert",
                                "mic",
                                "dialog-error",
                                "dialog-warning",
                                "dialog-info",
                                "dialog-close",
                                "tree-item-expanded",
                                "tree-filter-on-type-on",
                                "tree-filter-on-type-off",
                                "tree-filter-clear",
                                "tree-item-loading",
                                "menu-selection",
                                "menu-submenu",
                                "menubar-more",
                                "scrollbar-button-left",
                                "scrollbar-button-right",
                                "scrollbar-button-up",
                                "scrollbar-button-down",
                                "toolbar-more",
                                "quick-input-back"
                            ],
                            "markdownEnumDescriptions": [
                                "$(add)",
                                "$(plus)",
                                "$(gist-new)",
                                "$(repo-create)",
                                "$(lightbulb)",
                                "$(light-bulb)",
                                "$(repo)",
                                "$(repo-delete)",
                                "$(gist-fork)",
                                "$(repo-forked)",
                                "$(git-pull-request)",
                                "$(git-pull-request-abandoned)",
                                "$(record-keys)",
                                "$(keyboard)",
                                "$(tag)",
                                "$(tag-add)",
                                "$(tag-remove)",
                                "$(git-pull-request-label)",
                                "$(person)",
                                "$(person-follow)",
                                "$(person-outline)",
                                "$(person-filled)",
                                "$(git-branch)",
                                "$(git-branch-create)",
                                "$(git-branch-delete)",
                                "$(source-control)",
                                "$(mirror)",
                                "$(mirror-public)",
                                "$(star)",
                                "$(star-add)",
                                "$(star-delete)",
                                "$(star-empty)",
                                "$(comment)",
                                "$(comment-add)",
                                "$(alert)",
                                "$(warning)",
                                "$(search)",
                                "$(search-save)",
                                "$(log-out)",
                                "$(sign-out)",
                                "$(log-in)",
                                "$(sign-in)",
                                "$(eye)",
                                "$(eye-unwatch)",
                                "$(eye-watch)",
                                "$(circle-filled)",
                                "$(primitive-dot)",
                                "$(close-dirty)",
                                "$(debug-breakpoint)",
                                "$(debug-breakpoint-disabled)",
                                "$(debug-hint)",
                                "$(primitive-square)",
                                "$(edit)",
                                "$(pencil)",
                                "$(info)",
                                "$(issue-opened)",
                                "$(gist-private)",
                                "$(git-fork-private)",
                                "$(lock)",
                                "$(mirror-private)",
                                "$(close)",
                                "$(remove-close)",
                                "$(x)",
                                "$(repo-sync)",
                                "$(sync)",
                                "$(clone)",
                                "$(desktop-download)",
                                "$(beaker)",
                                "$(microscope)",
                                "$(vm)",
                                "$(device-desktop)",
                                "$(file)",
                                "$(file-text)",
                                "$(more)",
                                "$(ellipsis)",
                                "$(kebab-horizontal)",
                                "$(mail-reply)",
                                "$(reply)",
                                "$(organization)",
                                "$(organization-filled)",
                                "$(organization-outline)",
                                "$(new-file)",
                                "$(file-add)",
                                "$(new-folder)",
                                "$(file-directory-create)",
                                "$(trash)",
                                "$(trashcan)",
                                "$(history)",
                                "$(clock)",
                                "$(folder)",
                                "$(file-directory)",
                                "$(symbol-folder)",
                                "$(logo-github)",
                                "$(mark-github)",
                                "$(github)",
                                "$(terminal)",
                                "$(console)",
                                "$(repl)",
                                "$(zap)",
                                "$(symbol-event)",
                                "$(error)",
                                "$(stop)",
                                "$(variable)",
                                "$(symbol-variable)",
                                "$(array)",
                                "$(symbol-array)",
                                "$(symbol-module)",
                                "$(symbol-package)",
                                "$(symbol-namespace)",
                                "$(symbol-object)",
                                "$(symbol-method)",
                                "$(symbol-function)",
                                "$(symbol-constructor)",
                                "$(symbol-boolean)",
                                "$(symbol-null)",
                                "$(symbol-numeric)",
                                "$(symbol-number)",
                                "$(symbol-structure)",
                                "$(symbol-struct)",
                                "$(symbol-parameter)",
                                "$(symbol-type-parameter)",
                                "$(symbol-key)",
                                "$(symbol-text)",
                                "$(symbol-reference)",
                                "$(go-to-file)",
                                "$(symbol-enum)",
                                "$(symbol-value)",
                                "$(symbol-ruler)",
                                "$(symbol-unit)",
                                "$(activate-breakpoints)",
                                "$(archive)",
                                "$(arrow-both)",
                                "$(arrow-down)",
                                "$(arrow-left)",
                                "$(arrow-right)",
                                "$(arrow-small-down)",
                                "$(arrow-small-left)",
                                "$(arrow-small-right)",
                                "$(arrow-small-up)",
                                "$(arrow-up)",
                                "$(bell)",
                                "$(bold)",
                                "$(book)",
                                "$(bookmark)",
                                "$(debug-breakpoint-conditional-unverified)",
                                "$(debug-breakpoint-conditional)",
                                "$(debug-breakpoint-conditional-disabled)",
                                "$(debug-breakpoint-data-unverified)",
                                "$(debug-breakpoint-data)",
                                "$(debug-breakpoint-data-disabled)",
                                "$(debug-breakpoint-log-unverified)",
                                "$(debug-breakpoint-log)",
                                "$(debug-breakpoint-log-disabled)",
                                "$(briefcase)",
                                "$(broadcast)",
                                "$(browser)",
                                "$(bug)",
                                "$(calendar)",
                                "$(case-sensitive)",
                                "$(check)",
                                "$(checklist)",
                                "$(chevron-down)",
                                "$(drop-down-button)",
                                "$(chevron-left)",
                                "$(chevron-right)",
                                "$(chevron-up)",
                                "$(chrome-close)",
                                "$(chrome-maximize)",
                                "$(chrome-minimize)",
                                "$(chrome-restore)",
                                "$(circle)",
                                "$(circle-outline)",
                                "$(debug-breakpoint-unverified)",
                                "$(circle-slash)",
                                "$(circuit-board)",
                                "$(clear-all)",
                                "$(clippy)",
                                "$(close-all)",
                                "$(cloud-download)",
                                "$(cloud-upload)",
                                "$(code)",
                                "$(collapse-all)",
                                "$(color-mode)",
                                "$(comment-discussion)",
                                "$(compare-changes)",
                                "$(credit-card)",
                                "$(dash)",
                                "$(dashboard)",
                                "$(database)",
                                "$(debug-continue)",
                                "$(debug-disconnect)",
                                "$(debug-pause)",
                                "$(debug-restart)",
                                "$(debug-start)",
                                "$(debug-step-into)",
                                "$(debug-step-out)",
                                "$(debug-step-over)",
                                "$(debug-stop)",
                                "$(debug)",
                                "$(device-camera-video)",
                                "$(device-camera)",
                                "$(device-mobile)",
                                "$(diff-added)",
                                "$(diff-ignored)",
                                "$(diff-modified)",
                                "$(diff-removed)",
                                "$(diff-renamed)",
                                "$(diff)",
                                "$(discard)",
                                "$(editor-layout)",
                                "$(empty-window)",
                                "$(exclude)",
                                "$(extensions)",
                                "$(eye-closed)",
                                "$(file-binary)",
                                "$(file-code)",
                                "$(file-media)",
                                "$(file-pdf)",
                                "$(file-submodule)",
                                "$(file-symlink-directory)",
                                "$(file-symlink-file)",
                                "$(file-zip)",
                                "$(files)",
                                "$(filter)",
                                "$(flame)",
                                "$(fold-down)",
                                "$(fold-up)",
                                "$(fold)",
                                "$(folder-active)",
                                "$(folder-opened)",
                                "$(gear)",
                                "$(gift)",
                                "$(gist-secret)",
                                "$(gist)",
                                "$(git-commit)",
                                "$(git-compare)",
                                "$(git-merge)",
                                "$(github-action)",
                                "$(github-alt)",
                                "$(globe)",
                                "$(grabber)",
                                "$(graph)",
                                "$(gripper)",
                                "$(heart)",
                                "$(home)",
                                "$(horizontal-rule)",
                                "$(hubot)",
                                "$(inbox)",
                                "$(issue-closed)",
                                "$(issue-reopened)",
                                "$(issues)",
                                "$(italic)",
                                "$(jersey)",
                                "$(json)",
                                "$(bracket)",
                                "$(kebab-vertical)",
                                "$(key)",
                                "$(law)",
                                "$(lightbulb-autofix)",
                                "$(link-external)",
                                "$(link)",
                                "$(list-ordered)",
                                "$(list-unordered)",
                                "$(live-share)",
                                "$(loading)",
                                "$(location)",
                                "$(mail-read)",
                                "$(mail)",
                                "$(markdown)",
                                "$(megaphone)",
                                "$(mention)",
                                "$(milestone)",
                                "$(git-pull-request-milestone)",
                                "$(mortar-board)",
                                "$(move)",
                                "$(multiple-windows)",
                                "$(mute)",
                                "$(no-newline)",
                                "$(note)",
                                "$(octoface)",
                                "$(open-preview)",
                                "$(package)",
                                "$(paintcan)",
                                "$(pin)",
                                "$(play)",
                                "$(run)",
                                "$(plug)",
                                "$(preserve-case)",
                                "$(preview)",
                                "$(project)",
                                "$(pulse)",
                                "$(question)",
                                "$(quote)",
                                "$(radio-tower)",
                                "$(reactions)",
                                "$(references)",
                                "$(refresh)",
                                "$(regex)",
                                "$(remote-explorer)",
                                "$(remote)",
                                "$(remove)",
                                "$(replace-all)",
                                "$(replace)",
                                "$(repo-clone)",
                                "$(repo-force-push)",
                                "$(repo-pull)",
                                "$(repo-push)",
                                "$(report)",
                                "$(request-changes)",
                                "$(rocket)",
                                "$(root-folder-opened)",
                                "$(root-folder)",
                                "$(rss)",
                                "$(ruby)",
                                "$(save-all)",
                                "$(save-as)",
                                "$(save)",
                                "$(screen-full)",
                                "$(screen-normal)",
                                "$(search-stop)",
                                "$(server)",
                                "$(settings-gear)",
                                "$(settings)",
                                "$(shield)",
                                "$(smiley)",
                                "$(sort-precedence)",
                                "$(split-horizontal)",
                                "$(split-vertical)",
                                "$(squirrel)",
                                "$(star-full)",
                                "$(star-half)",
                                "$(symbol-class)",
                                "$(symbol-color)",
                                "$(symbol-customcolor)",
                                "$(symbol-constant)",
                                "$(symbol-enum-member)",
                                "$(symbol-field)",
                                "$(symbol-file)",
                                "$(symbol-interface)",
                                "$(symbol-keyword)",
                                "$(symbol-misc)",
                                "$(symbol-operator)",
                                "$(symbol-property)",
                                "$(wrench)",
                                "$(wrench-subaction)",
                                "$(symbol-snippet)",
                                "$(tasklist)",
                                "$(telescope)",
                                "$(text-size)",
                                "$(three-bars)",
                                "$(thumbsdown)",
                                "$(thumbsup)",
                                "$(tools)",
                                "$(triangle-down)",
                                "$(triangle-left)",
                                "$(triangle-right)",
                                "$(triangle-up)",
                                "$(twitter)",
                                "$(unfold)",
                                "$(unlock)",
                                "$(unmute)",
                                "$(unverified)",
                                "$(verified)",
                                "$(versions)",
                                "$(vm-active)",
                                "$(vm-outline)",
                                "$(vm-running)",
                                "$(watch)",
                                "$(whitespace)",
                                "$(whole-word)",
                                "$(window)",
                                "$(word-wrap)",
                                "$(zoom-in)",
                                "$(zoom-out)",
                                "$(list-filter)",
                                "$(list-flat)",
                                "$(list-selection)",
                                "$(selection)",
                                "$(list-tree)",
                                "$(debug-breakpoint-function-unverified)",
                                "$(debug-breakpoint-function)",
                                "$(debug-breakpoint-function-disabled)",
                                "$(debug-stackframe-active)",
                                "$(circle-small-filled)",
                                "$(debug-stackframe-dot)",
                                "$(debug-stackframe)",
                                "$(debug-stackframe-focused)",
                                "$(debug-breakpoint-unsupported)",
                                "$(symbol-string)",
                                "$(debug-reverse-continue)",
                                "$(debug-step-back)",
                                "$(debug-restart-frame)",
                                "$(call-incoming)",
                                "$(call-outgoing)",
                                "$(menu)",
                                "$(expand-all)",
                                "$(feedback)",
                                "$(git-pull-request-reviewer)",
                                "$(group-by-ref-type)",
                                "$(ungroup-by-ref-type)",
                                "$(account)",
                                "$(git-pull-request-assignee)",
                                "$(bell-dot)",
                                "$(debug-console)",
                                "$(library)",
                                "$(output)",
                                "$(run-all)",
                                "$(sync-ignored)",
                                "$(pinned)",
                                "$(github-inverted)",
                                "$(debug-alt)",
                                "$(server-process)",
                                "$(server-environment)",
                                "$(pass)",
                                "$(stop-circle)",
                                "$(play-circle)",
                                "$(record)",
                                "$(debug-alt-small)",
                                "$(vm-connect)",
                                "$(cloud)",
                                "$(merge)",
                                "$(export)",
                                "$(graph-left)",
                                "$(magnet)",
                                "$(notebook)",
                                "$(redo)",
                                "$(check-all)",
                                "$(pinned-dirty)",
                                "$(pass-filled)",
                                "$(circle-large-filled)",
                                "$(circle-large)",
                                "$(circle-large-outline)",
                                "$(combine)",
                                "$(gather)",
                                "$(table)",
                                "$(variable-group)",
                                "$(type-hierarchy)",
                                "$(type-hierarchy-sub)",
                                "$(type-hierarchy-super)",
                                "$(git-pull-request-create)",
                                "$(run-above)",
                                "$(run-below)",
                                "$(notebook-template)",
                                "$(debug-rerun)",
                                "$(workspace-trusted)",
                                "$(workspace-untrusted)",
                                "$(workspace-unspecified)",
                                "$(terminal-cmd)",
                                "$(terminal-debian)",
                                "$(terminal-linux)",
                                "$(terminal-powershell)",
                                "$(terminal-tmux)",
                                "$(terminal-ubuntu)",
                                "$(terminal-bash)",
                                "$(arrow-swap)",
                                "$(copy)",
                                "$(person-add)",
                                "$(filter-filled)",
                                "$(wand)",
                                "$(debug-line-by-line)",
                                "$(inspect)",
                                "$(layers)",
                                "$(layers-dot)",
                                "$(layers-active)",
                                "$(compass)",
                                "$(compass-dot)",
                                "$(compass-active)",
                                "$(azure)",
                                "$(issue-draft)",
                                "$(git-pull-request-closed)",
                                "$(git-pull-request-draft)",
                                "$(debug-all)",
                                "$(debug-coverage)",
                                "$(run-errors)",
                                "$(folder-library)",
                                "$(debug-continue-small)",
                                "$(beaker-stop)",
                                "$(graph-line)",
                                "$(graph-scatter)",
                                "$(pie-chart)",
                                "$(bracket-dot)",
                                "$(bracket-error)",
                                "$(lock-small)",
                                "$(azure-devops)",
                                "$(verified-filled)",
                                "$(newline)",
                                "$(layout)",
                                "$(layout-activitybar-left)",
                                "$(layout-activitybar-right)",
                                "$(layout-panel-left)",
                                "$(layout-panel-center)",
                                "$(layout-panel-justify)",
                                "$(layout-panel-right)",
                                "$(layout-panel)",
                                "$(layout-sidebar-left)",
                                "$(layout-sidebar-right)",
                                "$(layout-statusbar)",
                                "$(layout-menubar)",
                                "$(layout-centered)",
                                "$(layout-sidebar-right-off)",
                                "$(layout-panel-off)",
                                "$(layout-sidebar-left-off)",
                                "$(target)",
                                "$(indent)",
                                "$(record-small)",
                                "$(error-small)",
                                "$(arrow-circle-down)",
                                "$(arrow-circle-left)",
                                "$(arrow-circle-right)",
                                "$(arrow-circle-up)",
                                "$(heart-filled)",
                                "$(map)",
                                "$(map-filled)",
                                "$(circle-small)",
                                "$(bell-slash)",
                                "$(bell-slash-dot)",
                                "$(comment-unresolved)",
                                "$(git-pull-request-go-to-changes)",
                                "$(git-pull-request-new-changes)",
                                "$(search-fuzzy)",
                                "$(comment-draft)",
                                "$(send)",
                                "$(sparkle)",
                                "$(insert)",
                                "$(mic)",
                                "$(dialog-error)",
                                "$(dialog-warning)",
                                "$(dialog-info)",
                                "$(dialog-close)",
                                "$(tree-item-expanded)",
                                "$(tree-filter-on-type-on)",
                                "$(tree-filter-on-type-off)",
                                "$(tree-filter-clear)",
                                "$(tree-item-loading)",
                                "$(menu-selection)",
                                "$(menu-submenu)",
                                "$(menubar-more)",
                                "$(scrollbar-button-left)",
                                "$(scrollbar-button-right)",
                                "$(scrollbar-button-up)",
                                "$(scrollbar-button-down)",
                                "$(toolbar-more)",
                                "$(quick-input-back)"
                            ]
                        },
                        "color": {
                            "description": "A theme color ID to associate with the terminal icon.",
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "terminal.ansiBlack",
                                "terminal.ansiRed",
                                "terminal.ansiGreen",
                                "terminal.ansiYellow",
                                "terminal.ansiBlue",
                                "terminal.ansiMagenta",
                                "terminal.ansiCyan",
                                "terminal.ansiWhite"
                            ],
                            "default": null
                        },
                        "env": {
                            "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                            "type": "object",
                            "additionalProperties": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "default": {}
                        }
                    }
                }
            ],
            "defaultSnippets": [
                {
                    "body": {
                        "path": "${1}",
                        "icon": "${2}"
                    }
                }
            ],
            "defaultDefaultValue": null,
            "scope": 3
        },
        "terminal.integrated.automationProfile.windows": {
            "restricted": true,
            "markdownDescription": "The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if `terminal.integrated.automationShell.windows` (now deprecated) is set.",
            "type": [
                "object",
                "null"
            ],
            "default": null,
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "object",
                    "required": [
                        "path"
                    ],
                    "properties": {
                        "path": {
                            "description": "A single path to a shell executable.",
                            "type": [
                                "string"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "args": {
                            "description": "An optional set of arguments to run the shell executable with.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "overrideName": {
                            "description": "Controls whether or not the profile name overrides the auto detected one.",
                            "type": "boolean"
                        },
                        "icon": {
                            "description": "A codicon ID to associate with the terminal icon.",
                            "type": "string",
                            "enum": [
                                "add",
                                "plus",
                                "gist-new",
                                "repo-create",
                                "lightbulb",
                                "light-bulb",
                                "repo",
                                "repo-delete",
                                "gist-fork",
                                "repo-forked",
                                "git-pull-request",
                                "git-pull-request-abandoned",
                                "record-keys",
                                "keyboard",
                                "tag",
                                "tag-add",
                                "tag-remove",
                                "git-pull-request-label",
                                "person",
                                "person-follow",
                                "person-outline",
                                "person-filled",
                                "git-branch",
                                "git-branch-create",
                                "git-branch-delete",
                                "source-control",
                                "mirror",
                                "mirror-public",
                                "star",
                                "star-add",
                                "star-delete",
                                "star-empty",
                                "comment",
                                "comment-add",
                                "alert",
                                "warning",
                                "search",
                                "search-save",
                                "log-out",
                                "sign-out",
                                "log-in",
                                "sign-in",
                                "eye",
                                "eye-unwatch",
                                "eye-watch",
                                "circle-filled",
                                "primitive-dot",
                                "close-dirty",
                                "debug-breakpoint",
                                "debug-breakpoint-disabled",
                                "debug-hint",
                                "primitive-square",
                                "edit",
                                "pencil",
                                "info",
                                "issue-opened",
                                "gist-private",
                                "git-fork-private",
                                "lock",
                                "mirror-private",
                                "close",
                                "remove-close",
                                "x",
                                "repo-sync",
                                "sync",
                                "clone",
                                "desktop-download",
                                "beaker",
                                "microscope",
                                "vm",
                                "device-desktop",
                                "file",
                                "file-text",
                                "more",
                                "ellipsis",
                                "kebab-horizontal",
                                "mail-reply",
                                "reply",
                                "organization",
                                "organization-filled",
                                "organization-outline",
                                "new-file",
                                "file-add",
                                "new-folder",
                                "file-directory-create",
                                "trash",
                                "trashcan",
                                "history",
                                "clock",
                                "folder",
                                "file-directory",
                                "symbol-folder",
                                "logo-github",
                                "mark-github",
                                "github",
                                "terminal",
                                "console",
                                "repl",
                                "zap",
                                "symbol-event",
                                "error",
                                "stop",
                                "variable",
                                "symbol-variable",
                                "array",
                                "symbol-array",
                                "symbol-module",
                                "symbol-package",
                                "symbol-namespace",
                                "symbol-object",
                                "symbol-method",
                                "symbol-function",
                                "symbol-constructor",
                                "symbol-boolean",
                                "symbol-null",
                                "symbol-numeric",
                                "symbol-number",
                                "symbol-structure",
                                "symbol-struct",
                                "symbol-parameter",
                                "symbol-type-parameter",
                                "symbol-key",
                                "symbol-text",
                                "symbol-reference",
                                "go-to-file",
                                "symbol-enum",
                                "symbol-value",
                                "symbol-ruler",
                                "symbol-unit",
                                "activate-breakpoints",
                                "archive",
                                "arrow-both",
                                "arrow-down",
                                "arrow-left",
                                "arrow-right",
                                "arrow-small-down",
                                "arrow-small-left",
                                "arrow-small-right",
                                "arrow-small-up",
                                "arrow-up",
                                "bell",
                                "bold",
                                "book",
                                "bookmark",
                                "debug-breakpoint-conditional-unverified",
                                "debug-breakpoint-conditional",
                                "debug-breakpoint-conditional-disabled",
                                "debug-breakpoint-data-unverified",
                                "debug-breakpoint-data",
                                "debug-breakpoint-data-disabled",
                                "debug-breakpoint-log-unverified",
                                "debug-breakpoint-log",
                                "debug-breakpoint-log-disabled",
                                "briefcase",
                                "broadcast",
                                "browser",
                                "bug",
                                "calendar",
                                "case-sensitive",
                                "check",
                                "checklist",
                                "chevron-down",
                                "drop-down-button",
                                "chevron-left",
                                "chevron-right",
                                "chevron-up",
                                "chrome-close",
                                "chrome-maximize",
                                "chrome-minimize",
                                "chrome-restore",
                                "circle",
                                "circle-outline",
                                "debug-breakpoint-unverified",
                                "circle-slash",
                                "circuit-board",
                                "clear-all",
                                "clippy",
                                "close-all",
                                "cloud-download",
                                "cloud-upload",
                                "code",
                                "collapse-all",
                                "color-mode",
                                "comment-discussion",
                                "compare-changes",
                                "credit-card",
                                "dash",
                                "dashboard",
                                "database",
                                "debug-continue",
                                "debug-disconnect",
                                "debug-pause",
                                "debug-restart",
                                "debug-start",
                                "debug-step-into",
                                "debug-step-out",
                                "debug-step-over",
                                "debug-stop",
                                "debug",
                                "device-camera-video",
                                "device-camera",
                                "device-mobile",
                                "diff-added",
                                "diff-ignored",
                                "diff-modified",
                                "diff-removed",
                                "diff-renamed",
                                "diff",
                                "discard",
                                "editor-layout",
                                "empty-window",
                                "exclude",
                                "extensions",
                                "eye-closed",
                                "file-binary",
                                "file-code",
                                "file-media",
                                "file-pdf",
                                "file-submodule",
                                "file-symlink-directory",
                                "file-symlink-file",
                                "file-zip",
                                "files",
                                "filter",
                                "flame",
                                "fold-down",
                                "fold-up",
                                "fold",
                                "folder-active",
                                "folder-opened",
                                "gear",
                                "gift",
                                "gist-secret",
                                "gist",
                                "git-commit",
                                "git-compare",
                                "git-merge",
                                "github-action",
                                "github-alt",
                                "globe",
                                "grabber",
                                "graph",
                                "gripper",
                                "heart",
                                "home",
                                "horizontal-rule",
                                "hubot",
                                "inbox",
                                "issue-closed",
                                "issue-reopened",
                                "issues",
                                "italic",
                                "jersey",
                                "json",
                                "bracket",
                                "kebab-vertical",
                                "key",
                                "law",
                                "lightbulb-autofix",
                                "link-external",
                                "link",
                                "list-ordered",
                                "list-unordered",
                                "live-share",
                                "loading",
                                "location",
                                "mail-read",
                                "mail",
                                "markdown",
                                "megaphone",
                                "mention",
                                "milestone",
                                "git-pull-request-milestone",
                                "mortar-board",
                                "move",
                                "multiple-windows",
                                "mute",
                                "no-newline",
                                "note",
                                "octoface",
                                "open-preview",
                                "package",
                                "paintcan",
                                "pin",
                                "play",
                                "run",
                                "plug",
                                "preserve-case",
                                "preview",
                                "project",
                                "pulse",
                                "question",
                                "quote",
                                "radio-tower",
                                "reactions",
                                "references",
                                "refresh",
                                "regex",
                                "remote-explorer",
                                "remote",
                                "remove",
                                "replace-all",
                                "replace",
                                "repo-clone",
                                "repo-force-push",
                                "repo-pull",
                                "repo-push",
                                "report",
                                "request-changes",
                                "rocket",
                                "root-folder-opened",
                                "root-folder",
                                "rss",
                                "ruby",
                                "save-all",
                                "save-as",
                                "save",
                                "screen-full",
                                "screen-normal",
                                "search-stop",
                                "server",
                                "settings-gear",
                                "settings",
                                "shield",
                                "smiley",
                                "sort-precedence",
                                "split-horizontal",
                                "split-vertical",
                                "squirrel",
                                "star-full",
                                "star-half",
                                "symbol-class",
                                "symbol-color",
                                "symbol-customcolor",
                                "symbol-constant",
                                "symbol-enum-member",
                                "symbol-field",
                                "symbol-file",
                                "symbol-interface",
                                "symbol-keyword",
                                "symbol-misc",
                                "symbol-operator",
                                "symbol-property",
                                "wrench",
                                "wrench-subaction",
                                "symbol-snippet",
                                "tasklist",
                                "telescope",
                                "text-size",
                                "three-bars",
                                "thumbsdown",
                                "thumbsup",
                                "tools",
                                "triangle-down",
                                "triangle-left",
                                "triangle-right",
                                "triangle-up",
                                "twitter",
                                "unfold",
                                "unlock",
                                "unmute",
                                "unverified",
                                "verified",
                                "versions",
                                "vm-active",
                                "vm-outline",
                                "vm-running",
                                "watch",
                                "whitespace",
                                "whole-word",
                                "window",
                                "word-wrap",
                                "zoom-in",
                                "zoom-out",
                                "list-filter",
                                "list-flat",
                                "list-selection",
                                "selection",
                                "list-tree",
                                "debug-breakpoint-function-unverified",
                                "debug-breakpoint-function",
                                "debug-breakpoint-function-disabled",
                                "debug-stackframe-active",
                                "circle-small-filled",
                                "debug-stackframe-dot",
                                "debug-stackframe",
                                "debug-stackframe-focused",
                                "debug-breakpoint-unsupported",
                                "symbol-string",
                                "debug-reverse-continue",
                                "debug-step-back",
                                "debug-restart-frame",
                                "call-incoming",
                                "call-outgoing",
                                "menu",
                                "expand-all",
                                "feedback",
                                "git-pull-request-reviewer",
                                "group-by-ref-type",
                                "ungroup-by-ref-type",
                                "account",
                                "git-pull-request-assignee",
                                "bell-dot",
                                "debug-console",
                                "library",
                                "output",
                                "run-all",
                                "sync-ignored",
                                "pinned",
                                "github-inverted",
                                "debug-alt",
                                "server-process",
                                "server-environment",
                                "pass",
                                "stop-circle",
                                "play-circle",
                                "record",
                                "debug-alt-small",
                                "vm-connect",
                                "cloud",
                                "merge",
                                "export",
                                "graph-left",
                                "magnet",
                                "notebook",
                                "redo",
                                "check-all",
                                "pinned-dirty",
                                "pass-filled",
                                "circle-large-filled",
                                "circle-large",
                                "circle-large-outline",
                                "combine",
                                "gather",
                                "table",
                                "variable-group",
                                "type-hierarchy",
                                "type-hierarchy-sub",
                                "type-hierarchy-super",
                                "git-pull-request-create",
                                "run-above",
                                "run-below",
                                "notebook-template",
                                "debug-rerun",
                                "workspace-trusted",
                                "workspace-untrusted",
                                "workspace-unspecified",
                                "terminal-cmd",
                                "terminal-debian",
                                "terminal-linux",
                                "terminal-powershell",
                                "terminal-tmux",
                                "terminal-ubuntu",
                                "terminal-bash",
                                "arrow-swap",
                                "copy",
                                "person-add",
                                "filter-filled",
                                "wand",
                                "debug-line-by-line",
                                "inspect",
                                "layers",
                                "layers-dot",
                                "layers-active",
                                "compass",
                                "compass-dot",
                                "compass-active",
                                "azure",
                                "issue-draft",
                                "git-pull-request-closed",
                                "git-pull-request-draft",
                                "debug-all",
                                "debug-coverage",
                                "run-errors",
                                "folder-library",
                                "debug-continue-small",
                                "beaker-stop",
                                "graph-line",
                                "graph-scatter",
                                "pie-chart",
                                "bracket-dot",
                                "bracket-error",
                                "lock-small",
                                "azure-devops",
                                "verified-filled",
                                "newline",
                                "layout",
                                "layout-activitybar-left",
                                "layout-activitybar-right",
                                "layout-panel-left",
                                "layout-panel-center",
                                "layout-panel-justify",
                                "layout-panel-right",
                                "layout-panel",
                                "layout-sidebar-left",
                                "layout-sidebar-right",
                                "layout-statusbar",
                                "layout-menubar",
                                "layout-centered",
                                "layout-sidebar-right-off",
                                "layout-panel-off",
                                "layout-sidebar-left-off",
                                "target",
                                "indent",
                                "record-small",
                                "error-small",
                                "arrow-circle-down",
                                "arrow-circle-left",
                                "arrow-circle-right",
                                "arrow-circle-up",
                                "heart-filled",
                                "map",
                                "map-filled",
                                "circle-small",
                                "bell-slash",
                                "bell-slash-dot",
                                "comment-unresolved",
                                "git-pull-request-go-to-changes",
                                "git-pull-request-new-changes",
                                "search-fuzzy",
                                "comment-draft",
                                "send",
                                "sparkle",
                                "insert",
                                "mic",
                                "dialog-error",
                                "dialog-warning",
                                "dialog-info",
                                "dialog-close",
                                "tree-item-expanded",
                                "tree-filter-on-type-on",
                                "tree-filter-on-type-off",
                                "tree-filter-clear",
                                "tree-item-loading",
                                "menu-selection",
                                "menu-submenu",
                                "menubar-more",
                                "scrollbar-button-left",
                                "scrollbar-button-right",
                                "scrollbar-button-up",
                                "scrollbar-button-down",
                                "toolbar-more",
                                "quick-input-back"
                            ],
                            "markdownEnumDescriptions": [
                                "$(add)",
                                "$(plus)",
                                "$(gist-new)",
                                "$(repo-create)",
                                "$(lightbulb)",
                                "$(light-bulb)",
                                "$(repo)",
                                "$(repo-delete)",
                                "$(gist-fork)",
                                "$(repo-forked)",
                                "$(git-pull-request)",
                                "$(git-pull-request-abandoned)",
                                "$(record-keys)",
                                "$(keyboard)",
                                "$(tag)",
                                "$(tag-add)",
                                "$(tag-remove)",
                                "$(git-pull-request-label)",
                                "$(person)",
                                "$(person-follow)",
                                "$(person-outline)",
                                "$(person-filled)",
                                "$(git-branch)",
                                "$(git-branch-create)",
                                "$(git-branch-delete)",
                                "$(source-control)",
                                "$(mirror)",
                                "$(mirror-public)",
                                "$(star)",
                                "$(star-add)",
                                "$(star-delete)",
                                "$(star-empty)",
                                "$(comment)",
                                "$(comment-add)",
                                "$(alert)",
                                "$(warning)",
                                "$(search)",
                                "$(search-save)",
                                "$(log-out)",
                                "$(sign-out)",
                                "$(log-in)",
                                "$(sign-in)",
                                "$(eye)",
                                "$(eye-unwatch)",
                                "$(eye-watch)",
                                "$(circle-filled)",
                                "$(primitive-dot)",
                                "$(close-dirty)",
                                "$(debug-breakpoint)",
                                "$(debug-breakpoint-disabled)",
                                "$(debug-hint)",
                                "$(primitive-square)",
                                "$(edit)",
                                "$(pencil)",
                                "$(info)",
                                "$(issue-opened)",
                                "$(gist-private)",
                                "$(git-fork-private)",
                                "$(lock)",
                                "$(mirror-private)",
                                "$(close)",
                                "$(remove-close)",
                                "$(x)",
                                "$(repo-sync)",
                                "$(sync)",
                                "$(clone)",
                                "$(desktop-download)",
                                "$(beaker)",
                                "$(microscope)",
                                "$(vm)",
                                "$(device-desktop)",
                                "$(file)",
                                "$(file-text)",
                                "$(more)",
                                "$(ellipsis)",
                                "$(kebab-horizontal)",
                                "$(mail-reply)",
                                "$(reply)",
                                "$(organization)",
                                "$(organization-filled)",
                                "$(organization-outline)",
                                "$(new-file)",
                                "$(file-add)",
                                "$(new-folder)",
                                "$(file-directory-create)",
                                "$(trash)",
                                "$(trashcan)",
                                "$(history)",
                                "$(clock)",
                                "$(folder)",
                                "$(file-directory)",
                                "$(symbol-folder)",
                                "$(logo-github)",
                                "$(mark-github)",
                                "$(github)",
                                "$(terminal)",
                                "$(console)",
                                "$(repl)",
                                "$(zap)",
                                "$(symbol-event)",
                                "$(error)",
                                "$(stop)",
                                "$(variable)",
                                "$(symbol-variable)",
                                "$(array)",
                                "$(symbol-array)",
                                "$(symbol-module)",
                                "$(symbol-package)",
                                "$(symbol-namespace)",
                                "$(symbol-object)",
                                "$(symbol-method)",
                                "$(symbol-function)",
                                "$(symbol-constructor)",
                                "$(symbol-boolean)",
                                "$(symbol-null)",
                                "$(symbol-numeric)",
                                "$(symbol-number)",
                                "$(symbol-structure)",
                                "$(symbol-struct)",
                                "$(symbol-parameter)",
                                "$(symbol-type-parameter)",
                                "$(symbol-key)",
                                "$(symbol-text)",
                                "$(symbol-reference)",
                                "$(go-to-file)",
                                "$(symbol-enum)",
                                "$(symbol-value)",
                                "$(symbol-ruler)",
                                "$(symbol-unit)",
                                "$(activate-breakpoints)",
                                "$(archive)",
                                "$(arrow-both)",
                                "$(arrow-down)",
                                "$(arrow-left)",
                                "$(arrow-right)",
                                "$(arrow-small-down)",
                                "$(arrow-small-left)",
                                "$(arrow-small-right)",
                                "$(arrow-small-up)",
                                "$(arrow-up)",
                                "$(bell)",
                                "$(bold)",
                                "$(book)",
                                "$(bookmark)",
                                "$(debug-breakpoint-conditional-unverified)",
                                "$(debug-breakpoint-conditional)",
                                "$(debug-breakpoint-conditional-disabled)",
                                "$(debug-breakpoint-data-unverified)",
                                "$(debug-breakpoint-data)",
                                "$(debug-breakpoint-data-disabled)",
                                "$(debug-breakpoint-log-unverified)",
                                "$(debug-breakpoint-log)",
                                "$(debug-breakpoint-log-disabled)",
                                "$(briefcase)",
                                "$(broadcast)",
                                "$(browser)",
                                "$(bug)",
                                "$(calendar)",
                                "$(case-sensitive)",
                                "$(check)",
                                "$(checklist)",
                                "$(chevron-down)",
                                "$(drop-down-button)",
                                "$(chevron-left)",
                                "$(chevron-right)",
                                "$(chevron-up)",
                                "$(chrome-close)",
                                "$(chrome-maximize)",
                                "$(chrome-minimize)",
                                "$(chrome-restore)",
                                "$(circle)",
                                "$(circle-outline)",
                                "$(debug-breakpoint-unverified)",
                                "$(circle-slash)",
                                "$(circuit-board)",
                                "$(clear-all)",
                                "$(clippy)",
                                "$(close-all)",
                                "$(cloud-download)",
                                "$(cloud-upload)",
                                "$(code)",
                                "$(collapse-all)",
                                "$(color-mode)",
                                "$(comment-discussion)",
                                "$(compare-changes)",
                                "$(credit-card)",
                                "$(dash)",
                                "$(dashboard)",
                                "$(database)",
                                "$(debug-continue)",
                                "$(debug-disconnect)",
                                "$(debug-pause)",
                                "$(debug-restart)",
                                "$(debug-start)",
                                "$(debug-step-into)",
                                "$(debug-step-out)",
                                "$(debug-step-over)",
                                "$(debug-stop)",
                                "$(debug)",
                                "$(device-camera-video)",
                                "$(device-camera)",
                                "$(device-mobile)",
                                "$(diff-added)",
                                "$(diff-ignored)",
                                "$(diff-modified)",
                                "$(diff-removed)",
                                "$(diff-renamed)",
                                "$(diff)",
                                "$(discard)",
                                "$(editor-layout)",
                                "$(empty-window)",
                                "$(exclude)",
                                "$(extensions)",
                                "$(eye-closed)",
                                "$(file-binary)",
                                "$(file-code)",
                                "$(file-media)",
                                "$(file-pdf)",
                                "$(file-submodule)",
                                "$(file-symlink-directory)",
                                "$(file-symlink-file)",
                                "$(file-zip)",
                                "$(files)",
                                "$(filter)",
                                "$(flame)",
                                "$(fold-down)",
                                "$(fold-up)",
                                "$(fold)",
                                "$(folder-active)",
                                "$(folder-opened)",
                                "$(gear)",
                                "$(gift)",
                                "$(gist-secret)",
                                "$(gist)",
                                "$(git-commit)",
                                "$(git-compare)",
                                "$(git-merge)",
                                "$(github-action)",
                                "$(github-alt)",
                                "$(globe)",
                                "$(grabber)",
                                "$(graph)",
                                "$(gripper)",
                                "$(heart)",
                                "$(home)",
                                "$(horizontal-rule)",
                                "$(hubot)",
                                "$(inbox)",
                                "$(issue-closed)",
                                "$(issue-reopened)",
                                "$(issues)",
                                "$(italic)",
                                "$(jersey)",
                                "$(json)",
                                "$(bracket)",
                                "$(kebab-vertical)",
                                "$(key)",
                                "$(law)",
                                "$(lightbulb-autofix)",
                                "$(link-external)",
                                "$(link)",
                                "$(list-ordered)",
                                "$(list-unordered)",
                                "$(live-share)",
                                "$(loading)",
                                "$(location)",
                                "$(mail-read)",
                                "$(mail)",
                                "$(markdown)",
                                "$(megaphone)",
                                "$(mention)",
                                "$(milestone)",
                                "$(git-pull-request-milestone)",
                                "$(mortar-board)",
                                "$(move)",
                                "$(multiple-windows)",
                                "$(mute)",
                                "$(no-newline)",
                                "$(note)",
                                "$(octoface)",
                                "$(open-preview)",
                                "$(package)",
                                "$(paintcan)",
                                "$(pin)",
                                "$(play)",
                                "$(run)",
                                "$(plug)",
                                "$(preserve-case)",
                                "$(preview)",
                                "$(project)",
                                "$(pulse)",
                                "$(question)",
                                "$(quote)",
                                "$(radio-tower)",
                                "$(reactions)",
                                "$(references)",
                                "$(refresh)",
                                "$(regex)",
                                "$(remote-explorer)",
                                "$(remote)",
                                "$(remove)",
                                "$(replace-all)",
                                "$(replace)",
                                "$(repo-clone)",
                                "$(repo-force-push)",
                                "$(repo-pull)",
                                "$(repo-push)",
                                "$(report)",
                                "$(request-changes)",
                                "$(rocket)",
                                "$(root-folder-opened)",
                                "$(root-folder)",
                                "$(rss)",
                                "$(ruby)",
                                "$(save-all)",
                                "$(save-as)",
                                "$(save)",
                                "$(screen-full)",
                                "$(screen-normal)",
                                "$(search-stop)",
                                "$(server)",
                                "$(settings-gear)",
                                "$(settings)",
                                "$(shield)",
                                "$(smiley)",
                                "$(sort-precedence)",
                                "$(split-horizontal)",
                                "$(split-vertical)",
                                "$(squirrel)",
                                "$(star-full)",
                                "$(star-half)",
                                "$(symbol-class)",
                                "$(symbol-color)",
                                "$(symbol-customcolor)",
                                "$(symbol-constant)",
                                "$(symbol-enum-member)",
                                "$(symbol-field)",
                                "$(symbol-file)",
                                "$(symbol-interface)",
                                "$(symbol-keyword)",
                                "$(symbol-misc)",
                                "$(symbol-operator)",
                                "$(symbol-property)",
                                "$(wrench)",
                                "$(wrench-subaction)",
                                "$(symbol-snippet)",
                                "$(tasklist)",
                                "$(telescope)",
                                "$(text-size)",
                                "$(three-bars)",
                                "$(thumbsdown)",
                                "$(thumbsup)",
                                "$(tools)",
                                "$(triangle-down)",
                                "$(triangle-left)",
                                "$(triangle-right)",
                                "$(triangle-up)",
                                "$(twitter)",
                                "$(unfold)",
                                "$(unlock)",
                                "$(unmute)",
                                "$(unverified)",
                                "$(verified)",
                                "$(versions)",
                                "$(vm-active)",
                                "$(vm-outline)",
                                "$(vm-running)",
                                "$(watch)",
                                "$(whitespace)",
                                "$(whole-word)",
                                "$(window)",
                                "$(word-wrap)",
                                "$(zoom-in)",
                                "$(zoom-out)",
                                "$(list-filter)",
                                "$(list-flat)",
                                "$(list-selection)",
                                "$(selection)",
                                "$(list-tree)",
                                "$(debug-breakpoint-function-unverified)",
                                "$(debug-breakpoint-function)",
                                "$(debug-breakpoint-function-disabled)",
                                "$(debug-stackframe-active)",
                                "$(circle-small-filled)",
                                "$(debug-stackframe-dot)",
                                "$(debug-stackframe)",
                                "$(debug-stackframe-focused)",
                                "$(debug-breakpoint-unsupported)",
                                "$(symbol-string)",
                                "$(debug-reverse-continue)",
                                "$(debug-step-back)",
                                "$(debug-restart-frame)",
                                "$(call-incoming)",
                                "$(call-outgoing)",
                                "$(menu)",
                                "$(expand-all)",
                                "$(feedback)",
                                "$(git-pull-request-reviewer)",
                                "$(group-by-ref-type)",
                                "$(ungroup-by-ref-type)",
                                "$(account)",
                                "$(git-pull-request-assignee)",
                                "$(bell-dot)",
                                "$(debug-console)",
                                "$(library)",
                                "$(output)",
                                "$(run-all)",
                                "$(sync-ignored)",
                                "$(pinned)",
                                "$(github-inverted)",
                                "$(debug-alt)",
                                "$(server-process)",
                                "$(server-environment)",
                                "$(pass)",
                                "$(stop-circle)",
                                "$(play-circle)",
                                "$(record)",
                                "$(debug-alt-small)",
                                "$(vm-connect)",
                                "$(cloud)",
                                "$(merge)",
                                "$(export)",
                                "$(graph-left)",
                                "$(magnet)",
                                "$(notebook)",
                                "$(redo)",
                                "$(check-all)",
                                "$(pinned-dirty)",
                                "$(pass-filled)",
                                "$(circle-large-filled)",
                                "$(circle-large)",
                                "$(circle-large-outline)",
                                "$(combine)",
                                "$(gather)",
                                "$(table)",
                                "$(variable-group)",
                                "$(type-hierarchy)",
                                "$(type-hierarchy-sub)",
                                "$(type-hierarchy-super)",
                                "$(git-pull-request-create)",
                                "$(run-above)",
                                "$(run-below)",
                                "$(notebook-template)",
                                "$(debug-rerun)",
                                "$(workspace-trusted)",
                                "$(workspace-untrusted)",
                                "$(workspace-unspecified)",
                                "$(terminal-cmd)",
                                "$(terminal-debian)",
                                "$(terminal-linux)",
                                "$(terminal-powershell)",
                                "$(terminal-tmux)",
                                "$(terminal-ubuntu)",
                                "$(terminal-bash)",
                                "$(arrow-swap)",
                                "$(copy)",
                                "$(person-add)",
                                "$(filter-filled)",
                                "$(wand)",
                                "$(debug-line-by-line)",
                                "$(inspect)",
                                "$(layers)",
                                "$(layers-dot)",
                                "$(layers-active)",
                                "$(compass)",
                                "$(compass-dot)",
                                "$(compass-active)",
                                "$(azure)",
                                "$(issue-draft)",
                                "$(git-pull-request-closed)",
                                "$(git-pull-request-draft)",
                                "$(debug-all)",
                                "$(debug-coverage)",
                                "$(run-errors)",
                                "$(folder-library)",
                                "$(debug-continue-small)",
                                "$(beaker-stop)",
                                "$(graph-line)",
                                "$(graph-scatter)",
                                "$(pie-chart)",
                                "$(bracket-dot)",
                                "$(bracket-error)",
                                "$(lock-small)",
                                "$(azure-devops)",
                                "$(verified-filled)",
                                "$(newline)",
                                "$(layout)",
                                "$(layout-activitybar-left)",
                                "$(layout-activitybar-right)",
                                "$(layout-panel-left)",
                                "$(layout-panel-center)",
                                "$(layout-panel-justify)",
                                "$(layout-panel-right)",
                                "$(layout-panel)",
                                "$(layout-sidebar-left)",
                                "$(layout-sidebar-right)",
                                "$(layout-statusbar)",
                                "$(layout-menubar)",
                                "$(layout-centered)",
                                "$(layout-sidebar-right-off)",
                                "$(layout-panel-off)",
                                "$(layout-sidebar-left-off)",
                                "$(target)",
                                "$(indent)",
                                "$(record-small)",
                                "$(error-small)",
                                "$(arrow-circle-down)",
                                "$(arrow-circle-left)",
                                "$(arrow-circle-right)",
                                "$(arrow-circle-up)",
                                "$(heart-filled)",
                                "$(map)",
                                "$(map-filled)",
                                "$(circle-small)",
                                "$(bell-slash)",
                                "$(bell-slash-dot)",
                                "$(comment-unresolved)",
                                "$(git-pull-request-go-to-changes)",
                                "$(git-pull-request-new-changes)",
                                "$(search-fuzzy)",
                                "$(comment-draft)",
                                "$(send)",
                                "$(sparkle)",
                                "$(insert)",
                                "$(mic)",
                                "$(dialog-error)",
                                "$(dialog-warning)",
                                "$(dialog-info)",
                                "$(dialog-close)",
                                "$(tree-item-expanded)",
                                "$(tree-filter-on-type-on)",
                                "$(tree-filter-on-type-off)",
                                "$(tree-filter-clear)",
                                "$(tree-item-loading)",
                                "$(menu-selection)",
                                "$(menu-submenu)",
                                "$(menubar-more)",
                                "$(scrollbar-button-left)",
                                "$(scrollbar-button-right)",
                                "$(scrollbar-button-up)",
                                "$(scrollbar-button-down)",
                                "$(toolbar-more)",
                                "$(quick-input-back)"
                            ]
                        },
                        "color": {
                            "description": "A theme color ID to associate with the terminal icon.",
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "terminal.ansiBlack",
                                "terminal.ansiRed",
                                "terminal.ansiGreen",
                                "terminal.ansiYellow",
                                "terminal.ansiBlue",
                                "terminal.ansiMagenta",
                                "terminal.ansiCyan",
                                "terminal.ansiWhite"
                            ],
                            "default": null
                        },
                        "env": {
                            "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                            "type": "object",
                            "additionalProperties": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "default": {}
                        }
                    }
                }
            ],
            "defaultSnippets": [
                {
                    "body": {
                        "path": "${1}",
                        "icon": "${2}"
                    }
                }
            ],
            "defaultDefaultValue": null,
            "scope": 3
        },
        "terminal.integrated.profiles.windows": {
            "restricted": true,
            "markdownDescription": "A set of terminal profile customizations for Windows which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n```json\n\"terminal.integrated.profile.windows\": {\n  \"bash\": null\n}\n```\n\n[Read more about configuring profiles](https://code.visualstudio.com/docs/terminal/profiles).",
            "type": "object",
            "default": {
                "PowerShell": {
                    "source": "PowerShell",
                    "icon": "terminal-powershell"
                },
                "Command Prompt": {
                    "path": [
                        "${env:windir}\\Sysnative\\cmd.exe",
                        "${env:windir}\\System32\\cmd.exe"
                    ],
                    "args": [],
                    "icon": "terminal-cmd"
                },
                "Git Bash": {
                    "source": "Git Bash"
                }
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "object",
                        "required": [
                            "source"
                        ],
                        "properties": {
                            "source": {
                                "description": "A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.",
                                "enum": [
                                    "PowerShell",
                                    "Git Bash"
                                ]
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": [
                            "extensionIdentifier",
                            "id",
                            "title"
                        ],
                        "properties": {
                            "extensionIdentifier": {
                                "description": "The extension that contributed this profile.",
                                "type": "string"
                            },
                            "id": {
                                "description": "The id of the extension terminal",
                                "type": "string"
                            },
                            "title": {
                                "description": "The name of the extension terminal",
                                "type": "string"
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    },
                    {
                        "type": "null"
                    },
                    {
                        "type": "object",
                        "required": [
                            "path"
                        ],
                        "properties": {
                            "path": {
                                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                                "type": [
                                    "string",
                                    "array"
                                ],
                                "items": {
                                    "type": "string"
                                }
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    }
                ]
            },
            "defaultDefaultValue": {
                "PowerShell": {
                    "source": "PowerShell",
                    "icon": "terminal-powershell"
                },
                "Command Prompt": {
                    "path": [
                        "${env:windir}\\Sysnative\\cmd.exe",
                        "${env:windir}\\System32\\cmd.exe"
                    ],
                    "args": [],
                    "icon": "terminal-cmd"
                },
                "Git Bash": {
                    "source": "Git Bash"
                }
            },
            "scope": 3
        },
        "terminal.integrated.profiles.osx": {
            "restricted": true,
            "markdownDescription": "A set of terminal profile customizations for Mac which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n```json\n\"terminal.integrated.profile.osx\": {\n  \"bash\": null\n}\n```\n\n[Read more about configuring profiles](https://code.visualstudio.com/docs/terminal/profiles).",
            "type": "object",
            "default": {
                "bash": {
                    "path": "bash",
                    "args": [
                        "-l"
                    ],
                    "icon": "terminal-bash"
                },
                "zsh": {
                    "path": "zsh",
                    "args": [
                        "-l"
                    ]
                },
                "fish": {
                    "path": "fish",
                    "args": [
                        "-l"
                    ]
                },
                "tmux": {
                    "path": "tmux",
                    "icon": "terminal-tmux"
                },
                "pwsh": {
                    "path": "pwsh",
                    "icon": "terminal-powershell"
                }
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "object",
                        "required": [
                            "extensionIdentifier",
                            "id",
                            "title"
                        ],
                        "properties": {
                            "extensionIdentifier": {
                                "description": "The extension that contributed this profile.",
                                "type": "string"
                            },
                            "id": {
                                "description": "The id of the extension terminal",
                                "type": "string"
                            },
                            "title": {
                                "description": "The name of the extension terminal",
                                "type": "string"
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    },
                    {
                        "type": "null"
                    },
                    {
                        "type": "object",
                        "required": [
                            "path"
                        ],
                        "properties": {
                            "path": {
                                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                                "type": [
                                    "string",
                                    "array"
                                ],
                                "items": {
                                    "type": "string"
                                }
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    }
                ]
            },
            "defaultDefaultValue": {
                "bash": {
                    "path": "bash",
                    "args": [
                        "-l"
                    ],
                    "icon": "terminal-bash"
                },
                "zsh": {
                    "path": "zsh",
                    "args": [
                        "-l"
                    ]
                },
                "fish": {
                    "path": "fish",
                    "args": [
                        "-l"
                    ]
                },
                "tmux": {
                    "path": "tmux",
                    "icon": "terminal-tmux"
                },
                "pwsh": {
                    "path": "pwsh",
                    "icon": "terminal-powershell"
                }
            },
            "scope": 3
        },
        "terminal.integrated.profiles.linux": {
            "restricted": true,
            "markdownDescription": "A set of terminal profile customizations for Linux which allows adding, removing or changing how terminals are launched. Profiles are made up of a mandatory path, optional arguments and other presentation options.\n\nTo override an existing profile use its profile name as the key, for example:\n\n```json\n\"terminal.integrated.profile.linux\": {\n  \"bash\": null\n}\n```\n\n[Read more about configuring profiles](https://code.visualstudio.com/docs/terminal/profiles).",
            "type": "object",
            "default": {
                "bash": {
                    "path": "bash",
                    "icon": "terminal-bash"
                },
                "zsh": {
                    "path": "zsh"
                },
                "fish": {
                    "path": "fish"
                },
                "tmux": {
                    "path": "tmux",
                    "icon": "terminal-tmux"
                },
                "pwsh": {
                    "path": "pwsh",
                    "icon": "terminal-powershell"
                }
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "object",
                        "required": [
                            "extensionIdentifier",
                            "id",
                            "title"
                        ],
                        "properties": {
                            "extensionIdentifier": {
                                "description": "The extension that contributed this profile.",
                                "type": "string"
                            },
                            "id": {
                                "description": "The id of the extension terminal",
                                "type": "string"
                            },
                            "title": {
                                "description": "The name of the extension terminal",
                                "type": "string"
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    },
                    {
                        "type": "null"
                    },
                    {
                        "type": "object",
                        "required": [
                            "path"
                        ],
                        "properties": {
                            "path": {
                                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                                "type": [
                                    "string",
                                    "array"
                                ],
                                "items": {
                                    "type": "string"
                                }
                            },
                            "args": {
                                "description": "An optional set of arguments to run the shell executable with.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "overrideName": {
                                "description": "Controls whether or not the profile name overrides the auto detected one.",
                                "type": "boolean"
                            },
                            "icon": {
                                "description": "A codicon ID to associate with the terminal icon.",
                                "type": "string",
                                "enum": [
                                    "add",
                                    "plus",
                                    "gist-new",
                                    "repo-create",
                                    "lightbulb",
                                    "light-bulb",
                                    "repo",
                                    "repo-delete",
                                    "gist-fork",
                                    "repo-forked",
                                    "git-pull-request",
                                    "git-pull-request-abandoned",
                                    "record-keys",
                                    "keyboard",
                                    "tag",
                                    "tag-add",
                                    "tag-remove",
                                    "git-pull-request-label",
                                    "person",
                                    "person-follow",
                                    "person-outline",
                                    "person-filled",
                                    "git-branch",
                                    "git-branch-create",
                                    "git-branch-delete",
                                    "source-control",
                                    "mirror",
                                    "mirror-public",
                                    "star",
                                    "star-add",
                                    "star-delete",
                                    "star-empty",
                                    "comment",
                                    "comment-add",
                                    "alert",
                                    "warning",
                                    "search",
                                    "search-save",
                                    "log-out",
                                    "sign-out",
                                    "log-in",
                                    "sign-in",
                                    "eye",
                                    "eye-unwatch",
                                    "eye-watch",
                                    "circle-filled",
                                    "primitive-dot",
                                    "close-dirty",
                                    "debug-breakpoint",
                                    "debug-breakpoint-disabled",
                                    "debug-hint",
                                    "primitive-square",
                                    "edit",
                                    "pencil",
                                    "info",
                                    "issue-opened",
                                    "gist-private",
                                    "git-fork-private",
                                    "lock",
                                    "mirror-private",
                                    "close",
                                    "remove-close",
                                    "x",
                                    "repo-sync",
                                    "sync",
                                    "clone",
                                    "desktop-download",
                                    "beaker",
                                    "microscope",
                                    "vm",
                                    "device-desktop",
                                    "file",
                                    "file-text",
                                    "more",
                                    "ellipsis",
                                    "kebab-horizontal",
                                    "mail-reply",
                                    "reply",
                                    "organization",
                                    "organization-filled",
                                    "organization-outline",
                                    "new-file",
                                    "file-add",
                                    "new-folder",
                                    "file-directory-create",
                                    "trash",
                                    "trashcan",
                                    "history",
                                    "clock",
                                    "folder",
                                    "file-directory",
                                    "symbol-folder",
                                    "logo-github",
                                    "mark-github",
                                    "github",
                                    "terminal",
                                    "console",
                                    "repl",
                                    "zap",
                                    "symbol-event",
                                    "error",
                                    "stop",
                                    "variable",
                                    "symbol-variable",
                                    "array",
                                    "symbol-array",
                                    "symbol-module",
                                    "symbol-package",
                                    "symbol-namespace",
                                    "symbol-object",
                                    "symbol-method",
                                    "symbol-function",
                                    "symbol-constructor",
                                    "symbol-boolean",
                                    "symbol-null",
                                    "symbol-numeric",
                                    "symbol-number",
                                    "symbol-structure",
                                    "symbol-struct",
                                    "symbol-parameter",
                                    "symbol-type-parameter",
                                    "symbol-key",
                                    "symbol-text",
                                    "symbol-reference",
                                    "go-to-file",
                                    "symbol-enum",
                                    "symbol-value",
                                    "symbol-ruler",
                                    "symbol-unit",
                                    "activate-breakpoints",
                                    "archive",
                                    "arrow-both",
                                    "arrow-down",
                                    "arrow-left",
                                    "arrow-right",
                                    "arrow-small-down",
                                    "arrow-small-left",
                                    "arrow-small-right",
                                    "arrow-small-up",
                                    "arrow-up",
                                    "bell",
                                    "bold",
                                    "book",
                                    "bookmark",
                                    "debug-breakpoint-conditional-unverified",
                                    "debug-breakpoint-conditional",
                                    "debug-breakpoint-conditional-disabled",
                                    "debug-breakpoint-data-unverified",
                                    "debug-breakpoint-data",
                                    "debug-breakpoint-data-disabled",
                                    "debug-breakpoint-log-unverified",
                                    "debug-breakpoint-log",
                                    "debug-breakpoint-log-disabled",
                                    "briefcase",
                                    "broadcast",
                                    "browser",
                                    "bug",
                                    "calendar",
                                    "case-sensitive",
                                    "check",
                                    "checklist",
                                    "chevron-down",
                                    "drop-down-button",
                                    "chevron-left",
                                    "chevron-right",
                                    "chevron-up",
                                    "chrome-close",
                                    "chrome-maximize",
                                    "chrome-minimize",
                                    "chrome-restore",
                                    "circle",
                                    "circle-outline",
                                    "debug-breakpoint-unverified",
                                    "circle-slash",
                                    "circuit-board",
                                    "clear-all",
                                    "clippy",
                                    "close-all",
                                    "cloud-download",
                                    "cloud-upload",
                                    "code",
                                    "collapse-all",
                                    "color-mode",
                                    "comment-discussion",
                                    "compare-changes",
                                    "credit-card",
                                    "dash",
                                    "dashboard",
                                    "database",
                                    "debug-continue",
                                    "debug-disconnect",
                                    "debug-pause",
                                    "debug-restart",
                                    "debug-start",
                                    "debug-step-into",
                                    "debug-step-out",
                                    "debug-step-over",
                                    "debug-stop",
                                    "debug",
                                    "device-camera-video",
                                    "device-camera",
                                    "device-mobile",
                                    "diff-added",
                                    "diff-ignored",
                                    "diff-modified",
                                    "diff-removed",
                                    "diff-renamed",
                                    "diff",
                                    "discard",
                                    "editor-layout",
                                    "empty-window",
                                    "exclude",
                                    "extensions",
                                    "eye-closed",
                                    "file-binary",
                                    "file-code",
                                    "file-media",
                                    "file-pdf",
                                    "file-submodule",
                                    "file-symlink-directory",
                                    "file-symlink-file",
                                    "file-zip",
                                    "files",
                                    "filter",
                                    "flame",
                                    "fold-down",
                                    "fold-up",
                                    "fold",
                                    "folder-active",
                                    "folder-opened",
                                    "gear",
                                    "gift",
                                    "gist-secret",
                                    "gist",
                                    "git-commit",
                                    "git-compare",
                                    "git-merge",
                                    "github-action",
                                    "github-alt",
                                    "globe",
                                    "grabber",
                                    "graph",
                                    "gripper",
                                    "heart",
                                    "home",
                                    "horizontal-rule",
                                    "hubot",
                                    "inbox",
                                    "issue-closed",
                                    "issue-reopened",
                                    "issues",
                                    "italic",
                                    "jersey",
                                    "json",
                                    "bracket",
                                    "kebab-vertical",
                                    "key",
                                    "law",
                                    "lightbulb-autofix",
                                    "link-external",
                                    "link",
                                    "list-ordered",
                                    "list-unordered",
                                    "live-share",
                                    "loading",
                                    "location",
                                    "mail-read",
                                    "mail",
                                    "markdown",
                                    "megaphone",
                                    "mention",
                                    "milestone",
                                    "git-pull-request-milestone",
                                    "mortar-board",
                                    "move",
                                    "multiple-windows",
                                    "mute",
                                    "no-newline",
                                    "note",
                                    "octoface",
                                    "open-preview",
                                    "package",
                                    "paintcan",
                                    "pin",
                                    "play",
                                    "run",
                                    "plug",
                                    "preserve-case",
                                    "preview",
                                    "project",
                                    "pulse",
                                    "question",
                                    "quote",
                                    "radio-tower",
                                    "reactions",
                                    "references",
                                    "refresh",
                                    "regex",
                                    "remote-explorer",
                                    "remote",
                                    "remove",
                                    "replace-all",
                                    "replace",
                                    "repo-clone",
                                    "repo-force-push",
                                    "repo-pull",
                                    "repo-push",
                                    "report",
                                    "request-changes",
                                    "rocket",
                                    "root-folder-opened",
                                    "root-folder",
                                    "rss",
                                    "ruby",
                                    "save-all",
                                    "save-as",
                                    "save",
                                    "screen-full",
                                    "screen-normal",
                                    "search-stop",
                                    "server",
                                    "settings-gear",
                                    "settings",
                                    "shield",
                                    "smiley",
                                    "sort-precedence",
                                    "split-horizontal",
                                    "split-vertical",
                                    "squirrel",
                                    "star-full",
                                    "star-half",
                                    "symbol-class",
                                    "symbol-color",
                                    "symbol-customcolor",
                                    "symbol-constant",
                                    "symbol-enum-member",
                                    "symbol-field",
                                    "symbol-file",
                                    "symbol-interface",
                                    "symbol-keyword",
                                    "symbol-misc",
                                    "symbol-operator",
                                    "symbol-property",
                                    "wrench",
                                    "wrench-subaction",
                                    "symbol-snippet",
                                    "tasklist",
                                    "telescope",
                                    "text-size",
                                    "three-bars",
                                    "thumbsdown",
                                    "thumbsup",
                                    "tools",
                                    "triangle-down",
                                    "triangle-left",
                                    "triangle-right",
                                    "triangle-up",
                                    "twitter",
                                    "unfold",
                                    "unlock",
                                    "unmute",
                                    "unverified",
                                    "verified",
                                    "versions",
                                    "vm-active",
                                    "vm-outline",
                                    "vm-running",
                                    "watch",
                                    "whitespace",
                                    "whole-word",
                                    "window",
                                    "word-wrap",
                                    "zoom-in",
                                    "zoom-out",
                                    "list-filter",
                                    "list-flat",
                                    "list-selection",
                                    "selection",
                                    "list-tree",
                                    "debug-breakpoint-function-unverified",
                                    "debug-breakpoint-function",
                                    "debug-breakpoint-function-disabled",
                                    "debug-stackframe-active",
                                    "circle-small-filled",
                                    "debug-stackframe-dot",
                                    "debug-stackframe",
                                    "debug-stackframe-focused",
                                    "debug-breakpoint-unsupported",
                                    "symbol-string",
                                    "debug-reverse-continue",
                                    "debug-step-back",
                                    "debug-restart-frame",
                                    "call-incoming",
                                    "call-outgoing",
                                    "menu",
                                    "expand-all",
                                    "feedback",
                                    "git-pull-request-reviewer",
                                    "group-by-ref-type",
                                    "ungroup-by-ref-type",
                                    "account",
                                    "git-pull-request-assignee",
                                    "bell-dot",
                                    "debug-console",
                                    "library",
                                    "output",
                                    "run-all",
                                    "sync-ignored",
                                    "pinned",
                                    "github-inverted",
                                    "debug-alt",
                                    "server-process",
                                    "server-environment",
                                    "pass",
                                    "stop-circle",
                                    "play-circle",
                                    "record",
                                    "debug-alt-small",
                                    "vm-connect",
                                    "cloud",
                                    "merge",
                                    "export",
                                    "graph-left",
                                    "magnet",
                                    "notebook",
                                    "redo",
                                    "check-all",
                                    "pinned-dirty",
                                    "pass-filled",
                                    "circle-large-filled",
                                    "circle-large",
                                    "circle-large-outline",
                                    "combine",
                                    "gather",
                                    "table",
                                    "variable-group",
                                    "type-hierarchy",
                                    "type-hierarchy-sub",
                                    "type-hierarchy-super",
                                    "git-pull-request-create",
                                    "run-above",
                                    "run-below",
                                    "notebook-template",
                                    "debug-rerun",
                                    "workspace-trusted",
                                    "workspace-untrusted",
                                    "workspace-unspecified",
                                    "terminal-cmd",
                                    "terminal-debian",
                                    "terminal-linux",
                                    "terminal-powershell",
                                    "terminal-tmux",
                                    "terminal-ubuntu",
                                    "terminal-bash",
                                    "arrow-swap",
                                    "copy",
                                    "person-add",
                                    "filter-filled",
                                    "wand",
                                    "debug-line-by-line",
                                    "inspect",
                                    "layers",
                                    "layers-dot",
                                    "layers-active",
                                    "compass",
                                    "compass-dot",
                                    "compass-active",
                                    "azure",
                                    "issue-draft",
                                    "git-pull-request-closed",
                                    "git-pull-request-draft",
                                    "debug-all",
                                    "debug-coverage",
                                    "run-errors",
                                    "folder-library",
                                    "debug-continue-small",
                                    "beaker-stop",
                                    "graph-line",
                                    "graph-scatter",
                                    "pie-chart",
                                    "bracket-dot",
                                    "bracket-error",
                                    "lock-small",
                                    "azure-devops",
                                    "verified-filled",
                                    "newline",
                                    "layout",
                                    "layout-activitybar-left",
                                    "layout-activitybar-right",
                                    "layout-panel-left",
                                    "layout-panel-center",
                                    "layout-panel-justify",
                                    "layout-panel-right",
                                    "layout-panel",
                                    "layout-sidebar-left",
                                    "layout-sidebar-right",
                                    "layout-statusbar",
                                    "layout-menubar",
                                    "layout-centered",
                                    "layout-sidebar-right-off",
                                    "layout-panel-off",
                                    "layout-sidebar-left-off",
                                    "target",
                                    "indent",
                                    "record-small",
                                    "error-small",
                                    "arrow-circle-down",
                                    "arrow-circle-left",
                                    "arrow-circle-right",
                                    "arrow-circle-up",
                                    "heart-filled",
                                    "map",
                                    "map-filled",
                                    "circle-small",
                                    "bell-slash",
                                    "bell-slash-dot",
                                    "comment-unresolved",
                                    "git-pull-request-go-to-changes",
                                    "git-pull-request-new-changes",
                                    "search-fuzzy",
                                    "comment-draft",
                                    "send",
                                    "sparkle",
                                    "insert",
                                    "mic",
                                    "dialog-error",
                                    "dialog-warning",
                                    "dialog-info",
                                    "dialog-close",
                                    "tree-item-expanded",
                                    "tree-filter-on-type-on",
                                    "tree-filter-on-type-off",
                                    "tree-filter-clear",
                                    "tree-item-loading",
                                    "menu-selection",
                                    "menu-submenu",
                                    "menubar-more",
                                    "scrollbar-button-left",
                                    "scrollbar-button-right",
                                    "scrollbar-button-up",
                                    "scrollbar-button-down",
                                    "toolbar-more",
                                    "quick-input-back"
                                ],
                                "markdownEnumDescriptions": [
                                    "$(add)",
                                    "$(plus)",
                                    "$(gist-new)",
                                    "$(repo-create)",
                                    "$(lightbulb)",
                                    "$(light-bulb)",
                                    "$(repo)",
                                    "$(repo-delete)",
                                    "$(gist-fork)",
                                    "$(repo-forked)",
                                    "$(git-pull-request)",
                                    "$(git-pull-request-abandoned)",
                                    "$(record-keys)",
                                    "$(keyboard)",
                                    "$(tag)",
                                    "$(tag-add)",
                                    "$(tag-remove)",
                                    "$(git-pull-request-label)",
                                    "$(person)",
                                    "$(person-follow)",
                                    "$(person-outline)",
                                    "$(person-filled)",
                                    "$(git-branch)",
                                    "$(git-branch-create)",
                                    "$(git-branch-delete)",
                                    "$(source-control)",
                                    "$(mirror)",
                                    "$(mirror-public)",
                                    "$(star)",
                                    "$(star-add)",
                                    "$(star-delete)",
                                    "$(star-empty)",
                                    "$(comment)",
                                    "$(comment-add)",
                                    "$(alert)",
                                    "$(warning)",
                                    "$(search)",
                                    "$(search-save)",
                                    "$(log-out)",
                                    "$(sign-out)",
                                    "$(log-in)",
                                    "$(sign-in)",
                                    "$(eye)",
                                    "$(eye-unwatch)",
                                    "$(eye-watch)",
                                    "$(circle-filled)",
                                    "$(primitive-dot)",
                                    "$(close-dirty)",
                                    "$(debug-breakpoint)",
                                    "$(debug-breakpoint-disabled)",
                                    "$(debug-hint)",
                                    "$(primitive-square)",
                                    "$(edit)",
                                    "$(pencil)",
                                    "$(info)",
                                    "$(issue-opened)",
                                    "$(gist-private)",
                                    "$(git-fork-private)",
                                    "$(lock)",
                                    "$(mirror-private)",
                                    "$(close)",
                                    "$(remove-close)",
                                    "$(x)",
                                    "$(repo-sync)",
                                    "$(sync)",
                                    "$(clone)",
                                    "$(desktop-download)",
                                    "$(beaker)",
                                    "$(microscope)",
                                    "$(vm)",
                                    "$(device-desktop)",
                                    "$(file)",
                                    "$(file-text)",
                                    "$(more)",
                                    "$(ellipsis)",
                                    "$(kebab-horizontal)",
                                    "$(mail-reply)",
                                    "$(reply)",
                                    "$(organization)",
                                    "$(organization-filled)",
                                    "$(organization-outline)",
                                    "$(new-file)",
                                    "$(file-add)",
                                    "$(new-folder)",
                                    "$(file-directory-create)",
                                    "$(trash)",
                                    "$(trashcan)",
                                    "$(history)",
                                    "$(clock)",
                                    "$(folder)",
                                    "$(file-directory)",
                                    "$(symbol-folder)",
                                    "$(logo-github)",
                                    "$(mark-github)",
                                    "$(github)",
                                    "$(terminal)",
                                    "$(console)",
                                    "$(repl)",
                                    "$(zap)",
                                    "$(symbol-event)",
                                    "$(error)",
                                    "$(stop)",
                                    "$(variable)",
                                    "$(symbol-variable)",
                                    "$(array)",
                                    "$(symbol-array)",
                                    "$(symbol-module)",
                                    "$(symbol-package)",
                                    "$(symbol-namespace)",
                                    "$(symbol-object)",
                                    "$(symbol-method)",
                                    "$(symbol-function)",
                                    "$(symbol-constructor)",
                                    "$(symbol-boolean)",
                                    "$(symbol-null)",
                                    "$(symbol-numeric)",
                                    "$(symbol-number)",
                                    "$(symbol-structure)",
                                    "$(symbol-struct)",
                                    "$(symbol-parameter)",
                                    "$(symbol-type-parameter)",
                                    "$(symbol-key)",
                                    "$(symbol-text)",
                                    "$(symbol-reference)",
                                    "$(go-to-file)",
                                    "$(symbol-enum)",
                                    "$(symbol-value)",
                                    "$(symbol-ruler)",
                                    "$(symbol-unit)",
                                    "$(activate-breakpoints)",
                                    "$(archive)",
                                    "$(arrow-both)",
                                    "$(arrow-down)",
                                    "$(arrow-left)",
                                    "$(arrow-right)",
                                    "$(arrow-small-down)",
                                    "$(arrow-small-left)",
                                    "$(arrow-small-right)",
                                    "$(arrow-small-up)",
                                    "$(arrow-up)",
                                    "$(bell)",
                                    "$(bold)",
                                    "$(book)",
                                    "$(bookmark)",
                                    "$(debug-breakpoint-conditional-unverified)",
                                    "$(debug-breakpoint-conditional)",
                                    "$(debug-breakpoint-conditional-disabled)",
                                    "$(debug-breakpoint-data-unverified)",
                                    "$(debug-breakpoint-data)",
                                    "$(debug-breakpoint-data-disabled)",
                                    "$(debug-breakpoint-log-unverified)",
                                    "$(debug-breakpoint-log)",
                                    "$(debug-breakpoint-log-disabled)",
                                    "$(briefcase)",
                                    "$(broadcast)",
                                    "$(browser)",
                                    "$(bug)",
                                    "$(calendar)",
                                    "$(case-sensitive)",
                                    "$(check)",
                                    "$(checklist)",
                                    "$(chevron-down)",
                                    "$(drop-down-button)",
                                    "$(chevron-left)",
                                    "$(chevron-right)",
                                    "$(chevron-up)",
                                    "$(chrome-close)",
                                    "$(chrome-maximize)",
                                    "$(chrome-minimize)",
                                    "$(chrome-restore)",
                                    "$(circle)",
                                    "$(circle-outline)",
                                    "$(debug-breakpoint-unverified)",
                                    "$(circle-slash)",
                                    "$(circuit-board)",
                                    "$(clear-all)",
                                    "$(clippy)",
                                    "$(close-all)",
                                    "$(cloud-download)",
                                    "$(cloud-upload)",
                                    "$(code)",
                                    "$(collapse-all)",
                                    "$(color-mode)",
                                    "$(comment-discussion)",
                                    "$(compare-changes)",
                                    "$(credit-card)",
                                    "$(dash)",
                                    "$(dashboard)",
                                    "$(database)",
                                    "$(debug-continue)",
                                    "$(debug-disconnect)",
                                    "$(debug-pause)",
                                    "$(debug-restart)",
                                    "$(debug-start)",
                                    "$(debug-step-into)",
                                    "$(debug-step-out)",
                                    "$(debug-step-over)",
                                    "$(debug-stop)",
                                    "$(debug)",
                                    "$(device-camera-video)",
                                    "$(device-camera)",
                                    "$(device-mobile)",
                                    "$(diff-added)",
                                    "$(diff-ignored)",
                                    "$(diff-modified)",
                                    "$(diff-removed)",
                                    "$(diff-renamed)",
                                    "$(diff)",
                                    "$(discard)",
                                    "$(editor-layout)",
                                    "$(empty-window)",
                                    "$(exclude)",
                                    "$(extensions)",
                                    "$(eye-closed)",
                                    "$(file-binary)",
                                    "$(file-code)",
                                    "$(file-media)",
                                    "$(file-pdf)",
                                    "$(file-submodule)",
                                    "$(file-symlink-directory)",
                                    "$(file-symlink-file)",
                                    "$(file-zip)",
                                    "$(files)",
                                    "$(filter)",
                                    "$(flame)",
                                    "$(fold-down)",
                                    "$(fold-up)",
                                    "$(fold)",
                                    "$(folder-active)",
                                    "$(folder-opened)",
                                    "$(gear)",
                                    "$(gift)",
                                    "$(gist-secret)",
                                    "$(gist)",
                                    "$(git-commit)",
                                    "$(git-compare)",
                                    "$(git-merge)",
                                    "$(github-action)",
                                    "$(github-alt)",
                                    "$(globe)",
                                    "$(grabber)",
                                    "$(graph)",
                                    "$(gripper)",
                                    "$(heart)",
                                    "$(home)",
                                    "$(horizontal-rule)",
                                    "$(hubot)",
                                    "$(inbox)",
                                    "$(issue-closed)",
                                    "$(issue-reopened)",
                                    "$(issues)",
                                    "$(italic)",
                                    "$(jersey)",
                                    "$(json)",
                                    "$(bracket)",
                                    "$(kebab-vertical)",
                                    "$(key)",
                                    "$(law)",
                                    "$(lightbulb-autofix)",
                                    "$(link-external)",
                                    "$(link)",
                                    "$(list-ordered)",
                                    "$(list-unordered)",
                                    "$(live-share)",
                                    "$(loading)",
                                    "$(location)",
                                    "$(mail-read)",
                                    "$(mail)",
                                    "$(markdown)",
                                    "$(megaphone)",
                                    "$(mention)",
                                    "$(milestone)",
                                    "$(git-pull-request-milestone)",
                                    "$(mortar-board)",
                                    "$(move)",
                                    "$(multiple-windows)",
                                    "$(mute)",
                                    "$(no-newline)",
                                    "$(note)",
                                    "$(octoface)",
                                    "$(open-preview)",
                                    "$(package)",
                                    "$(paintcan)",
                                    "$(pin)",
                                    "$(play)",
                                    "$(run)",
                                    "$(plug)",
                                    "$(preserve-case)",
                                    "$(preview)",
                                    "$(project)",
                                    "$(pulse)",
                                    "$(question)",
                                    "$(quote)",
                                    "$(radio-tower)",
                                    "$(reactions)",
                                    "$(references)",
                                    "$(refresh)",
                                    "$(regex)",
                                    "$(remote-explorer)",
                                    "$(remote)",
                                    "$(remove)",
                                    "$(replace-all)",
                                    "$(replace)",
                                    "$(repo-clone)",
                                    "$(repo-force-push)",
                                    "$(repo-pull)",
                                    "$(repo-push)",
                                    "$(report)",
                                    "$(request-changes)",
                                    "$(rocket)",
                                    "$(root-folder-opened)",
                                    "$(root-folder)",
                                    "$(rss)",
                                    "$(ruby)",
                                    "$(save-all)",
                                    "$(save-as)",
                                    "$(save)",
                                    "$(screen-full)",
                                    "$(screen-normal)",
                                    "$(search-stop)",
                                    "$(server)",
                                    "$(settings-gear)",
                                    "$(settings)",
                                    "$(shield)",
                                    "$(smiley)",
                                    "$(sort-precedence)",
                                    "$(split-horizontal)",
                                    "$(split-vertical)",
                                    "$(squirrel)",
                                    "$(star-full)",
                                    "$(star-half)",
                                    "$(symbol-class)",
                                    "$(symbol-color)",
                                    "$(symbol-customcolor)",
                                    "$(symbol-constant)",
                                    "$(symbol-enum-member)",
                                    "$(symbol-field)",
                                    "$(symbol-file)",
                                    "$(symbol-interface)",
                                    "$(symbol-keyword)",
                                    "$(symbol-misc)",
                                    "$(symbol-operator)",
                                    "$(symbol-property)",
                                    "$(wrench)",
                                    "$(wrench-subaction)",
                                    "$(symbol-snippet)",
                                    "$(tasklist)",
                                    "$(telescope)",
                                    "$(text-size)",
                                    "$(three-bars)",
                                    "$(thumbsdown)",
                                    "$(thumbsup)",
                                    "$(tools)",
                                    "$(triangle-down)",
                                    "$(triangle-left)",
                                    "$(triangle-right)",
                                    "$(triangle-up)",
                                    "$(twitter)",
                                    "$(unfold)",
                                    "$(unlock)",
                                    "$(unmute)",
                                    "$(unverified)",
                                    "$(verified)",
                                    "$(versions)",
                                    "$(vm-active)",
                                    "$(vm-outline)",
                                    "$(vm-running)",
                                    "$(watch)",
                                    "$(whitespace)",
                                    "$(whole-word)",
                                    "$(window)",
                                    "$(word-wrap)",
                                    "$(zoom-in)",
                                    "$(zoom-out)",
                                    "$(list-filter)",
                                    "$(list-flat)",
                                    "$(list-selection)",
                                    "$(selection)",
                                    "$(list-tree)",
                                    "$(debug-breakpoint-function-unverified)",
                                    "$(debug-breakpoint-function)",
                                    "$(debug-breakpoint-function-disabled)",
                                    "$(debug-stackframe-active)",
                                    "$(circle-small-filled)",
                                    "$(debug-stackframe-dot)",
                                    "$(debug-stackframe)",
                                    "$(debug-stackframe-focused)",
                                    "$(debug-breakpoint-unsupported)",
                                    "$(symbol-string)",
                                    "$(debug-reverse-continue)",
                                    "$(debug-step-back)",
                                    "$(debug-restart-frame)",
                                    "$(call-incoming)",
                                    "$(call-outgoing)",
                                    "$(menu)",
                                    "$(expand-all)",
                                    "$(feedback)",
                                    "$(git-pull-request-reviewer)",
                                    "$(group-by-ref-type)",
                                    "$(ungroup-by-ref-type)",
                                    "$(account)",
                                    "$(git-pull-request-assignee)",
                                    "$(bell-dot)",
                                    "$(debug-console)",
                                    "$(library)",
                                    "$(output)",
                                    "$(run-all)",
                                    "$(sync-ignored)",
                                    "$(pinned)",
                                    "$(github-inverted)",
                                    "$(debug-alt)",
                                    "$(server-process)",
                                    "$(server-environment)",
                                    "$(pass)",
                                    "$(stop-circle)",
                                    "$(play-circle)",
                                    "$(record)",
                                    "$(debug-alt-small)",
                                    "$(vm-connect)",
                                    "$(cloud)",
                                    "$(merge)",
                                    "$(export)",
                                    "$(graph-left)",
                                    "$(magnet)",
                                    "$(notebook)",
                                    "$(redo)",
                                    "$(check-all)",
                                    "$(pinned-dirty)",
                                    "$(pass-filled)",
                                    "$(circle-large-filled)",
                                    "$(circle-large)",
                                    "$(circle-large-outline)",
                                    "$(combine)",
                                    "$(gather)",
                                    "$(table)",
                                    "$(variable-group)",
                                    "$(type-hierarchy)",
                                    "$(type-hierarchy-sub)",
                                    "$(type-hierarchy-super)",
                                    "$(git-pull-request-create)",
                                    "$(run-above)",
                                    "$(run-below)",
                                    "$(notebook-template)",
                                    "$(debug-rerun)",
                                    "$(workspace-trusted)",
                                    "$(workspace-untrusted)",
                                    "$(workspace-unspecified)",
                                    "$(terminal-cmd)",
                                    "$(terminal-debian)",
                                    "$(terminal-linux)",
                                    "$(terminal-powershell)",
                                    "$(terminal-tmux)",
                                    "$(terminal-ubuntu)",
                                    "$(terminal-bash)",
                                    "$(arrow-swap)",
                                    "$(copy)",
                                    "$(person-add)",
                                    "$(filter-filled)",
                                    "$(wand)",
                                    "$(debug-line-by-line)",
                                    "$(inspect)",
                                    "$(layers)",
                                    "$(layers-dot)",
                                    "$(layers-active)",
                                    "$(compass)",
                                    "$(compass-dot)",
                                    "$(compass-active)",
                                    "$(azure)",
                                    "$(issue-draft)",
                                    "$(git-pull-request-closed)",
                                    "$(git-pull-request-draft)",
                                    "$(debug-all)",
                                    "$(debug-coverage)",
                                    "$(run-errors)",
                                    "$(folder-library)",
                                    "$(debug-continue-small)",
                                    "$(beaker-stop)",
                                    "$(graph-line)",
                                    "$(graph-scatter)",
                                    "$(pie-chart)",
                                    "$(bracket-dot)",
                                    "$(bracket-error)",
                                    "$(lock-small)",
                                    "$(azure-devops)",
                                    "$(verified-filled)",
                                    "$(newline)",
                                    "$(layout)",
                                    "$(layout-activitybar-left)",
                                    "$(layout-activitybar-right)",
                                    "$(layout-panel-left)",
                                    "$(layout-panel-center)",
                                    "$(layout-panel-justify)",
                                    "$(layout-panel-right)",
                                    "$(layout-panel)",
                                    "$(layout-sidebar-left)",
                                    "$(layout-sidebar-right)",
                                    "$(layout-statusbar)",
                                    "$(layout-menubar)",
                                    "$(layout-centered)",
                                    "$(layout-sidebar-right-off)",
                                    "$(layout-panel-off)",
                                    "$(layout-sidebar-left-off)",
                                    "$(target)",
                                    "$(indent)",
                                    "$(record-small)",
                                    "$(error-small)",
                                    "$(arrow-circle-down)",
                                    "$(arrow-circle-left)",
                                    "$(arrow-circle-right)",
                                    "$(arrow-circle-up)",
                                    "$(heart-filled)",
                                    "$(map)",
                                    "$(map-filled)",
                                    "$(circle-small)",
                                    "$(bell-slash)",
                                    "$(bell-slash-dot)",
                                    "$(comment-unresolved)",
                                    "$(git-pull-request-go-to-changes)",
                                    "$(git-pull-request-new-changes)",
                                    "$(search-fuzzy)",
                                    "$(comment-draft)",
                                    "$(send)",
                                    "$(sparkle)",
                                    "$(insert)",
                                    "$(mic)",
                                    "$(dialog-error)",
                                    "$(dialog-warning)",
                                    "$(dialog-info)",
                                    "$(dialog-close)",
                                    "$(tree-item-expanded)",
                                    "$(tree-filter-on-type-on)",
                                    "$(tree-filter-on-type-off)",
                                    "$(tree-filter-clear)",
                                    "$(tree-item-loading)",
                                    "$(menu-selection)",
                                    "$(menu-submenu)",
                                    "$(menubar-more)",
                                    "$(scrollbar-button-left)",
                                    "$(scrollbar-button-right)",
                                    "$(scrollbar-button-up)",
                                    "$(scrollbar-button-down)",
                                    "$(toolbar-more)",
                                    "$(quick-input-back)"
                                ]
                            },
                            "color": {
                                "description": "A theme color ID to associate with the terminal icon.",
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "enum": [
                                    "terminal.ansiBlack",
                                    "terminal.ansiRed",
                                    "terminal.ansiGreen",
                                    "terminal.ansiYellow",
                                    "terminal.ansiBlue",
                                    "terminal.ansiMagenta",
                                    "terminal.ansiCyan",
                                    "terminal.ansiWhite"
                                ],
                                "default": null
                            },
                            "env": {
                                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "default": {}
                            }
                        }
                    }
                ]
            },
            "defaultDefaultValue": {
                "bash": {
                    "path": "bash",
                    "icon": "terminal-bash"
                },
                "zsh": {
                    "path": "zsh"
                },
                "fish": {
                    "path": "fish"
                },
                "tmux": {
                    "path": "tmux",
                    "icon": "terminal-tmux"
                },
                "pwsh": {
                    "path": "pwsh",
                    "icon": "terminal-powershell"
                }
            },
            "scope": 3
        },
        "terminal.integrated.useWslProfiles": {
            "description": "Controls whether or not WSL distros are shown in the terminal dropdown",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.ignoreProcessNames": {
            "markdownDescription": "A set of process names to ignore when using the `#terminal.integrated.confirmOnKill#` setting.",
            "type": "array",
            "items": {
                "type": "string",
                "uniqueItems": true
            },
            "default": [
                "starship",
                "oh-my-posh",
                "bash",
                "zsh"
            ],
            "defaultDefaultValue": [
                "starship",
                "oh-my-posh",
                "bash",
                "zsh"
            ],
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.sendKeybindingsToShell": {
            "markdownDescription": "Dispatches most keybindings to the terminal instead of the workbench, overriding `#terminal.integrated.commandsToSkipShell#`, which can be used alternatively for fine tuning.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.enabled": {
            "description": "Controls whether terminal tabs display as a list to the side of the terminal. When this is disabled a dropdown will display instead.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.enableAnimation": {
            "description": "Controls whether terminal tab statuses support animation (eg. in progress tasks).",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.hideCondition": {
            "description": "Controls whether the terminal tabs view will hide under certain conditions.",
            "type": "string",
            "enum": [
                "never",
                "singleTerminal",
                "singleGroup"
            ],
            "enumDescriptions": [
                "Never hide the terminal tabs view",
                "Hide the terminal tabs view when there is only a single terminal opened",
                "Hide the terminal tabs view when there is only a single terminal group opened"
            ],
            "default": "singleTerminal",
            "defaultDefaultValue": "singleTerminal",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.showActiveTerminal": {
            "description": "Shows the active terminal information in the view. This is particularly useful when the title within the tabs aren't visible.",
            "type": "string",
            "enum": [
                "always",
                "singleTerminal",
                "singleTerminalOrNarrow",
                "never"
            ],
            "enumDescriptions": [
                "Always show the active terminal",
                "Show the active terminal when it is the only terminal opened",
                "Show the active terminal when it is the only terminal opened or when the tabs view is in its narrow textless state",
                "Never show the active terminal"
            ],
            "default": "singleTerminalOrNarrow",
            "defaultDefaultValue": "singleTerminalOrNarrow",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.showActions": {
            "description": "Controls whether terminal split and kill buttons are displays next to the new terminal button.",
            "type": "string",
            "enum": [
                "always",
                "singleTerminal",
                "singleTerminalOrNarrow",
                "never"
            ],
            "enumDescriptions": [
                "Always show the actions",
                "Show the actions when it is the only terminal opened",
                "Show the actions when it is the only terminal opened or when the tabs view is in its narrow textless state",
                "Never show the actions"
            ],
            "default": "singleTerminalOrNarrow",
            "defaultDefaultValue": "singleTerminalOrNarrow",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.location": {
            "type": "string",
            "enum": [
                "left",
                "right"
            ],
            "enumDescriptions": [
                "Show the terminal tabs view to the left of the terminal",
                "Show the terminal tabs view to the right of the terminal"
            ],
            "default": "right",
            "description": "Controls the location of the terminal tabs, either to the left or right of the actual terminal(s).",
            "defaultDefaultValue": "right",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.defaultLocation": {
            "type": "string",
            "enum": [
                "editor",
                "view"
            ],
            "enumDescriptions": [
                "Create terminals in the editor",
                "Create terminals in the terminal view"
            ],
            "default": "view",
            "description": "Controls where newly created terminals will appear.",
            "defaultDefaultValue": "view",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.focusMode": {
            "type": "string",
            "enum": [
                "singleClick",
                "doubleClick"
            ],
            "enumDescriptions": [
                "Focus the terminal when clicking a terminal tab",
                "Focus the terminal when double-clicking a terminal tab"
            ],
            "default": "doubleClick",
            "description": "Controls whether focusing the terminal of a tab happens on double or single click.",
            "defaultDefaultValue": "doubleClick",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.macOptionIsMeta": {
            "description": "Controls whether to treat the option key as the meta key in the terminal on macOS.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.macOptionClickForcesSelection": {
            "description": "Controls whether to force selection when using Option+click on macOS. This will force a regular (line) selection and disallow the use of column selection mode. This enables copying and pasting using the regular terminal selection, for example, when mouse mode is enabled in tmux.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.altClickMovesCursor": {
            "markdownDescription": "If enabled, alt/option + click will reposition the prompt cursor to underneath the mouse when `#editor.multiCursorModifier#` is set to `'alt'` (the default value). This may not work reliably depending on your shell.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.copyOnSelection": {
            "description": "Controls whether text selected in the terminal will be copied to the clipboard.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.enableMultiLinePasteWarning": {
            "markdownDescription": "Show a warning dialog when pasting multiple lines into the terminal. The dialog does not show when:\n\n- Bracketed paste mode is enabled (the shell supports multi-line paste natively)\n- The paste is handled by the shell's readline (in the case of pwsh)",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.drawBoldTextInBrightColors": {
            "description": "Controls whether bold text in the terminal will always use the \"bright\" ANSI color variant.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.fontFamily": {
            "markdownDescription": "Controls the font family of the terminal. Defaults to `#editor.fontFamily#`'s value.",
            "type": "string",
            "default": "",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.fontSize": {
            "description": "Controls the font size in pixels of the terminal.",
            "type": "number",
            "default": 12,
            "minimum": 6,
            "maximum": 100,
            "defaultDefaultValue": 12,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.letterSpacing": {
            "description": "Controls the letter spacing of the terminal. This is an integer value which represents the number of additional pixels to add between characters.",
            "type": "number",
            "default": 0,
            "defaultDefaultValue": 0,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.lineHeight": {
            "description": "Controls the line height of the terminal. This number is multiplied by the terminal font size to get the actual line-height in pixels.",
            "type": "number",
            "default": 1,
            "defaultDefaultValue": 1,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.minimumContrastRatio": {
            "markdownDescription": "When set, the foreground color of each cell will change to try meet the contrast ratio specified. Note that this will not apply to `powerline` characters per #146406. Example values:\n\n- 1: Do nothing and use the standard theme colors.\n- 4.5: [WCAG AA compliance (minimum)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).\n- 7: [WCAG AAA compliance (enhanced)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).\n- 21: White on black or black on white.",
            "type": "number",
            "default": 4.5,
            "tags": [
                "accessibility"
            ],
            "defaultDefaultValue": 4.5,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabStopWidth": {
            "markdownDescription": "The number of cells in a tab stop.",
            "type": "number",
            "minimum": 1,
            "default": 8,
            "defaultDefaultValue": 8,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.fastScrollSensitivity": {
            "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
            "type": "number",
            "default": 5,
            "defaultDefaultValue": 5,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.mouseWheelScrollSensitivity": {
            "markdownDescription": "A multiplier to be used on the `deltaY` of mouse wheel scroll events.",
            "type": "number",
            "default": 1,
            "defaultDefaultValue": 1,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.bellDuration": {
            "markdownDescription": "The number of milliseconds to show the bell within a terminal tab when triggered.",
            "type": "number",
            "default": 1000,
            "defaultDefaultValue": 1000,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.fontWeight": {
            "anyOf": [
                {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 1000,
                    "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                },
                {
                    "type": "string",
                    "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                },
                {
                    "enum": [
                        "normal",
                        "bold",
                        "100",
                        "200",
                        "300",
                        "400",
                        "500",
                        "600",
                        "700",
                        "800",
                        "900"
                    ]
                }
            ],
            "description": "The font weight to use within the terminal for non-bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
            "default": "normal",
            "defaultDefaultValue": "normal",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.fontWeightBold": {
            "anyOf": [
                {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 1000,
                    "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                },
                {
                    "type": "string",
                    "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                },
                {
                    "enum": [
                        "normal",
                        "bold",
                        "100",
                        "200",
                        "300",
                        "400",
                        "500",
                        "600",
                        "700",
                        "800",
                        "900"
                    ]
                }
            ],
            "description": "The font weight to use within the terminal for bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
            "default": "bold",
            "defaultDefaultValue": "bold",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.cursorBlinking": {
            "description": "Controls whether the terminal cursor blinks.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.cursorStyle": {
            "description": "Controls the style of terminal cursor when the terminal is focused.",
            "enum": [
                "block",
                "line",
                "underline"
            ],
            "default": "block",
            "defaultDefaultValue": "block",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.cursorStyleInactive": {
            "description": "Controls the style of terminal cursor when the terminal is not focused.",
            "enum": [
                "outline",
                "block",
                "line",
                "underline",
                "none"
            ],
            "default": "outline",
            "defaultDefaultValue": "outline",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.cursorWidth": {
            "markdownDescription": "Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.",
            "type": "number",
            "default": 1,
            "defaultDefaultValue": 1,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.scrollback": {
            "description": "Controls the maximum number of lines the terminal keeps in its buffer. We pre-allocate memory based on this value in order to ensure a smooth experience. As such, as the value increases, so will the amount of memory.",
            "type": "number",
            "default": 1000,
            "defaultDefaultValue": 1000,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.detectLocale": {
            "markdownDescription": "Controls whether to detect and set the `$LANG` environment variable to a UTF-8 compliant option since VS Code's terminal only supports UTF-8 encoded data coming from the shell.",
            "type": "string",
            "enum": [
                "auto",
                "off",
                "on"
            ],
            "markdownEnumDescriptions": [
                "Set the `$LANG` environment variable if the existing variable does not exist or it does not end in `'.UTF-8'`.",
                "Do not set the `$LANG` environment variable.",
                "Always set the `$LANG` environment variable."
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.gpuAcceleration": {
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off",
                "canvas"
            ],
            "markdownEnumDescriptions": [
                "Let VS Code detect which renderer will give the best experience.",
                "Enable GPU acceleration within the terminal.",
                "Disable GPU acceleration within the terminal. The terminal will render much slower when GPU acceleration is off but it should reliably work on all systems.",
                "Use the terminal's fallback canvas renderer which uses a 2d context instead of webgl which may perform better on some systems. Note that some features are limited in the canvas renderer like opaque selection."
            ],
            "default": "auto",
            "description": "Controls whether the terminal will leverage the GPU to do its rendering.",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.separator": {
            "type": "string",
            "default": " - ",
            "markdownDescription": "Separator used by `#terminal.integrated.tabs.title#` and `#terminal.integrated.tabs.description#`.",
            "defaultDefaultValue": " - ",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.title": {
            "type": "string",
            "default": "${process}",
            "markdownDescription": "Controls the terminal title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (` - `) that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to the terminal by the process\n- `${task}`: indicates this terminal is associated with a task",
            "defaultDefaultValue": "${process}",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.tabs.description": {
            "type": "string",
            "default": "${task}${separator}${local}${separator}${cwdFolder}",
            "markdownDescription": "Controls the terminal description, which appears to the right of the title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (` - `) that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to the terminal by the process\n- `${task}`: indicates this terminal is associated with a task",
            "defaultDefaultValue": "${task}${separator}${local}${separator}${cwdFolder}",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.rightClickBehavior": {
            "type": "string",
            "enum": [
                "default",
                "copyPaste",
                "paste",
                "selectWord",
                "nothing"
            ],
            "enumDescriptions": [
                "Show the context menu.",
                "Copy when there is a selection, otherwise paste.",
                "Paste on right click.",
                "Select the word under the cursor and show the context menu.",
                "Do nothing and pass event to terminal."
            ],
            "default": "selectWord",
            "description": "Controls how terminal reacts to right click.",
            "defaultDefaultValue": "selectWord",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.confirmOnExit": {
            "description": "Controls whether to confirm when the window closes if there are active terminal sessions.",
            "type": "string",
            "enum": [
                "never",
                "always",
                "hasChildProcesses"
            ],
            "enumDescriptions": [
                "Never confirm.",
                "Always confirm if there are terminals.",
                "Confirm if there are any terminals that have child processes."
            ],
            "default": "never",
            "defaultDefaultValue": "never",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.confirmOnKill": {
            "description": "Controls whether to confirm killing terminals when they have child processes. When set to editor, terminals in the editor area will be marked as changed when they have child processes. Note that child process detection may not work well for shells like Git Bash which don't run their processes as child processes of the shell.",
            "type": "string",
            "enum": [
                "never",
                "editor",
                "panel",
                "always"
            ],
            "enumDescriptions": [
                "Never confirm.",
                "Confirm if the terminal is in the editor.",
                "Confirm if the terminal is in the panel.",
                "Confirm if the terminal is either in the editor or panel."
            ],
            "default": "editor",
            "defaultDefaultValue": "editor",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.enableBell": {
            "description": "Controls whether the terminal bell is enabled. This shows up as a visual bell next to the terminal's name.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.commandsToSkipShell": {
            "markdownDescription": "A set of command IDs whose keybindings will not be sent to the shell but instead always be handled by VS Code. This allows keybindings that would normally be consumed by the shell to act instead the same as when the terminal is not focused, for example `Ctrl+P` to launch Quick Open.\n\n&nbsp;\n\nMany commands are skipped by default. To override a default and pass that command's keybinding to the shell instead, add the command prefixed with the `-` character. For example add `-workbench.action.quickOpen` to allow `Ctrl+P` to reach the shell.\n\n&nbsp;\n\nThe following list of default skipped commands is truncated when viewed in Settings Editor. To see the full list, [open the default settings JSON](command:workbench.action.openRawDefaultSettings 'Open Default Settings (JSON)') and search for the first command from the list below.\n\n&nbsp;\n\nDefault Skipped Commands:\n\n- editor.action.accessibilityHelp\n- editor.action.toggleTabFocusMode\n- notification.acceptPrimaryAction\n- notifications.hideList\n- notifications.hideToasts\n- runCommands\n- workbench.action.closeQuickOpen\n- workbench.action.debug.continue\n- workbench.action.debug.pause\n- workbench.action.debug.restart\n- workbench.action.debug.run\n- workbench.action.debug.start\n- workbench.action.debug.stepInto\n- workbench.action.debug.stepOut\n- workbench.action.debug.stepOver\n- workbench.action.debug.stop\n- workbench.action.firstEditorInGroup\n- workbench.action.focusActiveEditorGroup\n- workbench.action.focusEighthEditorGroup\n- workbench.action.focusFifthEditorGroup\n- workbench.action.focusFirstEditorGroup\n- workbench.action.focusFourthEditorGroup\n- workbench.action.focusLastEditorGroup\n- workbench.action.focusNextPart\n- workbench.action.focusPreviousPart\n- workbench.action.focusSecondEditorGroup\n- workbench.action.focusSeventhEditorGroup\n- workbench.action.focusSixthEditorGroup\n- workbench.action.focusThirdEditorGroup\n- workbench.action.lastEditorInGroup\n- workbench.action.navigateDown\n- workbench.action.navigateLeft\n- workbench.action.navigateRight\n- workbench.action.navigateUp\n- workbench.action.nextEditor\n- workbench.action.nextEditorInGroup\n- workbench.action.nextPanelView\n- workbench.action.nextSideBarView\n- workbench.action.openNextRecentlyUsedEditor\n- workbench.action.openNextRecentlyUsedEditorInGroup\n- workbench.action.openPreviousRecentlyUsedEditor\n- workbench.action.openPreviousRecentlyUsedEditorInGroup\n- workbench.action.previousEditor\n- workbench.action.previousEditorInGroup\n- workbench.action.previousPanelView\n- workbench.action.previousSideBarView\n- workbench.action.quickOpen\n- workbench.action.quickOpenLeastRecentlyUsedEditor\n- workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\n- workbench.action.quickOpenPreviousEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\n- workbench.action.quickOpenView\n- workbench.action.showCommands\n- workbench.action.tasks.build\n- workbench.action.tasks.reRunTask\n- workbench.action.tasks.restartTask\n- workbench.action.tasks.runTask\n- workbench.action.tasks.showLog\n- workbench.action.tasks.showTasks\n- workbench.action.tasks.terminate\n- workbench.action.tasks.test\n- workbench.action.terminal.acceptSelectedSuggestion\n- workbench.action.terminal.clear\n- workbench.action.terminal.clearSelection\n- workbench.action.terminal.copyAndClearSelection\n- workbench.action.terminal.copyLastCommandOutput\n- workbench.action.terminal.copySelection\n- workbench.action.terminal.copySelectionAsHtml\n- workbench.action.terminal.deleteToLineStart\n- workbench.action.terminal.deleteWordLeft\n- workbench.action.terminal.deleteWordRight\n- workbench.action.terminal.findNext\n- workbench.action.terminal.findPrevious\n- workbench.action.terminal.focus\n- workbench.action.terminal.focusAccessibleBuffer\n- workbench.action.terminal.focusAtIndex1\n- workbench.action.terminal.focusAtIndex2\n- workbench.action.terminal.focusAtIndex3\n- workbench.action.terminal.focusAtIndex4\n- workbench.action.terminal.focusAtIndex5\n- workbench.action.terminal.focusAtIndex6\n- workbench.action.terminal.focusAtIndex7\n- workbench.action.terminal.focusAtIndex8\n- workbench.action.terminal.focusAtIndex9\n- workbench.action.terminal.focusFind\n- workbench.action.terminal.focusHover\n- workbench.action.terminal.focusNext\n- workbench.action.terminal.focusNextPane\n- workbench.action.terminal.focusPrevious\n- workbench.action.terminal.focusPreviousPane\n- workbench.action.terminal.goToRecentDirectory\n- workbench.action.terminal.hideFind\n- workbench.action.terminal.hideSuggestWidget\n- workbench.action.terminal.kill\n- workbench.action.terminal.killEditor\n- workbench.action.terminal.moveToEditor\n- workbench.action.terminal.moveToLineEnd\n- workbench.action.terminal.moveToLineStart\n- workbench.action.terminal.moveToTerminalPanel\n- workbench.action.terminal.new\n- workbench.action.terminal.newInActiveWorkspace\n- workbench.action.terminal.paste\n- workbench.action.terminal.pasteSelection\n- workbench.action.terminal.resizePaneDown\n- workbench.action.terminal.resizePaneLeft\n- workbench.action.terminal.resizePaneRight\n- workbench.action.terminal.resizePaneUp\n- workbench.action.terminal.runActiveFile\n- workbench.action.terminal.runRecentCommand\n- workbench.action.terminal.runSelectedText\n- workbench.action.terminal.scrollDown\n- workbench.action.terminal.scrollDownPage\n- workbench.action.terminal.scrollToBottom\n- workbench.action.terminal.scrollToNextCommand\n- workbench.action.terminal.scrollToPreviousCommand\n- workbench.action.terminal.scrollToTop\n- workbench.action.terminal.scrollUp\n- workbench.action.terminal.scrollUpPage\n- workbench.action.terminal.selectAll\n- workbench.action.terminal.selectNextPageSuggestion\n- workbench.action.terminal.selectNextSuggestion\n- workbench.action.terminal.selectPrevPageSuggestion\n- workbench.action.terminal.selectPrevSuggestion\n- workbench.action.terminal.selectToNextCommand\n- workbench.action.terminal.selectToNextLine\n- workbench.action.terminal.selectToPreviousCommand\n- workbench.action.terminal.selectToPreviousLine\n- workbench.action.terminal.sendSequence\n- workbench.action.terminal.sizeToContentWidth\n- workbench.action.terminal.split\n- workbench.action.terminal.splitInActiveWorkspace\n- workbench.action.terminal.toggleFindCaseSensitive\n- workbench.action.terminal.toggleFindRegex\n- workbench.action.terminal.toggleFindWholeWord\n- workbench.action.terminal.toggleTerminal\n- workbench.action.toggleFullScreen\n- workbench.action.toggleMaximizedPanel\n- workbench.action.togglePanel",
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "defaultDefaultValue": [],
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.allowChords": {
            "markdownDescription": "Whether or not to allow chord keybindings in the terminal. Note that when this is true and the keystroke results in a chord it will bypass `#terminal.integrated.commandsToSkipShell#`, setting this to false is particularly useful when you want ctrl+k to go to your shell (not VS Code).",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.allowMnemonics": {
            "markdownDescription": "Whether to allow menubar mnemonics (for example Alt+F) to trigger the open of the menubar. Note that this will cause all alt keystrokes to skip the shell when true. This does nothing on macOS.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.env.osx": {
            "restricted": true,
            "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.",
            "type": "object",
            "additionalProperties": {
                "type": [
                    "string",
                    "null"
                ]
            },
            "default": {},
            "defaultDefaultValue": {},
            "scope": 3
        },
        "terminal.integrated.env.linux": {
            "restricted": true,
            "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.",
            "type": "object",
            "additionalProperties": {
                "type": [
                    "string",
                    "null"
                ]
            },
            "default": {},
            "defaultDefaultValue": {},
            "scope": 3
        },
        "terminal.integrated.env.windows": {
            "restricted": true,
            "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.",
            "type": "object",
            "additionalProperties": {
                "type": [
                    "string",
                    "null"
                ]
            },
            "default": {},
            "defaultDefaultValue": {},
            "scope": 3
        },
        "terminal.integrated.environmentChangesIndicator": {
            "markdownDescription": "Whether to display the environment changes indicator on each terminal which explains whether extensions have made, or want to make changes to the terminal's environment.",
            "type": "string",
            "enum": [
                "off",
                "on",
                "warnonly"
            ],
            "enumDescriptions": [
                "Disable the indicator.",
                "Enable the indicator.",
                "Only show the warning indicator when a terminal's environment is 'stale', not the information indicator that shows a terminal has had its environment modified by an extension."
            ],
            "default": "warnonly",
            "defaultDefaultValue": "warnonly",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.environmentChangesRelaunch": {
            "markdownDescription": "Whether to relaunch terminals automatically if extensions want to contribute to their environment and have not been interacted with yet.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.showExitAlert": {
            "description": "Controls whether to show the alert \"The terminal process terminated with exit code\" when exit code is non-zero.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.splitCwd": {
            "description": "Controls the working directory a split terminal starts with.",
            "type": "string",
            "enum": [
                "workspaceRoot",
                "initial",
                "inherited"
            ],
            "enumDescriptions": [
                "A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.",
                "A new split terminal will use the working directory that the parent terminal started with.",
                "On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial."
            ],
            "default": "inherited",
            "defaultDefaultValue": "inherited",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.windowsEnableConpty": {
            "description": "Whether to use ConPTY for Windows terminal process communication (requires Windows 10 build number 18309+). Winpty will be used if this is false.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.wordSeparators": {
            "markdownDescription": "A string containing all characters to be considered word separators when double-clicking to select word and in the fallback 'word' link detection. Since this is used for link detection, including characters such as `:` that are used when detecting links will cause the line and column part of links like `file:10:5` to be ignored.",
            "type": "string",
            "default": " ()[]{}',\"`─‘’|",
            "defaultDefaultValue": " ()[]{}',\"`─‘’|",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.enableFileLinks": {
            "description": "Whether to enable file links in terminals. Links can be slow when working on a network drive in particular because each file link is verified against the file system. Changing this will take effect only in new terminals.",
            "type": "string",
            "enum": [
                "off",
                "on",
                "notRemote"
            ],
            "enumDescriptions": [
                "Always off.",
                "Always on.",
                "Enable only when not in a remote workspace."
            ],
            "default": "on",
            "defaultDefaultValue": "on",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.unicodeVersion": {
            "type": "string",
            "enum": [
                "6",
                "11"
            ],
            "enumDescriptions": [
                "Version 6 of Unicode. This is an older version which should work better on older systems.",
                "Version 11 of Unicode. This version provides better support on modern systems that use modern versions of Unicode."
            ],
            "default": "11",
            "description": "Controls what version of Unicode to use when evaluating the width of characters in the terminal. If you experience emoji or other wide characters not taking up the right amount of space or backspace either deleting too much or too little then you may want to try tweaking this setting.",
            "defaultDefaultValue": "11",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.localEchoLatencyThreshold": {
            "description": "Length of network delay, in milliseconds, where local edits will be echoed on the terminal without waiting for server acknowledgement. If '0', local echo will always be on, and if '-1' it will be disabled.",
            "type": "integer",
            "minimum": -1,
            "default": 30,
            "defaultDefaultValue": 30,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.localEchoEnabled": {
            "markdownDescription": "When local echo should be enabled. This will override `#terminal.integrated.localEchoLatencyThreshold#`",
            "type": "string",
            "enum": [
                "on",
                "off",
                "auto"
            ],
            "enumDescriptions": [
                "Always enabled",
                "Always disabled",
                "Enabled only for remote workspaces"
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.localEchoExcludePrograms": {
            "description": "Local echo will be disabled when any of these program names are found in the terminal title.",
            "type": "array",
            "items": {
                "type": "string",
                "uniqueItems": true
            },
            "default": [
                "vim",
                "vi",
                "nano",
                "tmux"
            ],
            "defaultDefaultValue": [
                "vim",
                "vi",
                "nano",
                "tmux"
            ],
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.localEchoStyle": {
            "description": "Terminal style of locally echoed text; either a font style or an RGB color.",
            "default": "dim",
            "anyOf": [
                {
                    "enum": [
                        "bold",
                        "dim",
                        "italic",
                        "underlined",
                        "inverted",
                        "#ff0000"
                    ]
                },
                {
                    "type": "string",
                    "format": "color-hex"
                }
            ],
            "defaultDefaultValue": "dim",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.enablePersistentSessions": {
            "description": "Persist terminal sessions/history for the workspace across window reloads.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.persistentSessionReviveProcess": {
            "markdownDescription": "When the terminal process must be shut down (for example on window or application close), this determines when the previous terminal session contents/history should be restored and processes be recreated when the workspace is next opened.\n\nCaveats:\n\n- Restoring of the process current working directory depends on whether it is supported by the shell.\n- Time to persist the session during shutdown is limited, so it may be aborted when using high-latency remote connections.",
            "type": "string",
            "enum": [
                "onExit",
                "onExitAndWindowClose",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu).",
                "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), or when the window is closed.",
                "Never restore the terminal buffers or recreate the process."
            ],
            "default": "onExit",
            "defaultDefaultValue": "onExit",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.hideOnStartup": {
            "description": "Whether to hide the terminal view on startup, avoiding creating a terminal when there are no persistent sessions.",
            "type": "string",
            "enum": [
                "never",
                "whenEmpty",
                "always"
            ],
            "markdownEnumDescriptions": [
                "Never hide the terminal view on startup.",
                "Only hide the terminal when there are no persistent sessions restored.",
                "Always hide the terminal, even when there are persistent sessions restored."
            ],
            "default": "never",
            "defaultDefaultValue": "never",
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.customGlyphs": {
            "markdownDescription": "Whether to draw custom glyphs for block element and box drawing characters instead of using the font, which typically yields better rendering with continuous lines. Note that this doesn't work when `#terminal.integrated.gpuAcceleration#` is disabled.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.autoReplies": {
            "markdownDescription": "A set of messages that, when encountered in the terminal, will be automatically responded to. Provided the message is specific enough, this can help automate away common responses.\n\nRemarks:\n\n- Use `\"Terminate batch job (Y/N)\": \"Y\\r\"` to automatically respond to the terminate batch job prompt on Windows.\n- The message includes escape sequences so the reply might not happen with styled text.\n- Each reply can only happen once every second.\n- Use `\"\\r\"` in the reply to mean the enter key.\n- To unset a default key, set the value to null.\n- Restart VS Code if new don't apply.",
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "type": "string",
                        "description": "The reply to send to the process."
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "default": {},
            "defaultDefaultValue": {},
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.shellIntegration.enabled": {
            "restricted": true,
            "markdownDescription": "Determines whether or not shell integration is auto-injected to support features like enhanced command tracking and current working directory detection. \n\nShell integration works by injecting the shell with a startup script. The script gives VS Code insight into what is happening within the terminal.\n\nSupported shells:\n\n- Linux/macOS: bash, fish, pwsh, zsh\n - Windows: pwsh\n\nThis setting applies only when terminals are created, so you will need to restart your terminals for it to take effect.\n\n Note that the script injection may not work if you have custom arguments defined in the terminal profile, have enabled `#editor.accessibilitySupport#`, have a [complex bash `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex-bash-promptcommand), or other unsupported setup. To disable decorations, see `#terminal.integrated.shellIntegrations.decorationsEnabled#`",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 3
        },
        "terminal.integrated.shellIntegration.decorationsEnabled": {
            "restricted": true,
            "markdownDescription": "When shell integration is enabled, adds a decoration for each command.",
            "type": "string",
            "enum": [
                "both",
                "gutter",
                "overviewRuler",
                "never"
            ],
            "enumDescriptions": [
                "Show decorations in the gutter (left) and overview ruler (right)",
                "Show gutter decorations to the left of the terminal",
                "Show overview ruler decorations to the right of the terminal",
                "Do not show decorations"
            ],
            "default": "both",
            "defaultDefaultValue": "both",
            "scope": 3
        },
        "terminal.integrated.shellIntegration.history": {
            "restricted": true,
            "markdownDescription": "Controls the number of recently used commands to keep in the terminal command history. Set to 0 to disable terminal command history.",
            "type": "number",
            "default": 100,
            "defaultDefaultValue": 100,
            "scope": 3
        },
        "terminal.integrated.shellIntegration.suggestEnabled": {
            "restricted": true,
            "markdownDescription": "Enables experimental terminal Intellisense suggestions for supported shells when `#terminal.integrated.shellIntegration.enabled#` is set to `true`. If shell integration is installed manually, `VSCODE_SUGGEST` needs to be set to `1` before calling the script.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3
        },
        "terminal.integrated.smoothScrolling": {
            "markdownDescription": "Controls whether the terminal will scroll using an animation.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.ignoreBracketedPasteMode": {
            "markdownDescription": "Controls whether the terminal will ignore bracketed paste mode even if the terminal was put into the mode, omitting the `\\x1b[200~` and `\\x1b[201~` sequences when pasting. This is useful when the shell is not respecting the mode which can happen in sub-shells for example.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3,
            "restricted": false
        },
        "terminal.integrated.enableImages": {
            "restricted": true,
            "markdownDescription": "Enables image support in the terminal, this will only work when `#terminal.integrated.gpuAcceleration#` is enabled. Both sixel and iTerm's inline image protocol are supported on Linux and macOS, Windows support will light up automatically when ConPTY passes through the sequences. Images will currently not be restored between window reloads/reconnects.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 3
        },
        "terminal.integrated.focusAfterRun": {
            "markdownDescription": "Controls whether the terminal, accessible buffer, or neither will be focused after `Terminal: Run Selected Text In Active Terminal` has been run.",
            "enum": [
                "terminal",
                "accessible-buffer",
                "none"
            ],
            "default": "none",
            "tags": [
                "accessibility"
            ],
            "markdownEnumDescriptions": [
                "Always focus the terminal.",
                "Always focus the accessible buffer.",
                "Do nothing."
            ],
            "defaultDefaultValue": "none",
            "scope": 3,
            "restricted": false
        },
        "css.trace.server": {
            "type": "string",
            "scope": 3,
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the CSS language server.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "css.format.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enable/disable default CSS formatter.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.format.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enable/disable default SCSS formatter.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.format.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enable/disable default LESS formatter.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "emmet.showExpandedAbbreviation": {
            "type": [
                "string"
            ],
            "enum": [
                "never",
                "always",
                "inMarkupAndStylesheetFilesOnly"
            ],
            "default": "always",
            "markdownDescription": "Shows expanded Emmet abbreviations as suggestions.\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\nThe option `\"always\"` applies to all parts of the file regardless of markup/css.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": "always",
            "restricted": false
        },
        "emmet.includeLanguages": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "markdownDescription": "Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and Emmet supported language.\n For example: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "emmet.variables": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string",
                    "default": "en"
                },
                "charset": {
                    "type": "string",
                    "default": "UTF-8"
                }
            },
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "markdownDescription": "Variables to be used in Emmet snippets.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "emmet.syntaxProfiles": {
            "type": "object",
            "default": {},
            "markdownDescription": "Define profile for specified syntax or use your own profile with specific rules.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "emmet.excludeLanguages": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "markdown"
            ],
            "markdownDescription": "An array of languages where Emmet abbreviations should not be expanded.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": [
                "markdown"
            ],
            "restricted": false
        },
        "emmet.useInlineCompletions": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If `true`, Emmet will use inline completions to suggest expansions. To prevent the non-inline completion item provider from showing up as often while this setting is `true`, turn `#editor.quickSuggestions#` to `inline` or `off` for the `other` item.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "emmet.preferences": {
            "type": "object",
            "default": {},
            "markdownDescription": "Preferences used to modify behavior of some actions and resolvers of Emmet.",
            "properties": {
                "css.intUnit": {
                    "type": "string",
                    "default": "px",
                    "markdownDescription": "Default unit for integer values."
                },
                "css.floatUnit": {
                    "type": "string",
                    "default": "em",
                    "markdownDescription": "Default unit for float values."
                },
                "css.propertyEnd": {
                    "type": "string",
                    "default": ";",
                    "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations."
                },
                "sass.propertyEnd": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files."
                },
                "stylus.propertyEnd": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files."
                },
                "css.valueSeparator": {
                    "type": "string",
                    "default": ": ",
                    "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations."
                },
                "sass.valueSeparator": {
                    "type": "string",
                    "default": ": ",
                    "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files."
                },
                "stylus.valueSeparator": {
                    "type": "string",
                    "default": " ",
                    "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files."
                },
                "bem.elementSeparator": {
                    "type": "string",
                    "default": "__",
                    "markdownDescription": "Element separator used for classes when using the BEM filter."
                },
                "bem.modifierSeparator": {
                    "type": "string",
                    "default": "_",
                    "markdownDescription": "Modifier separator used for classes when using the BEM filter."
                },
                "filter.commentBefore": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "A definition of comment that should be placed before matched element when comment filter is applied."
                },
                "filter.commentAfter": {
                    "type": "string",
                    "default": "\n<!-- /[#ID][.CLASS] -->",
                    "markdownDescription": "A definition of comment that should be placed after matched element when comment filter is applied."
                },
                "filter.commentTrigger": {
                    "type": "array",
                    "default": [
                        "id",
                        "class"
                    ],
                    "markdownDescription": "A comma-separated list of attribute names that should exist in the abbreviation for the comment filter to be applied."
                },
                "format.noIndentTags": {
                    "type": "array",
                    "default": [
                        "html"
                    ],
                    "markdownDescription": "An array of tag names that should never get inner indentation."
                },
                "format.forceIndentationForTags": {
                    "type": "array",
                    "default": [
                        "body"
                    ],
                    "markdownDescription": "An array of tag names that should always get inner indentation."
                },
                "profile.allowCompactBoolean": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "If `true`, compact notation of boolean attributes are produced."
                },
                "css.webkitProperties": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix."
                },
                "css.mozProperties": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix."
                },
                "css.oProperties": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix."
                },
                "css.msProperties": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix."
                },
                "css.fuzzySearchMinScore": {
                    "type": "number",
                    "default": 0.3,
                    "markdownDescription": "The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches."
                },
                "output.inlineBreak": {
                    "type": "number",
                    "default": 0,
                    "markdownDescription": "The number of sibling inline elements needed for line breaks to be placed between those elements. If `0`, inline elements are always expanded onto a single line."
                },
                "output.reverseAttributes": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "If `true`, reverses attribute merging directions when resolving snippets."
                },
                "output.selfClosingStyle": {
                    "type": "string",
                    "enum": [
                        "html",
                        "xhtml",
                        "xml"
                    ],
                    "default": "html",
                    "markdownDescription": "Style of self-closing tags: html (`<br>`), xml (`<br/>`) or xhtml (`<br />`)."
                },
                "css.color.short": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "If `true`, color values like `#f` will be expanded to `#fff` instead of `#ffffff`."
                }
            },
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "emmet.showSuggestionsAsSnippets": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "emmet.optimizeStylesheetParsing": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in CSS/SCSS/Less files is parsed.",
            "scope": 3,
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.autoRepositoryDetection": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "subFolders",
                "openEditors"
            ],
            "enumDescriptions": [
                "Scan for both subfolders of the current opened folder and parent folders of open files.",
                "Disable automatic repository scanning.",
                "Scan for subfolders of the currently opened folder.",
                "Scan for parent folders of open files."
            ],
            "description": "Configures when repositories should be automatically detected.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.autorefresh": {
            "type": "boolean",
            "description": "Whether auto refreshing is enabled.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.branchValidationRegex": {
            "type": "string",
            "description": "A regular expression to validate new branch names.",
            "default": "",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "git.branchWhitespaceChar": {
            "type": "string",
            "description": "The character to replace whitespace in new branch names, and to separate segments of a randomly generated branch name.",
            "default": "-",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "-",
            "restricted": false
        },
        "git.confirmSync": {
            "type": "boolean",
            "description": "Confirm before synchronizing git repositories.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.checkoutType": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "local",
                    "tags",
                    "remote"
                ],
                "enumDescriptions": [
                    "Local branches",
                    "Tags",
                    "Remote branches"
                ]
            },
            "uniqueItems": true,
            "markdownDescription": "Controls what type of git refs are listed when running `Checkout to...`.",
            "default": [
                "local",
                "remote",
                "tags"
            ],
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [
                "local",
                "remote",
                "tags"
            ],
            "restricted": false
        },
        "git.ignoreLegacyWarning": {
            "type": "boolean",
            "description": "Ignores the legacy Git warning.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.ignoreMissingGitWarning": {
            "type": "boolean",
            "description": "Ignores the warning when Git is missing.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.ignoreWindowsGit27Warning": {
            "type": "boolean",
            "description": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.ignoreLimitWarning": {
            "type": "boolean",
            "description": "Ignores the warning when there are too many changes in a repository.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.ignoreRebaseWarning": {
            "type": "boolean",
            "description": "Ignores the warning when it looks like the branch might have been rebased when pulling.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.useEditorAsCommitInput": {
            "type": "boolean",
            "description": "Controls whether a full text editor will be used to author commit messages, whenever no message is provided in the commit input box.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.decorations.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether Git contributes colors and badges to the Explorer and the Open Editors view.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.openAfterClone": {
            "type": "string",
            "enum": [
                "always",
                "alwaysNewWindow",
                "whenNoFolderOpen",
                "prompt"
            ],
            "enumDescriptions": [
                "Always open in current window.",
                "Always open in a new window.",
                "Only open in current window when no folder is opened.",
                "Always prompt for action."
            ],
            "default": "prompt",
            "description": "Controls whether to open a repository automatically after cloning.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "git.showInlineOpenFileAction": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to show an inline Open File action in the Git changes view.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.showPushSuccessNotification": {
            "type": "boolean",
            "description": "Controls whether to show a notification when a push is successful.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.inputValidation": {
            "type": "string",
            "enum": [
                "always",
                "warn",
                "off"
            ],
            "default": "warn",
            "description": "Controls when to show commit message input validation.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "warn",
            "restricted": false
        },
        "git.inputValidationLength": {
            "type": "number",
            "default": 72,
            "description": "Controls the commit message length threshold for showing a warning.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 72,
            "restricted": false
        },
        "git.inputValidationSubjectLength": {
            "type": [
                "number",
                "null"
            ],
            "default": 50,
            "markdownDescription": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `#git.inputValidationLength#`.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 50,
            "restricted": false
        },
        "git.ignoredRepositories": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "scope": 3,
            "description": "List of git repositories to ignore.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "git.allowForcePush": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether force push (with or without lease) is enabled.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.useForcePushWithLease": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether force pushing uses the safer force-with-lease variant.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.confirmForcePush": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to ask for confirmation before force-pushing.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.allowNoVerifyCommit": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether commits without running pre-commit and commit-msg hooks are allowed.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.confirmNoVerifyCommit": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to ask for confirmation before committing without verification.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.branchSortOrder": {
            "type": "string",
            "enum": [
                "committerdate",
                "alphabetically"
            ],
            "default": "committerdate",
            "description": "Controls the sort order for branches.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "committerdate",
            "restricted": false
        },
        "git.terminalAuthentication": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to enable VS Code to be the authentication handler for Git processes spawned in the Integrated Terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.terminalGitEditor": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether to enable VS Code to be the Git editor for Git processes spawned in the integrated terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.useIntegratedAskPass": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether GIT_ASKPASS should be overwritten to use the integrated version.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.githubAuthentication": {
            "markdownDeprecationMessage": "This setting is now deprecated, please use `#github.gitAuthentication#` instead.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "default": null,
            "restricted": false,
            "deprecationMessage": "This setting is now deprecated, please use `#github.gitAuthentication#` instead."
        },
        "git.timeline.date": {
            "type": "string",
            "enum": [
                "committed",
                "authored"
            ],
            "enumDescriptions": [
                "Use the committed date",
                "Use the authored date"
            ],
            "default": "committed",
            "description": "Controls which date to use for items in the Timeline view.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "committed",
            "restricted": false
        },
        "git.timeline.showAuthor": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to show the commit author in the Timeline view.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.timeline.showUncommitted": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether to show uncommitted changes in the Timeline view.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.commandsToLog": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "List of git commands (ex: commit, push) that would have their `stdout` logged to the [git output](command:git.showOutput). If the git command has a client-side hook configured, the client-side hook's `stdout` will also be logged to the [git output](command:git.showOutput).",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "git.mergeEditor": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Open the merge editor for files that are currently under conflict.",
            "scope": 3,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "github.gitProtocol": {
            "type": "string",
            "enum": [
                "https",
                "ssh"
            ],
            "default": "https",
            "description": "Controls which protocol is used to clone a GitHub repository",
            "scope": 3,
            "source": {
                "id": "vscode.github",
                "displayName": "GitHub"
            },
            "defaultDefaultValue": "https",
            "restricted": false
        },
        "github-enterprise.uri": {
            "type": "string",
            "description": "GitHub Enterprise Server URI",
            "scope": 3,
            "source": {
                "id": "vscode.github-authentication",
                "displayName": "GitHub Authentication"
            },
            "default": "",
            "restricted": true
        },
        "html.format.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enable/disable default HTML formatter.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.trace.server": {
            "type": "string",
            "scope": 3,
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the HTML language server.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "json.validate.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enable/disable JSON validation.",
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "json.format.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enable/disable default JSON formatter",
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "json.format.keepLines": {
            "type": "boolean",
            "scope": 3,
            "default": false,
            "description": "Keep all existing new lines when formatting.",
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "json.trace.server": {
            "type": "string",
            "scope": 3,
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the JSON language server.",
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "json.colorDecorators.enable": {
            "type": "boolean",
            "scope": 3,
            "default": true,
            "description": "Enables or disables color decorators",
            "deprecationMessage": "The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "json.maxItemsComputed": {
            "type": "number",
            "default": 5000,
            "description": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
            "scope": 3,
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": 5000,
            "restricted": false
        },
        "json.schemaDownload.enable": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, JSON schemas can be fetched from http and https locations.",
            "tags": [
                "usesOnlineServices"
            ],
            "scope": 3,
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.trace.extension": {
            "type": "string",
            "enum": [
                "off",
                "verbose"
            ],
            "default": "off",
            "description": "Enable debug logging for the Markdown extension.",
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "markdown.trace.server": {
            "type": "string",
            "scope": 3,
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the Markdown language server.",
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "markdown.server.log": {
            "type": "string",
            "scope": 3,
            "enum": [
                "off",
                "debug",
                "trace"
            ],
            "default": "off",
            "description": "Controls the logging level of the Markdown language server.",
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "markdown.editor.drop.copyIntoWorkspace": {
            "type": "string",
            "markdownDescription": "Controls if files outside of the workspace that are dropped into a Markdown editor should be copied into the workspace.\n\nUse `#markdown.copyFiles.destination#` to configure where copied dropped files should be created",
            "default": "mediaFiles",
            "enum": [
                "mediaFiles",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Try to copy external image and video files into the workspace.",
                "Do not copy external files into the workspace."
            ],
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "mediaFiles",
            "restricted": false
        },
        "markdown.editor.filePaste.copyIntoWorkspace": {
            "type": "string",
            "markdownDescription": "Controls if files outside of the workspace that are pasted into a Markdown editor should be copied into the workspace.\n\nUse `#markdown.copyFiles.destination#` to configure where copied files should be created.",
            "default": "mediaFiles",
            "enum": [
                "mediaFiles",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Try to copy external image and video files into the workspace.",
                "Do not copy external files into the workspace."
            ],
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "mediaFiles",
            "restricted": false
        },
        "markdown.updateLinksOnFileMove.enabled": {
            "type": "string",
            "enum": [
                "prompt",
                "always",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Prompt on each file move.",
                "Always update links automatically.",
                "Never try to update link and don't prompt."
            ],
            "default": "never",
            "markdownDescription": "Try to update links in Markdown files when a file is renamed/moved in the workspace. Use `#markdown.updateLinksOnFileMove.include#` to configure which files trigger link updates.",
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "markdown.updateLinksOnFileMove.include": {
            "type": "array",
            "markdownDescription": "Glob patterns that specifies files that trigger automatic link updates. See `#markdown.updateLinksOnFileMove.enabled#` for details about this feature.",
            "scope": 3,
            "items": {
                "type": "string",
                "description": "The glob pattern to match file paths against. Set to true to enable the pattern."
            },
            "default": [
                "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
                "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": [
                "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
                "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
            ],
            "restricted": false
        },
        "markdown.updateLinksOnFileMove.enableForDirectories": {
            "type": "boolean",
            "default": true,
            "description": "Enable updating links when a directory is moved or renamed in the workspace.",
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.copyFiles.destination": {
            "type": "object",
            "markdownDescription": "Defines where files copied created by drop or paste should be created. This is a map from globs that match on the Markdown document to destinations.\n\nThe destinations may use the following variables:\n\n- `${documentFileName}` — The full filename of the Markdown document, for example: `readme.md`.\n- `${documentBaseName}` — The basename of Markdown document, for example: `readme`.\n- `${documentExtName}` — The extension of the Markdown document, for example: `md`.\n- `${documentDirName}` — The name of the Markdown document's parent directory.\n- `${documentWorkspaceFolder}` — The workspace folder for the Markdown document, for example: `/Users/me/myProject`. This is the same as `${documentDirName}` if the file is not part of a workspace.\n- `${fileName}` — The file name of the dropped file, for example: `image.png`.",
            "additionalProperties": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "default": {},
            "restricted": false
        },
        "markdown.copyFiles.overwriteBehavior": {
            "type": "string",
            "markdownDescription": "Controls if files created by drop or paste should overwrite existing files.",
            "default": "nameIncrementally",
            "enum": [
                "nameIncrementally",
                "overwrite"
            ],
            "markdownEnumDescriptions": [
                "If a file with the same name already exists, append a number to the file name, for example: `image.png` becomes `image-1.png`.",
                "If a file with the same name already exists, overwrite it."
            ],
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "nameIncrementally",
            "restricted": false
        },
        "markdown.preferredMdPathExtensionStyle": {
            "type": "string",
            "default": "auto",
            "markdownDescription": "Controls if file extensions (e.g. `.md`) are added or not for links to Markdown files. This setting is used when file paths are added by tooling such as path completions or file renames.",
            "enum": [
                "auto",
                "includeExtension",
                "removeExtension"
            ],
            "markdownEnumDescriptions": [
                "For existing paths, try to maintain the file extension style. For new paths, add file extensions.",
                "Prefer including the file extension. For example, path completions to a file named `file.md` will insert `file.md`.",
                "Prefer removing the file extension. For example, path completions to a file named `file.md` will insert `file` without the `.md`."
            ],
            "scope": 3,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "markdown.math.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable rendering math in the built-in Markdown preview.",
            "scope": 3,
            "source": {
                "id": "vscode.markdown-math",
                "displayName": "Markdown Math"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "mediaPreview.video.autoPlay": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Start playing videos on mute automatically.",
            "scope": 3,
            "source": {
                "id": "vscode.media-preview",
                "displayName": "Media Preview"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "mediaPreview.video.loop": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Loop videos over again automatically.",
            "scope": 3,
            "source": {
                "id": "vscode.media-preview",
                "displayName": "Media Preview"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "merge-conflict.codeLens.enabled": {
            "type": "boolean",
            "description": "Create a CodeLens for merge conflict blocks within editor.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.merge-conflict",
                "displayName": "Merge Conflict"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "merge-conflict.decorators.enabled": {
            "type": "boolean",
            "description": "Create decorators for merge conflict blocks within editor.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.merge-conflict",
                "displayName": "Merge Conflict"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "merge-conflict.autoNavigateNextConflict.enabled": {
            "type": "boolean",
            "description": "Whether to automatically navigate to the next merge conflict after resolving a merge conflict.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscode.merge-conflict",
                "displayName": "Merge Conflict"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "merge-conflict.diffViewPosition": {
            "type": "string",
            "enum": [
                "Current",
                "Beside",
                "Below"
            ],
            "description": "Controls where the diff view should be opened when comparing changes in merge conflicts.",
            "enumDescriptions": [
                "Open the diff view in the current editor group.",
                "Open the diff view next to the current editor group.",
                "Open the diff view below the current editor group."
            ],
            "default": "Current",
            "scope": 3,
            "source": {
                "id": "vscode.merge-conflict",
                "displayName": "Merge Conflict"
            },
            "defaultDefaultValue": "Current",
            "restricted": false
        },
        "microsoft-sovereign-cloud.environment": {
            "type": "string",
            "markdownDescription": "The Sovereign Cloud to use for authentication. If you select `custom`, you must also set the `#microsoft-sovereign-cloud.customEnvironment#` setting.",
            "enum": [
                "ChinaCloud",
                "USGovernment",
                "custom"
            ],
            "enumDescriptions": [
                "Azure China",
                "Azure US Government",
                "A custom Microsoft Sovereign Cloud"
            ],
            "scope": 3,
            "source": {
                "id": "vscode.microsoft-authentication",
                "displayName": "Microsoft Account"
            },
            "default": "",
            "restricted": false
        },
        "microsoft-sovereign-cloud.customEnvironment": {
            "type": "object",
            "additionalProperties": true,
            "markdownDescription": "The custom configuration for the Sovereign Cloud to use with the Microsoft Sovereign Cloud authentication provider. This along with setting `#microsoft-sovereign-cloud.environment#` to `custom` is required to use this feature.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the custom Sovereign Cloud."
                },
                "portalUrl": {
                    "type": "string",
                    "description": "The portal URL for the custom Sovereign Cloud."
                },
                "managementEndpointUrl": {
                    "type": "string",
                    "description": "The management endpoint for the custom Sovereign Cloud."
                },
                "resourceManagerEndpointUrl": {
                    "type": "string",
                    "description": "The resource manager endpoint for the custom Sovereign Cloud."
                },
                "activeDirectoryEndpointUrl": {
                    "type": "string",
                    "description": "The Active Directory endpoint for the custom Sovereign Cloud."
                },
                "activeDirectoryResourceId": {
                    "type": "string",
                    "description": "The Active Directory resource ID for the custom Sovereign Cloud."
                }
            },
            "required": [
                "name",
                "portalUrl",
                "managementEndpointUrl",
                "resourceManagerEndpointUrl",
                "activeDirectoryEndpointUrl",
                "activeDirectoryResourceId"
            ],
            "scope": 3,
            "source": {
                "id": "vscode.microsoft-authentication",
                "displayName": "Microsoft Account"
            },
            "default": {},
            "restricted": false
        },
        "debug.javascript.codelens.npmScripts": {
            "enum": [
                "top",
                "all",
                "never"
            ],
            "default": "top",
            "description": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": "top",
            "restricted": false
        },
        "debug.javascript.terminalOptions": {
            "type": "object",
            "description": "Default launch options for the JavaScript debug terminal and npm scripts.",
            "default": {},
            "properties": {
                "resolveSourceMapLocations": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                    "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "outFiles": {
                    "type": [
                        "array"
                    ],
                    "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                    "default": [
                        "${workspaceFolder}/**/*.js",
                        "!**/node_modules/**"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "pauseForSourceMap": {
                    "type": "boolean",
                    "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                    "default": false
                },
                "showAsyncStacks": {
                    "description": "Show the async calls that led to the current call stack.",
                    "default": true,
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object",
                            "required": [
                                "onAttach"
                            ],
                            "properties": {
                                "onAttach": {
                                    "type": "number",
                                    "default": 32
                                }
                            }
                        },
                        {
                            "type": "object",
                            "required": [
                                "onceBreakpointResolved"
                            ],
                            "properties": {
                                "onceBreakpointResolved": {
                                    "type": "number",
                                    "default": 32
                                }
                            }
                        }
                    ]
                },
                "skipFiles": {
                    "type": "array",
                    "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                    "default": [
                        "<node_internals>/**"
                    ]
                },
                "smartStep": {
                    "type": "boolean",
                    "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                    "default": true
                },
                "sourceMaps": {
                    "type": "boolean",
                    "description": "Use JavaScript source maps (if they exist).",
                    "default": true
                },
                "sourceMapRenames": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                },
                "sourceMapPathOverrides": {
                    "type": "object",
                    "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                    "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                    }
                },
                "timeout": {
                    "type": "number",
                    "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                    "default": 10000
                },
                "timeouts": {
                    "type": "object",
                    "description": "Timeouts for several debugger operations.",
                    "default": {},
                    "properties": {
                        "sourceMapMinPause": {
                            "type": "number",
                            "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                            "default": 1000
                        },
                        "sourceMapCumulativePause": {
                            "type": "number",
                            "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                            "default": 1000
                        },
                        "hoverEvaluation": {
                            "type": "number",
                            "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                            "default": 500
                        }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "Timeouts for several debugger operations."
                },
                "trace": {
                    "description": "Configures what diagnostic output is produced.",
                    "default": true,
                    "oneOf": [
                        {
                            "type": "boolean",
                            "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "stdio": {
                                    "type": "boolean",
                                    "description": "Whether to return trace data from the launched application or browser."
                                },
                                "logFile": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "Configures where on disk logs are written."
                                }
                            }
                        }
                    ]
                },
                "outputCapture": {
                    "enum": [
                        "console",
                        "std"
                    ],
                    "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                    "default": "console"
                },
                "enableContentValidation": {
                    "default": true,
                    "type": "boolean",
                    "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                },
                "customDescriptionGenerator": {
                    "type": "string",
                    "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                },
                "customPropertiesGenerator": {
                    "type": "string",
                    "deprecated": true,
                    "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                },
                "cascadeTerminateToConfigurations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "uniqueItems": true
                    },
                    "default": [],
                    "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                },
                "enableDWARF": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                },
                "cwd": {
                    "type": "string",
                    "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                    "default": "${workspaceFolder}",
                    "docDefault": "localRoot || ${workspaceFolder}"
                },
                "localRoot": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Path to the local directory containing the program.",
                    "default": null
                },
                "remoteRoot": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Absolute path to the remote directory containing the program.",
                    "default": null
                },
                "autoAttachChildProcesses": {
                    "type": "boolean",
                    "description": "Attach debugger to new child processes automatically.",
                    "default": true
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                    "default": {}
                },
                "envFile": {
                    "type": "string",
                    "description": "Absolute path to a file containing environment variable definitions.",
                    "default": "${workspaceFolder}/.env"
                },
                "runtimeSourcemapPausePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                    "default": []
                },
                "nodeVersionHint": {
                    "type": "number",
                    "minimum": 8,
                    "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                    "default": 12
                },
                "command": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
                    "default": "npm start"
                }
            },
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "debug.javascript.automaticallyTunnelRemoteServer": {
            "type": "boolean",
            "description": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "debug.javascript.debugByLinkOptions": {
            "default": "on",
            "description": "Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to \"off\" to disable this behavior, or \"always\" to enable debugging in all terminals.",
            "oneOf": [
                {
                    "type": "string",
                    "enum": [
                        "on",
                        "off",
                        "always"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "resolveSourceMapLocations": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                            "default": null,
                            "items": {
                                "type": "string"
                            }
                        },
                        "outFiles": {
                            "type": [
                                "array"
                            ],
                            "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                            "default": [
                                "${workspaceFolder}/**/*.js",
                                "!**/node_modules/**"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "pauseForSourceMap": {
                            "type": "boolean",
                            "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                            "default": false
                        },
                        "showAsyncStacks": {
                            "description": "Show the async calls that led to the current call stack.",
                            "default": true,
                            "oneOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "onAttach"
                                    ],
                                    "properties": {
                                        "onAttach": {
                                            "type": "number",
                                            "default": 32
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "required": [
                                        "onceBreakpointResolved"
                                    ],
                                    "properties": {
                                        "onceBreakpointResolved": {
                                            "type": "number",
                                            "default": 32
                                        }
                                    }
                                }
                            ]
                        },
                        "skipFiles": {
                            "type": "array",
                            "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                            "default": [
                                "<node_internals>/**"
                            ]
                        },
                        "smartStep": {
                            "type": "boolean",
                            "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                            "default": true
                        },
                        "sourceMaps": {
                            "type": "boolean",
                            "description": "Use JavaScript source maps (if they exist).",
                            "default": true
                        },
                        "sourceMapRenames": {
                            "type": "boolean",
                            "default": true,
                            "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                        },
                        "sourceMapPathOverrides": {
                            "type": "object",
                            "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                            "default": {
                                "webpack://?:*/*": "${workspaceFolder}/*",
                                "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                                "meteor://💻app/*": "${workspaceFolder}/*"
                            }
                        },
                        "timeout": {
                            "type": "number",
                            "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                            "default": 10000
                        },
                        "timeouts": {
                            "type": "object",
                            "description": "Timeouts for several debugger operations.",
                            "default": {},
                            "properties": {
                                "sourceMapMinPause": {
                                    "type": "number",
                                    "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                                    "default": 1000
                                },
                                "sourceMapCumulativePause": {
                                    "type": "number",
                                    "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                                    "default": 1000
                                },
                                "hoverEvaluation": {
                                    "type": "number",
                                    "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                                    "default": 500
                                }
                            },
                            "additionalProperties": false,
                            "markdownDescription": "Timeouts for several debugger operations."
                        },
                        "trace": {
                            "description": "Configures what diagnostic output is produced.",
                            "default": true,
                            "oneOf": [
                                {
                                    "type": "boolean",
                                    "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                                },
                                {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "stdio": {
                                            "type": "boolean",
                                            "description": "Whether to return trace data from the launched application or browser."
                                        },
                                        "logFile": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Configures where on disk logs are written."
                                        }
                                    }
                                }
                            ]
                        },
                        "outputCapture": {
                            "enum": [
                                "console",
                                "std"
                            ],
                            "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                            "default": "console"
                        },
                        "enableContentValidation": {
                            "default": true,
                            "type": "boolean",
                            "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                        },
                        "customDescriptionGenerator": {
                            "type": "string",
                            "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                        },
                        "customPropertiesGenerator": {
                            "type": "string",
                            "deprecated": true,
                            "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                        },
                        "cascadeTerminateToConfigurations": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "uniqueItems": true
                            },
                            "default": [],
                            "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                        },
                        "enableDWARF": {
                            "type": "boolean",
                            "default": true,
                            "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                        },
                        "disableNetworkCache": {
                            "type": "boolean",
                            "description": "Controls whether to skip the network cache for each request",
                            "default": true
                        },
                        "pathMapping": {
                            "type": "object",
                            "description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk",
                            "default": {}
                        },
                        "webRoot": {
                            "type": "string",
                            "description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
                            "default": "${workspaceFolder}"
                        },
                        "urlFilter": {
                            "type": "string",
                            "description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
                            "default": ""
                        },
                        "url": {
                            "type": "string",
                            "description": "Will search for a tab with this exact url and attach to it, if found",
                            "default": "http://localhost:8080"
                        },
                        "inspectUri": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n",
                            "default": null
                        },
                        "vueComponentPaths": {
                            "type": "array",
                            "description": "A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.",
                            "default": [
                                "${workspaceFolder}/**/*.vue"
                            ]
                        },
                        "server": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
                                    "additionalProperties": false,
                                    "default": {
                                        "program": "node my-server.js"
                                    },
                                    "properties": {
                                        "resolveSourceMapLocations": {
                                            "type": [
                                                "array",
                                                "null"
                                            ],
                                            "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                                            "default": [
                                                "${workspaceFolder}/**",
                                                "!**/node_modules/**"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "outFiles": {
                                            "type": [
                                                "array"
                                            ],
                                            "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                                            "default": [
                                                "${workspaceFolder}/**/*.js",
                                                "!**/node_modules/**"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "pauseForSourceMap": {
                                            "type": "boolean",
                                            "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                                            "default": false
                                        },
                                        "showAsyncStacks": {
                                            "description": "Show the async calls that led to the current call stack.",
                                            "default": true,
                                            "oneOf": [
                                                {
                                                    "type": "boolean"
                                                },
                                                {
                                                    "type": "object",
                                                    "required": [
                                                        "onAttach"
                                                    ],
                                                    "properties": {
                                                        "onAttach": {
                                                            "type": "number",
                                                            "default": 32
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "required": [
                                                        "onceBreakpointResolved"
                                                    ],
                                                    "properties": {
                                                        "onceBreakpointResolved": {
                                                            "type": "number",
                                                            "default": 32
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "skipFiles": {
                                            "type": "array",
                                            "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                                            "default": [
                                                "<node_internals>/**"
                                            ]
                                        },
                                        "smartStep": {
                                            "type": "boolean",
                                            "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                                            "default": true
                                        },
                                        "sourceMaps": {
                                            "type": "boolean",
                                            "description": "Use JavaScript source maps (if they exist).",
                                            "default": true
                                        },
                                        "sourceMapRenames": {
                                            "type": "boolean",
                                            "default": true,
                                            "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                                        },
                                        "sourceMapPathOverrides": {
                                            "type": "object",
                                            "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                                            "default": {
                                                "webpack://?:*/*": "${workspaceFolder}/*",
                                                "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                                                "meteor://💻app/*": "${workspaceFolder}/*"
                                            }
                                        },
                                        "timeout": {
                                            "type": "number",
                                            "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                                            "default": 10000
                                        },
                                        "timeouts": {
                                            "type": "object",
                                            "description": "Timeouts for several debugger operations.",
                                            "default": {},
                                            "properties": {
                                                "sourceMapMinPause": {
                                                    "type": "number",
                                                    "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                                                    "default": 1000
                                                },
                                                "sourceMapCumulativePause": {
                                                    "type": "number",
                                                    "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                                                    "default": 1000
                                                },
                                                "hoverEvaluation": {
                                                    "type": "number",
                                                    "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                                                    "default": 500
                                                }
                                            },
                                            "additionalProperties": false,
                                            "markdownDescription": "Timeouts for several debugger operations."
                                        },
                                        "trace": {
                                            "description": "Configures what diagnostic output is produced.",
                                            "default": true,
                                            "oneOf": [
                                                {
                                                    "type": "boolean",
                                                    "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "stdio": {
                                                            "type": "boolean",
                                                            "description": "Whether to return trace data from the launched application or browser."
                                                        },
                                                        "logFile": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "Configures where on disk logs are written."
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "outputCapture": {
                                            "enum": [
                                                "console",
                                                "std"
                                            ],
                                            "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                                            "default": "console"
                                        },
                                        "enableContentValidation": {
                                            "default": true,
                                            "type": "boolean",
                                            "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                                        },
                                        "customDescriptionGenerator": {
                                            "type": "string",
                                            "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                                        },
                                        "customPropertiesGenerator": {
                                            "type": "string",
                                            "deprecated": true,
                                            "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                                        },
                                        "cascadeTerminateToConfigurations": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "uniqueItems": true
                                            },
                                            "default": [],
                                            "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                                        },
                                        "enableDWARF": {
                                            "type": "boolean",
                                            "default": true,
                                            "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                                        },
                                        "cwd": {
                                            "type": "string",
                                            "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                                            "default": "${workspaceFolder}"
                                        },
                                        "localRoot": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Path to the local directory containing the program.",
                                            "default": null
                                        },
                                        "remoteRoot": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Absolute path to the remote directory containing the program.",
                                            "default": null
                                        },
                                        "autoAttachChildProcesses": {
                                            "type": "boolean",
                                            "description": "Attach debugger to new child processes automatically.",
                                            "default": true
                                        },
                                        "env": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                                            "default": {}
                                        },
                                        "envFile": {
                                            "type": "string",
                                            "description": "Absolute path to a file containing environment variable definitions.",
                                            "default": "${workspaceFolder}/.env"
                                        },
                                        "runtimeSourcemapPausePatterns": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                                            "default": []
                                        },
                                        "nodeVersionHint": {
                                            "type": "number",
                                            "minimum": 8,
                                            "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                                            "default": 12
                                        },
                                        "program": {
                                            "type": "string",
                                            "description": "Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.",
                                            "default": ""
                                        },
                                        "stopOnEntry": {
                                            "type": [
                                                "boolean",
                                                "string"
                                            ],
                                            "description": "Automatically stop program after launch.",
                                            "default": true
                                        },
                                        "console": {
                                            "type": "string",
                                            "enum": [
                                                "internalConsole",
                                                "integratedTerminal",
                                                "externalTerminal"
                                            ],
                                            "enumDescriptions": [
                                                "VS Code Debug Console (which doesn't support to read input from a program)",
                                                "VS Code's integrated terminal",
                                                "External terminal that can be configured via user settings"
                                            ],
                                            "description": "Where to launch the debug target.",
                                            "default": "internalConsole"
                                        },
                                        "args": {
                                            "type": [
                                                "array",
                                                "string"
                                            ],
                                            "description": "Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "restart": {
                                            "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
                                            "default": true,
                                            "oneOf": [
                                                {
                                                    "type": "boolean"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "delay": {
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "default": 1000
                                                        },
                                                        "maxAttempts": {
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "default": 10
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "runtimeExecutable": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "markdownDescription": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.",
                                            "default": "node"
                                        },
                                        "runtimeVersion": {
                                            "type": "string",
                                            "markdownDescription": "Version of `node` runtime to use. Requires `nvm`.",
                                            "default": "default"
                                        },
                                        "runtimeArgs": {
                                            "type": "array",
                                            "description": "Optional arguments passed to the runtime executable.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "profileStartup": {
                                            "type": "boolean",
                                            "description": "If true, will start profiling as soon as the process launches",
                                            "default": true
                                        },
                                        "attachSimplePort": {
                                            "type": "integer",
                                            "description": "If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.",
                                            "default": 9229
                                        },
                                        "killBehavior": {
                                            "type": "string",
                                            "enum": [
                                                "forceful",
                                                "polite",
                                                "none"
                                            ],
                                            "default": "forceful",
                                            "markdownDescription": "Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "description": "JavaScript Debug Terminal",
                                    "additionalProperties": false,
                                    "default": {
                                        "program": "npm start"
                                    },
                                    "properties": {
                                        "resolveSourceMapLocations": {
                                            "type": [
                                                "array",
                                                "null"
                                            ],
                                            "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                                            "default": [
                                                "${workspaceFolder}/**",
                                                "!**/node_modules/**"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "outFiles": {
                                            "type": [
                                                "array"
                                            ],
                                            "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                                            "default": [
                                                "${workspaceFolder}/**/*.js",
                                                "!**/node_modules/**"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "pauseForSourceMap": {
                                            "type": "boolean",
                                            "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                                            "default": false
                                        },
                                        "showAsyncStacks": {
                                            "description": "Show the async calls that led to the current call stack.",
                                            "default": true,
                                            "oneOf": [
                                                {
                                                    "type": "boolean"
                                                },
                                                {
                                                    "type": "object",
                                                    "required": [
                                                        "onAttach"
                                                    ],
                                                    "properties": {
                                                        "onAttach": {
                                                            "type": "number",
                                                            "default": 32
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "required": [
                                                        "onceBreakpointResolved"
                                                    ],
                                                    "properties": {
                                                        "onceBreakpointResolved": {
                                                            "type": "number",
                                                            "default": 32
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "skipFiles": {
                                            "type": "array",
                                            "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                                            "default": [
                                                "<node_internals>/**"
                                            ]
                                        },
                                        "smartStep": {
                                            "type": "boolean",
                                            "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                                            "default": true
                                        },
                                        "sourceMaps": {
                                            "type": "boolean",
                                            "description": "Use JavaScript source maps (if they exist).",
                                            "default": true
                                        },
                                        "sourceMapRenames": {
                                            "type": "boolean",
                                            "default": true,
                                            "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                                        },
                                        "sourceMapPathOverrides": {
                                            "type": "object",
                                            "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                                            "default": {
                                                "webpack://?:*/*": "${workspaceFolder}/*",
                                                "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                                                "meteor://💻app/*": "${workspaceFolder}/*"
                                            }
                                        },
                                        "timeout": {
                                            "type": "number",
                                            "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                                            "default": 10000
                                        },
                                        "timeouts": {
                                            "type": "object",
                                            "description": "Timeouts for several debugger operations.",
                                            "default": {},
                                            "properties": {
                                                "sourceMapMinPause": {
                                                    "type": "number",
                                                    "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                                                    "default": 1000
                                                },
                                                "sourceMapCumulativePause": {
                                                    "type": "number",
                                                    "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                                                    "default": 1000
                                                },
                                                "hoverEvaluation": {
                                                    "type": "number",
                                                    "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                                                    "default": 500
                                                }
                                            },
                                            "additionalProperties": false,
                                            "markdownDescription": "Timeouts for several debugger operations."
                                        },
                                        "trace": {
                                            "description": "Configures what diagnostic output is produced.",
                                            "default": true,
                                            "oneOf": [
                                                {
                                                    "type": "boolean",
                                                    "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "stdio": {
                                                            "type": "boolean",
                                                            "description": "Whether to return trace data from the launched application or browser."
                                                        },
                                                        "logFile": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "Configures where on disk logs are written."
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "outputCapture": {
                                            "enum": [
                                                "console",
                                                "std"
                                            ],
                                            "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                                            "default": "console"
                                        },
                                        "enableContentValidation": {
                                            "default": true,
                                            "type": "boolean",
                                            "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                                        },
                                        "customDescriptionGenerator": {
                                            "type": "string",
                                            "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                                        },
                                        "customPropertiesGenerator": {
                                            "type": "string",
                                            "deprecated": true,
                                            "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                                        },
                                        "cascadeTerminateToConfigurations": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "uniqueItems": true
                                            },
                                            "default": [],
                                            "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                                        },
                                        "enableDWARF": {
                                            "type": "boolean",
                                            "default": true,
                                            "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                                        },
                                        "cwd": {
                                            "type": "string",
                                            "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                                            "default": "${workspaceFolder}",
                                            "docDefault": "localRoot || ${workspaceFolder}"
                                        },
                                        "localRoot": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Path to the local directory containing the program.",
                                            "default": null
                                        },
                                        "remoteRoot": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Absolute path to the remote directory containing the program.",
                                            "default": null
                                        },
                                        "autoAttachChildProcesses": {
                                            "type": "boolean",
                                            "description": "Attach debugger to new child processes automatically.",
                                            "default": true
                                        },
                                        "env": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ]
                                            },
                                            "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                                            "default": {}
                                        },
                                        "envFile": {
                                            "type": "string",
                                            "description": "Absolute path to a file containing environment variable definitions.",
                                            "default": "${workspaceFolder}/.env"
                                        },
                                        "runtimeSourcemapPausePatterns": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                                            "default": []
                                        },
                                        "nodeVersionHint": {
                                            "type": "number",
                                            "minimum": 8,
                                            "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                                            "default": 12
                                        },
                                        "command": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
                                            "default": "npm start"
                                        }
                                    }
                                }
                            ]
                        },
                        "perScriptSourcemaps": {
                            "type": "string",
                            "default": "auto",
                            "enum": [
                                "yes",
                                "no",
                                "auto"
                            ],
                            "description": "Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate."
                        },
                        "port": {
                            "type": "number",
                            "description": "Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.",
                            "default": 0
                        },
                        "file": {
                            "type": "string",
                            "description": "A local html file to open in the browser",
                            "default": "${workspaceFolder}/index.html"
                        },
                        "userDataDir": {
                            "type": [
                                "string",
                                "boolean"
                            ],
                            "description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.",
                            "default": true
                        },
                        "includeDefaultArgs": {
                            "type": "boolean",
                            "description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
                            "default": true
                        },
                        "includeLaunchArgs": {
                            "type": "boolean",
                            "description": "Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.",
                            "default": true
                        },
                        "runtimeExecutable": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
                            "default": "stable"
                        },
                        "runtimeArgs": {
                            "type": "array",
                            "description": "Optional arguments passed to the runtime executable.",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        },
                        "env": {
                            "type": "object",
                            "description": "Optional dictionary of environment key/value pairs for the browser.",
                            "default": {}
                        },
                        "cwd": {
                            "type": "string",
                            "description": "Optional working directory for the runtime executable.",
                            "default": null
                        },
                        "profileStartup": {
                            "type": "boolean",
                            "description": "If true, will start profiling soon as the process launches",
                            "default": true
                        },
                        "cleanUp": {
                            "type": "string",
                            "enum": [
                                "wholeBrowser",
                                "onlyTab"
                            ],
                            "description": "What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.",
                            "default": "wholeBrowser"
                        },
                        "browserLaunchLocation": {
                            "description": "Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.",
                            "default": null,
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "ui",
                                        "workspace"
                                    ]
                                }
                            ]
                        },
                        "enabled": {
                            "type": "string",
                            "enum": [
                                "on",
                                "off",
                                "always"
                            ]
                        }
                    }
                }
            ],
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": "on",
            "restricted": false
        },
        "debug.javascript.pickAndAttachOptions": {
            "type": "object",
            "default": {},
            "markdownDescription": "Default options used when debugging a process through the `Debug: Attach to Node.js Process` command",
            "properties": {
                "resolveSourceMapLocations": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                    "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "outFiles": {
                    "type": [
                        "array"
                    ],
                    "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                    "default": [
                        "${workspaceFolder}/**/*.js",
                        "!**/node_modules/**"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "pauseForSourceMap": {
                    "type": "boolean",
                    "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                    "default": false
                },
                "showAsyncStacks": {
                    "description": "Show the async calls that led to the current call stack.",
                    "default": true,
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object",
                            "required": [
                                "onAttach"
                            ],
                            "properties": {
                                "onAttach": {
                                    "type": "number",
                                    "default": 32
                                }
                            }
                        },
                        {
                            "type": "object",
                            "required": [
                                "onceBreakpointResolved"
                            ],
                            "properties": {
                                "onceBreakpointResolved": {
                                    "type": "number",
                                    "default": 32
                                }
                            }
                        }
                    ]
                },
                "skipFiles": {
                    "type": "array",
                    "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                    "default": [
                        "<node_internals>/**"
                    ]
                },
                "smartStep": {
                    "type": "boolean",
                    "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                    "default": true
                },
                "sourceMaps": {
                    "type": "boolean",
                    "description": "Use JavaScript source maps (if they exist).",
                    "default": true
                },
                "sourceMapRenames": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                },
                "sourceMapPathOverrides": {
                    "type": "object",
                    "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                    "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                    }
                },
                "timeout": {
                    "type": "number",
                    "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                    "default": 10000
                },
                "timeouts": {
                    "type": "object",
                    "description": "Timeouts for several debugger operations.",
                    "default": {},
                    "properties": {
                        "sourceMapMinPause": {
                            "type": "number",
                            "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                            "default": 1000
                        },
                        "sourceMapCumulativePause": {
                            "type": "number",
                            "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                            "default": 1000
                        },
                        "hoverEvaluation": {
                            "type": "number",
                            "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                            "default": 500
                        }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "Timeouts for several debugger operations."
                },
                "trace": {
                    "description": "Configures what diagnostic output is produced.",
                    "default": true,
                    "oneOf": [
                        {
                            "type": "boolean",
                            "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "stdio": {
                                    "type": "boolean",
                                    "description": "Whether to return trace data from the launched application or browser."
                                },
                                "logFile": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "Configures where on disk logs are written."
                                }
                            }
                        }
                    ]
                },
                "outputCapture": {
                    "enum": [
                        "console",
                        "std"
                    ],
                    "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                    "default": "console"
                },
                "enableContentValidation": {
                    "default": true,
                    "type": "boolean",
                    "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                },
                "customDescriptionGenerator": {
                    "type": "string",
                    "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                },
                "customPropertiesGenerator": {
                    "type": "string",
                    "deprecated": true,
                    "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                },
                "cascadeTerminateToConfigurations": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "uniqueItems": true
                    },
                    "default": [],
                    "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                },
                "enableDWARF": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Toggles whether the debugger will try to read DWARF debug symbols from WebAssembly, which can be resource intensive. Requires the `ms-vscode.wasm-dwarf-debugging` extension to function."
                },
                "cwd": {
                    "type": "string",
                    "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                    "default": "${workspaceFolder}",
                    "docDefault": "localRoot || ${workspaceFolder}"
                },
                "localRoot": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Path to the local directory containing the program.",
                    "default": null
                },
                "remoteRoot": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Absolute path to the remote directory containing the program.",
                    "default": null
                },
                "autoAttachChildProcesses": {
                    "type": "boolean",
                    "description": "Attach debugger to new child processes automatically.",
                    "default": true
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                    "default": {}
                },
                "envFile": {
                    "type": "string",
                    "description": "Absolute path to a file containing environment variable definitions.",
                    "default": "${workspaceFolder}/.env"
                },
                "runtimeSourcemapPausePatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                    "default": []
                },
                "nodeVersionHint": {
                    "type": "number",
                    "minimum": 8,
                    "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                    "default": 12
                },
                "address": {
                    "type": "string",
                    "description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
                    "default": "localhost"
                },
                "port": {
                    "type": "number",
                    "description": "Debug port to attach to. Default is 9229.",
                    "default": 9229
                },
                "websocketAddress": {
                    "type": "string",
                    "description": "Exact websocket address to attach to. If unspecified, it will be discovered from the address and port."
                },
                "remoteHostHeader": {
                    "type": "string",
                    "description": "Explicit Host header to use when connecting to the websocket of inspector. If unspecified, the host header will be set to 'localhost'. This is useful when the inspector is running behind a proxy that only accept particular Host header."
                },
                "restart": {
                    "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
                    "default": true,
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "delay": {
                                    "type": "number",
                                    "minimum": 0,
                                    "default": 1000
                                },
                                "maxAttempts": {
                                    "type": "number",
                                    "minimum": 0,
                                    "default": 10
                                }
                            }
                        }
                    ]
                },
                "processId": {
                    "type": "string",
                    "description": "ID of process to attach to.",
                    "default": "${command:PickProcess}"
                },
                "attachExistingChildren": {
                    "type": "boolean",
                    "description": "Whether to attempt to attach to already-spawned child processes.",
                    "default": false
                },
                "continueOnAttach": {
                    "type": "boolean",
                    "markdownDescription": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
                    "default": true
                }
            },
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "debug.javascript.autoAttachFilter": {
            "type": "string",
            "default": "disabled",
            "enum": [
                "always",
                "smart",
                "onlyWithFlag",
                "disabled"
            ],
            "enumDescriptions": [
                "Auto attach to every Node.js process launched in the terminal.",
                "Auto attach when running scripts that aren't in a node_modules folder.",
                "Only auto attach when the `--inspect` is given.",
                "Auto attach is disabled and not shown in status bar."
            ],
            "markdownDescription": "Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": "disabled",
            "restricted": false
        },
        "debug.javascript.autoAttachSmartPattern": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "${workspaceFolder}/**",
                "!**/node_modules/**",
                "**/$KNOWN_TOOLS$/**"
            ],
            "markdownDescription": "Configures glob patterns for determining when to attach in \"smart\" `#debug.javascript.autoAttachFilter#` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": [
                "${workspaceFolder}/**",
                "!**/node_modules/**",
                "**/$KNOWN_TOOLS$/**"
            ],
            "restricted": false
        },
        "debug.javascript.breakOnConditionalError": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Whether to stop when conditional breakpoints throw an error.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "debug.javascript.unmapMissingSources": {
            "type": "boolean",
            "default": false,
            "description": "Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "debug.javascript.defaultRuntimeExecutable": {
            "type": "object",
            "default": {
                "pwa-node": "node"
            },
            "markdownDescription": "The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.",
            "properties": {
                "pwa-node": {
                    "type": "string"
                },
                "pwa-chrome": {
                    "type": "string"
                },
                "pwa-msedge": {
                    "type": "string"
                }
            },
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": {
                "pwa-node": "node"
            },
            "restricted": false
        },
        "debug.javascript.resourceRequestOptions": {
            "type": "object",
            "default": {},
            "markdownDescription": "Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common case to disable certificate verification can be done by passing `{ \"https\": { \"rejectUnauthorized\": false } }`.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.js-debug",
                "displayName": "JavaScript Debugger"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "npm.scriptExplorerAction": {
            "type": "string",
            "enum": [
                "open",
                "run"
            ],
            "markdownDescription": "The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.",
            "scope": 3,
            "default": "open",
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": "open",
            "restricted": false
        },
        "npm.fetchOnlinePackageInfo": {
            "type": "boolean",
            "description": "Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.",
            "default": true,
            "scope": 3,
            "tags": [
                "usesOnlineServices"
            ],
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "npm.scriptHover": {
            "type": "boolean",
            "description": "Display hover with 'Run' and 'Debug' commands for scripts.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "php.suggest.basic": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables.",
            "scope": 3,
            "source": {
                "id": "vscode.php-language-features",
                "displayName": "PHP Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "php.validate.enable": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable built-in PHP validation.",
            "scope": 3,
            "source": {
                "id": "vscode.php-language-features",
                "displayName": "PHP Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "php.validate.run": {
            "type": "string",
            "enum": [
                "onSave",
                "onType"
            ],
            "default": "onSave",
            "description": "Whether the linter is run on save or on type.",
            "scope": 3,
            "source": {
                "id": "vscode.php-language-features",
                "displayName": "PHP Language Features"
            },
            "defaultDefaultValue": "onSave",
            "restricted": false
        },
        "references.preferredLocation": {
            "description": "Controls whether 'Peek References' or 'Find References' is invoked when selecting CodeLens references.",
            "type": "string",
            "default": "peek",
            "enum": [
                "peek",
                "view"
            ],
            "enumDescriptions": [
                "Show references in peek editor.",
                "Show references in separate view."
            ],
            "scope": 3,
            "source": {
                "id": "vscode.references-view",
                "displayName": "Reference Search View"
            },
            "defaultDefaultValue": "peek",
            "restricted": false
        },
        "simpleBrowser.focusLockIndicator.enabled": {
            "type": "boolean",
            "default": true,
            "title": "Focus Lock Indicator Enabled",
            "description": "Enable/disable the floating indicator that shows when focused in the simple browser.",
            "scope": 3,
            "source": {
                "id": "vscode.simple-browser",
                "displayName": "Simple Browser"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.tsdk": {
            "type": "string",
            "markdownDescription": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "default": "",
            "restricted": true
        },
        "typescript.disableAutomaticTypeAcquisition": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
            "scope": 3,
            "tags": [
                "usesOnlineServices"
            ],
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.enablePromptUseWorkspaceTsdk": {
            "type": "boolean",
            "default": false,
            "description": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.check.npmIsInstalled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.referencesCodeLens.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable references CodeLens in JavaScript files.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.referencesCodeLens.showOnAllFunctions": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable references CodeLens on all functions in JavaScript files.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.referencesCodeLens.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable references CodeLens in TypeScript files.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.referencesCodeLens.showOnAllFunctions": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable references CodeLens on all functions in TypeScript files.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.implementationsCodeLens.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.tsserver.enableTracing": {
            "type": "boolean",
            "default": false,
            "description": "Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.tsserver.log": {
            "type": "string",
            "enum": [
                "off",
                "terse",
                "normal",
                "verbose"
            ],
            "default": "off",
            "description": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "typescript.reportStyleChecksAsWarnings": {
            "type": "boolean",
            "default": true,
            "description": "Report style checks as warnings.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.validate.enable": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable TypeScript validation.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.enable": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable default TypeScript formatter.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.validate.enable": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable JavaScript validation.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.enable": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable default JavaScript formatter.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "js/ts.implicitProjectConfig.module": {
            "type": "string",
            "markdownDescription": "Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.",
            "default": "ESNext",
            "enum": [
                "CommonJS",
                "AMD",
                "System",
                "UMD",
                "ES6",
                "ES2015",
                "ES2020",
                "ESNext",
                "None",
                "ES2022",
                "Node12",
                "NodeNext"
            ],
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "ESNext",
            "restricted": false
        },
        "js/ts.implicitProjectConfig.target": {
            "type": "string",
            "default": "ES2020",
            "markdownDescription": "Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.",
            "enum": [
                "ES3",
                "ES5",
                "ES6",
                "ES2015",
                "ES2016",
                "ES2017",
                "ES2018",
                "ES2019",
                "ES2020",
                "ES2021",
                "ES2022",
                "ESNext"
            ],
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "ES2020",
            "restricted": false
        },
        "javascript.implicitProjectConfig.checkJs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
            "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`."
        },
        "js/ts.implicitProjectConfig.checkJs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.implicitProjectConfig.experimentalDecorators": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
            "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`."
        },
        "js/ts.implicitProjectConfig.experimentalDecorators": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "js/ts.implicitProjectConfig.strictNullChecks": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "js/ts.implicitProjectConfig.strictFunctionTypes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.tsc.autoDetect": {
            "type": "string",
            "default": "on",
            "enum": [
                "on",
                "off",
                "build",
                "watch"
            ],
            "markdownEnumDescriptions": [
                "Create both build and watch tasks.",
                "Disable this feature.",
                "Only create single run compile tasks.",
                "Only create compile and watch tasks."
            ],
            "description": "Controls auto detection of tsc tasks.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "on",
            "restricted": false
        },
        "typescript.locale": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "de",
                "es",
                "en",
                "fr",
                "it",
                "ja",
                "ko",
                "ru",
                "zh-CN",
                "zh-TW"
            ],
            "markdownDescription": "Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.preferences.includePackageJsonAutoImports": {
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "enumDescriptions": [
                "Search dependencies based on estimated performance impact.",
                "Always search dependencies.",
                "Never search dependencies."
            ],
            "default": "auto",
            "markdownDescription": "Enable/disable searching `package.json` dependencies for available auto imports.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.surveys.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.tsserver.useSeparateSyntaxServer": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols.",
            "markdownDeprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false,
            "deprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`."
        },
        "typescript.tsserver.useSyntaxServer": {
            "type": "string",
            "scope": 3,
            "description": "Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.",
            "default": "auto",
            "enum": [
                "always",
                "never",
                "auto"
            ],
            "enumDescriptions": [
                "Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.",
                "Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.",
                "Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading."
            ],
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.tsserver.maxTsServerMemory": {
            "type": "number",
            "default": 3072,
            "markdownDescription": "The maximum amount of memory (in MB) to allocate to the TypeScript server process. To use a memory limit greater than 4 GB, use `#typescript.tsserver.nodePath#` to run TS Server with a custom Node installation.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": 3072,
            "restricted": false
        },
        "typescript.tsserver.experimental.enableProjectDiagnostics": {
            "type": "boolean",
            "default": false,
            "description": "(Experimental) Enables project wide error reporting.",
            "scope": 3,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.tsserver.watchOptions": {
            "type": "object",
            "description": "Configure which watching strategies should be used to keep track of files and directories.",
            "scope": 3,
            "properties": {
                "watchFile": {
                    "type": "string",
                    "description": "Strategy for how individual files are watched.",
                    "enum": [
                        "fixedChunkSizePolling",
                        "fixedPollingInterval",
                        "priorityPollingInterval",
                        "dynamicPriorityPolling",
                        "useFsEvents",
                        "useFsEventsOnParentDirectory"
                    ],
                    "enumDescriptions": [
                        "Polls files in chunks at regular interval.",
                        "Check every file for changes several times a second at a fixed interval.",
                        "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
                        "Use a dynamic queue where less-frequently modified files will be checked less often.",
                        "Attempt to use the operating system/file system's native events for file changes.",
                        "Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate."
                    ],
                    "default": "useFsEvents"
                },
                "watchDirectory": {
                    "type": "string",
                    "description": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
                    "enum": [
                        "fixedChunkSizePolling",
                        "fixedPollingInterval",
                        "dynamicPriorityPolling",
                        "useFsEvents"
                    ],
                    "enumDescriptions": [
                        "Polls directories in chunks at regular interval.",
                        "Check every directory for changes several times a second at a fixed interval.",
                        "Use a dynamic queue where less-frequently modified directories will be checked less often.",
                        "Attempt to use the operating system/file system's native events for directory changes."
                    ],
                    "default": "useFsEvents"
                },
                "fallbackPolling": {
                    "type": "string",
                    "description": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.",
                    "enum": [
                        "fixedPollingInterval",
                        "priorityPollingInterval",
                        "dynamicPriorityPolling"
                    ],
                    "enumDescriptions": [
                        "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
                        "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
                        "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"
                    ]
                },
                "synchronousWatchDirectory": {
                    "type": "boolean",
                    "description": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups."
                }
            },
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "default": {},
            "restricted": false
        },
        "typescript.workspaceSymbols.scope": {
            "type": "string",
            "enum": [
                "allOpenProjects",
                "currentProject"
            ],
            "enumDescriptions": [
                "Search all open JavaScript or TypeScript projects for symbols.",
                "Only search for symbols in the current JavaScript or TypeScript project."
            ],
            "default": "allOpenProjects",
            "markdownDescription": "Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "allOpenProjects",
            "restricted": false
        },
        "typescript.tsserver.web.projectWideIntellisense.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.tsserver.web.projectWideIntellisense.suppressSemanticErrors": {
            "type": "boolean",
            "default": true,
            "description": "Suppresses semantic errors. This is needed when using external packages as these can't be included analyzed on web.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.tsserver.nodePath": {
            "type": "string",
            "description": "Run TS Server on a custom Node installation. This can be a path to a Node executable, or 'node' if you want VS Code to detect a Node installation.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "default": "",
            "restricted": true
        },
        "typescript.experimental.tsserver.web.typeAcquisition.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable/disable package acquisition on the web.",
            "scope": 3,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.preferGoToSourceDefinition": {
            "type": "boolean",
            "default": false,
            "description": "Makes Go to Definition avoid type declaration files when possible by triggering Go to Source Definition instead. This allows Go to Source Definition to be triggered with the mouse gesture. Requires using TypeScript 4.7+ in the workspace.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.preferGoToSourceDefinition": {
            "type": "boolean",
            "default": false,
            "description": "Makes Go to Definition avoid type declaration files when possible by triggering Go to Source Definition instead. This allows Go to Source Definition to be triggered with the mouse gesture. Requires using TypeScript 4.7+ in the workspace.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.workspaceSymbols.excludeLibrarySymbols": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Exclude symbols that come from library files in `Go To Symbol in Workspace` results. Requires using TypeScript 5.3+ in the workspace.",
            "scope": 3,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "better-comments.multilineComments": {
            "type": "boolean",
            "description": "Whether the multiline comment highlighter should be active",
            "default": true,
            "scope": 3,
            "source": {
                "id": "aaron-bond.better-comments",
                "displayName": "Better Comments"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "better-comments.highlightPlainText": {
            "type": "boolean",
            "description": "Whether the plaintext comment highlighter should be active",
            "default": false,
            "scope": 3,
            "source": {
                "id": "aaron-bond.better-comments",
                "displayName": "Better Comments"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "better-comments.tags": {
            "type": "array",
            "description": "Tags which are used to color the comments. Changes require a restart of VS Code to take effect",
            "default": [
                {
                    "tag": "!",
                    "color": "#FF2D00",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "?",
                    "color": "#3498DB",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "//",
                    "color": "#474747",
                    "strikethrough": true,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "todo",
                    "color": "#FF8C00",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "*",
                    "color": "#98C379",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                }
            ],
            "scope": 3,
            "source": {
                "id": "aaron-bond.better-comments",
                "displayName": "Better Comments"
            },
            "defaultDefaultValue": [
                {
                    "tag": "!",
                    "color": "#FF2D00",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "?",
                    "color": "#3498DB",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "//",
                    "color": "#474747",
                    "strikethrough": true,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "todo",
                    "color": "#FF8C00",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                },
                {
                    "tag": "*",
                    "color": "#98C379",
                    "strikethrough": false,
                    "underline": false,
                    "backgroundColor": "transparent",
                    "bold": false,
                    "italic": false
                }
            ],
            "restricted": false
        },
        "asciidoc.extensions.registerWorkspaceExtensions": {
            "type": "boolean",
            "default": false,
            "order": 2,
            "markdownDescription": "Enables Asciidoctor.js extensions registration from the workspace directory `.asciidoctor/lib`.",
            "scope": 3,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "asciidoc.debug.trace": {
            "type": "string",
            "enum": [
                "off",
                "verbose"
            ],
            "default": "off",
            "markdownDescription": "Enables debug logging for this extension.",
            "order": 1,
            "scope": 3,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "asciidoc.antora.enableAntoraSupport": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable [Antora](https://antora.org/) support.",
            "scope": 3,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "astro.language-server.ls-path": {
            "type": "string",
            "title": "Language Server: Path",
            "description": "Path to the language server executable. You won't need this in most cases, set this only when needing a specific version of the language server",
            "scope": 3,
            "source": {
                "id": "astro-build.astro-vscode",
                "displayName": "Astro"
            },
            "default": "",
            "restricted": false
        },
        "astro.trace.server": {
            "scope": 3,
            "type": "string",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the language server.",
            "source": {
                "id": "astro-build.astro-vscode",
                "displayName": "Astro"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "tailwindCSS.emmetCompletions": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "tailwindCSS.includeLanguages": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "markdownDescription": "Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "tailwindCSS.files.exclude": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "**/.git/**",
                "**/node_modules/**",
                "**/.hg/**",
                "**/.svn/**"
            ],
            "markdownDescription": "Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": [
                "**/.git/**",
                "**/node_modules/**",
                "**/.hg/**",
                "**/.svn/**"
            ],
            "restricted": false
        },
        "tailwindCSS.classAttributes": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "class",
                "className",
                "ngClass"
            ],
            "markdownDescription": "The HTML attributes for which to provide class completions, hover previews, linting etc.",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": [
                "class",
                "className",
                "ngClass"
            ],
            "restricted": false
        },
        "tailwindCSS.experimental.configFile": {
            "type": [
                "null",
                "string",
                "object"
            ],
            "default": null,
            "markdownDescription": "Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "tailwindCSS.showPixelEquivalents": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show `px` equivalents for `rem` CSS values.",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.rootFontSize": {
            "type": "number",
            "default": 16,
            "markdownDescription": "Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": 16,
            "restricted": false
        },
        "tailwindCSS.inspectPort": {
            "type": [
                "number",
                "null"
            ],
            "default": null,
            "markdownDescription": "Enable the Node.js inspector agent for the language server and listen on the specified port.",
            "scope": 3,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "catppuccin.boldKeywords": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether to use **bold** for keywords.",
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "catppuccin.italicKeywords": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether to use *italics* for keywords.",
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "catppuccin.italicComments": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether to use *italics* for comments.",
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "catppuccin.colorOverrides": {
            "type": "object",
            "default": {},
            "markdownDescription": "Custom color overrides. Assign your own hex codes to palette colors. See [the docs](https://github.com/catppuccin/vscode#override-palette-colors) for reference.",
            "$ref": "https://raw.githubusercontent.com/catppuccin/vscode/main/schemas/colorOverrides.schema.json",
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "catppuccin.customUIColors": {
            "type": "object",
            "default": {},
            "markdownDescription": "Customize UI colors. Map `workbench.colorCustomizations` to palette colors. See [the docs](https://github.com/catppuccin/vscode#use-palette-colors-on-workbench-elements-ui) for reference.",
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "catppuccin.accentColor": {
            "type": "string",
            "default": "mauve",
            "description": "Controls which accent color to use.",
            "enum": [
                "rosewater",
                "flamingo",
                "pink",
                "mauve",
                "red",
                "maroon",
                "peach",
                "yellow",
                "green",
                "teal",
                "sky",
                "sapphire",
                "blue",
                "lavender"
            ],
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": "mauve",
            "restricted": false
        },
        "catppuccin.workbenchMode": {
            "type": "string",
            "default": "default",
            "description": "Controls how the workbench should be styled.",
            "enum": [
                "default",
                "flat",
                "minimal"
            ],
            "enumDescriptions": [
                "The default look, using 3 shades of the base color.",
                "A more flat look, using 2 shades of the base color.",
                "A minimal look, using 1 shade of the base color."
            ],
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "catppuccin.bracketMode": {
            "type": "string",
            "default": "rainbow",
            "description": "Controls how bracket pairs should be themed",
            "enum": [
                "rainbow",
                "dimmed",
                "monochromatic",
                "neovim"
            ],
            "enumDescriptions": [
                "Uses 6 rainbow colors for matching bracket pairs.",
                "Uses the same 6 rainbow colors as `rainbow`, but has a dimmed appearance.",
                "A monochromatic, grey appearance for matching bracket pairs.",
                "Uses the same bracket pair colors as our neovim port."
            ],
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": "rainbow",
            "restricted": false
        },
        "catppuccin.extraBordersEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether borders should be enabled on some additional UI elements.",
            "scope": 3,
            "source": {
                "id": "Catppuccin.catppuccin-vsc",
                "displayName": "Catppuccin for VSCode"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.trace.server": {
            "scope": 3,
            "anyOf": [
                {
                    "type": "string",
                    "enum": [
                        "off",
                        "messages",
                        "verbose"
                    ],
                    "default": "off"
                },
                {
                    "type": "object",
                    "properties": {
                        "verbosity": {
                            "type": "string",
                            "enum": [
                                "off",
                                "messages",
                                "verbose"
                            ],
                            "default": "off"
                        },
                        "format": {
                            "type": "string",
                            "enum": [
                                "text",
                                "json"
                            ],
                            "default": "text"
                        }
                    }
                }
            ],
            "default": "off",
            "description": "Traces the communication between VSCode and the eslint linter service.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "eslint.debug": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enables ESLint debug mode (same as `--debug` on the command line)",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.path": {
            "type": "string",
            "default": null,
            "markdownDescription": "A path to the `deno` CLI executable. By default, the extension looks for `deno` in the `PATH`, but if set, will use the path specified instead.",
            "scope": 3,
            "examples": [
                "/usr/bin/deno",
                "C:\\Program Files\\deno\\deno.exe"
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.cache": {
            "type": "string",
            "default": null,
            "markdownDescription": "A path to the cache directory for Deno. By default, the operating system's cache path plus `deno` is used, or the `DENO_DIR` environment variable, but if set, this path will be used instead.",
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.certificateStores": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": null,
            "markdownDescription": "A list of root certificate stores used to validate TLS certificates when fetching and caching remote resources. This overrides the `DENO_TLS_CA_STORE` environment variable if set.",
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.codeLens.implementations": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enables or disables the display of code lens information for implementations of items in the code.",
            "scope": 3,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.codeLens.references": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enables or disables the display of code lens information for references of items in the code.",
            "scope": 3,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.codeLens.referencesAllFunctions": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enables or disables the display of code lens information for all functions in the code.",
            "scope": 3,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.config": {
            "type": "string",
            "default": null,
            "markdownDescription": "The file path to a configuration file. This is the equivalent to using `--config` on the command line. The path can be either be relative to the workspace, or an absolute path.\n\nIt is recommend you name it `deno.json` or `deno.jsonc`.\n\n**Not recommended to be set globally.**",
            "scope": 3,
            "examples": [
                "./deno.jsonc",
                "/path/to/deno.jsonc",
                "C:\\path\\to\\deno.jsonc"
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.importMap": {
            "type": "string",
            "default": null,
            "markdownDescription": "The file path to an import map. This is the equivalent to using `--import-map` on the command line.\n\n[Import maps](https://deno.land/manual@v1.6.0/linking_to_external_code/import_maps) provide a way to \"relocate\" modules based on their specifiers. The path can either be relative to the workspace, or an absolute path.\n\n**Not recommended to be set globally.**",
            "scope": 3,
            "examples": [
                "./import_map.json",
                "/path/to/import_map.json",
                "C:\\path\\to\\import_map.json"
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.suggest.autoImports": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.suggest.completeFunctionCalls": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.suggest.names": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.suggest.paths": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.suggest.imports.autoDiscover": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "If enabled, when new hosts/origins are encountered that support import suggestions, you will be prompted to enable or disable it.  Defaults to `true`.",
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.suggest.imports.hosts": {
            "type": "object",
            "default": {
                "https://deno.land": true
            },
            "markdownDescription": "Controls which hosts are enabled for import suggestions.",
            "scope": 3,
            "examples": {
                "https://deno.land": true
            },
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": {
                "https://deno.land": true
            },
            "restricted": false
        },
        "deno.testing.args": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "--allow-all",
                "--no-check"
            ],
            "markdownDescription": "Arguments to use when running tests via the Test Explorer.  Defaults to `[ \"--allow-all\" ]`.",
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": [
                "--allow-all",
                "--no-check"
            ],
            "restricted": false
        },
        "deno.tlsCertificate": {
            "type": "string",
            "default": null,
            "markdownDescription": "A path to a PEM certificate to use as the certificate authority when validating TLS certificates when fetching and caching remote resources. This is like using `--cert` on the Deno CLI and overrides the `DENO_CERT` environment variable if set.",
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.unsafelyIgnoreCertificateErrors": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": null,
            "markdownDescription": "**DANGER** disables verification of TLS certificates for the hosts provided. There is likely a better way to deal with any errors than use this option. This is like using `--unsafely-ignore-certificate-errors` in the Deno CLI.",
            "scope": 3,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.unstable": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Controls if code will be type checked with Deno's unstable APIs. This is the equivalent to using `--unstable` on the command line.\n\n**Not recommended to be enabled globally.**",
            "scope": 3,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.lint": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls if linting information will be provided by the Deno Language Server.\n\n**Not recommended to be enabled globally.**",
            "scope": 3,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.internalDebug": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Determines if the internal debugging information for the Deno language server will be logged to the _Deno Language Server_ console.",
            "scope": 3,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.defaultTaskCommand": {
            "type": "string",
            "enum": [
                "open",
                "run"
            ],
            "markdownDescription": "Controls the default action when clicking on a task in the _Deno Tasks sidebar_.",
            "scope": 3,
            "default": "open",
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": "open",
            "restricted": false
        },
        "gitlens.currentLine.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide an inline blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.currentLine.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the inline blame annotation. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.currentLine.format": {
            "type": "string",
            "default": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",
            "markdownDescription": "Specifies the format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",
            "restricted": false
        },
        "gitlens.currentLine.uncommittedChangesFormat": {
            "type": "string",
            "default": null,
            "markdownDescription": "Specifies the uncommitted changes format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting.\n\n**NOTE**: Setting this to an empty string will disable inline blame annotations for uncommitted changes.",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.currentLine.scrollable": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether the inline blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.currentLine.dateFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) for the cinline blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.codeLens.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.codeLens.authors.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.codeLens.authors.command": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "gitlens.toggleFileBlame",
                "gitlens.toggleFileHeatmap",
                "gitlens.toggleFileChanges",
                "gitlens.toggleFileChangesOnly",
                "gitlens.diffWithPrevious",
                "gitlens.revealCommitInView",
                "gitlens.showCommitsInView",
                "gitlens.showQuickCommitDetails",
                "gitlens.showQuickCommitFileDetails",
                "gitlens.showQuickFileHistory",
                "gitlens.showQuickRepoHistory",
                "gitlens.openCommitOnRemote",
                "gitlens.copyRemoteCommitUrl",
                "gitlens.openFileOnRemote",
                "gitlens.copyRemoteFileUrl"
            ],
            "enumDescriptions": [
                "Disables click interaction",
                "Toggles file blame",
                "Toggles file heatmap",
                "Toggles file changes since before the commit",
                "Toggles file changes from the commit",
                "Compares the current committed file with the previous commit",
                "Reveals the commit in the Side Bar",
                "Searches for commits within the range",
                "Shows a commit details quick pick menu",
                "Shows a commit file details quick pick menu",
                "Shows a file history quick pick menu",
                "Shows a branch history quick pick menu",
                "Opens the commit on the remote service (when available)",
                "Copies the remote commit URL to the clipboard (when available)",
                "Opens the file revision on the remote service (when available)",
                "Copies the remote file URL to the clipboard (when available)"
            ],
            "default": "gitlens.toggleFileBlame",
            "markdownDescription": "Specifies the command to be executed when an _authors_ CodeLens is clicked",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "gitlens.toggleFileBlame",
            "restricted": false
        },
        "gitlens.codeLens.recentChange.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.codeLens.recentChange.command": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "gitlens.toggleFileBlame",
                "gitlens.toggleFileHeatmap",
                "gitlens.toggleFileChanges",
                "gitlens.toggleFileChangesOnly",
                "gitlens.diffWithPrevious",
                "gitlens.revealCommitInView",
                "gitlens.showCommitsInView",
                "gitlens.showQuickCommitDetails",
                "gitlens.showQuickCommitFileDetails",
                "gitlens.showQuickFileHistory",
                "gitlens.showQuickRepoHistory",
                "gitlens.openCommitOnRemote",
                "gitlens.copyRemoteCommitUrl",
                "gitlens.openFileOnRemote",
                "gitlens.copyRemoteFileUrl"
            ],
            "enumDescriptions": [
                "Disables click interaction",
                "Toggles file blame",
                "Toggles file heatmap",
                "Toggles file changes since before the commit",
                "Toggles file changes from the commit",
                "Compares the current committed file with the previous commit",
                "Reveals the commit in the Side Bar",
                "Shows the commit details",
                "Shows a commit details quick pick menu",
                "Shows a commit file details quick pick menu",
                "Shows a file history quick pick menu",
                "Shows a branch history quick pick menu",
                "Opens the commit on the remote service (when available)",
                "Copies the remote commit URL to the clipboard (when available)",
                "Opens the file revision on the remote service (when available)",
                "Copies the remote file URL to the clipboard (when available)"
            ],
            "default": "gitlens.showQuickCommitFileDetails",
            "markdownDescription": "Specifies the command to be executed when a _recent change_ CodeLens is clicked",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "gitlens.showQuickCommitFileDetails",
            "restricted": false
        },
        "gitlens.codeLens.includeSingleLineSymbols": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to provide any Git CodeLens on symbols that span only a single line",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": {
            "type": "string",
            "default": "$(ellipsis)",
            "markdownDescription": "Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "$(ellipsis)",
            "restricted": false
        },
        "gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": {
            "type": "string",
            "default": "$(ellipsis)",
            "markdownDescription": "Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes",
            "scope": 3,
            "order": 71,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "$(ellipsis)",
            "restricted": false
        },
        "gitlens.strings.codeLens.unsavedChanges.authorsOnly": {
            "type": "string",
            "default": "$(ellipsis)",
            "markdownDescription": "Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes",
            "scope": 3,
            "order": 72,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "$(ellipsis)",
            "restricted": false
        },
        "gitlens.codeLens.dateFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 73,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.codeLens.scopesByLanguage": {
            "deprecationMessage": "Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead",
            "markdownDeprecationMessage": "Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.statusBar.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide blame information in the status bar",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.statusBar.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.statusBar.format": {
            "type": "string",
            "default": "${author}, ${agoOrDate}${' via 'pullRequest}",
            "markdownDescription": "Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${author}, ${agoOrDate}${' via 'pullRequest}",
            "restricted": false
        },
        "gitlens.statusBar.alignment": {
            "type": "string",
            "default": "right",
            "enum": [
                "left",
                "right"
            ],
            "enumDescriptions": [
                "Aligns to the left",
                "Aligns to the right"
            ],
            "markdownDescription": "Specifies the blame alignment in the status bar",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "right",
            "restricted": false
        },
        "gitlens.statusBar.command": {
            "type": "string",
            "default": "gitlens.showQuickCommitDetails",
            "enum": [
                "gitlens.toggleFileBlame",
                "gitlens.toggleFileHeatmap",
                "gitlens.toggleFileChanges",
                "gitlens.toggleFileChangesOnly",
                "gitlens.toggleCodeLens",
                "gitlens.diffWithPrevious",
                "gitlens.diffWithWorking",
                "gitlens.revealCommitInView",
                "gitlens.showCommitsInView",
                "gitlens.showQuickCommitDetails",
                "gitlens.showQuickCommitFileDetails",
                "gitlens.showQuickFileHistory",
                "gitlens.showQuickRepoHistory",
                "gitlens.openCommitOnRemote",
                "gitlens.copyRemoteCommitUrl",
                "gitlens.openFileOnRemote",
                "gitlens.copyRemoteFileUrl"
            ],
            "enumDescriptions": [
                "Toggles file blame",
                "Toggles file heatmap",
                "Toggles file changes since before the commit",
                "Toggles file changes from the commit",
                "Toggles Git CodeLens",
                "Compares the current line commit with the previous",
                "Compares the current line commit with the working tree",
                "Reveals the commit in the Side Bar",
                "Shows the commit details",
                "Shows a commit details quick pick menu",
                "Shows a commit file details quick pick menu",
                "Shows a file history quick pick menu",
                "Shows a branch history quick pick menu",
                "Opens the commit on the remote service (when available)",
                "Copies the remote commit URL to the clipboard (when available)",
                "Opens the file revision on the remote service (when available)",
                "Copies the remote file URL to the clipboard (when available)"
            ],
            "markdownDescription": "Specifies the command to be executed when the blame status bar item is clicked",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "gitlens.showQuickCommitDetails",
            "restricted": false
        },
        "gitlens.statusBar.tooltipFormat": {
            "type": "string",
            "default": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
            "editPresentation": "multilineText",
            "markdownDescription": "Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
            "restricted": false
        },
        "gitlens.statusBar.reduceFlicker": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.statusBar.dateFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 80,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.hovers.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide any hovers",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images in hovers",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.avatarSize": {
            "type": "number",
            "default": 32,
            "markdownDescription": "Specifies the size of the avatar images in hovers",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 32,
            "restricted": false
        },
        "gitlens.hovers.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.autolinks.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to automatically link external resources in commit messages",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.autolinks.enhanced": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.currentLine.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide any hovers for the current line",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.currentLine.over": {
            "type": "string",
            "default": "annotation",
            "enum": [
                "annotation",
                "line"
            ],
            "enumDescriptions": [
                "Only shown when hovering over the line annotation",
                "Shown when hovering anywhere over the line"
            ],
            "markdownDescription": "Specifies when to trigger hovers for the current line",
            "scope": 3,
            "order": 41,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "annotation",
            "restricted": false
        },
        "gitlens.hovers.currentLine.details": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide a _commit details_ hover for the current line",
            "scope": 3,
            "order": 42,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.currentLine.changes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide a _changes (diff)_ hover for the current line",
            "scope": 3,
            "order": 43,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.annotations.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide any hovers when showing blame annotations",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.annotations.over": {
            "type": "string",
            "default": "line",
            "enum": [
                "annotation",
                "line"
            ],
            "enumDescriptions": [
                "Only shown when hovering over the line annotation",
                "Shown when hovering anywhere over the line"
            ],
            "markdownDescription": "Specifies when to trigger hovers when showing blame annotations",
            "scope": 3,
            "order": 51,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "line",
            "restricted": false
        },
        "gitlens.hovers.annotations.details": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations",
            "scope": 3,
            "order": 52,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.annotations.changes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations",
            "scope": 3,
            "order": 53,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.hovers.detailsMarkdownFormat": {
            "type": "string",
            "default": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
            "editPresentation": "multilineText",
            "markdownDescription": "Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
            "restricted": false
        },
        "gitlens.hovers.changesDiff": {
            "type": "string",
            "default": "line",
            "enum": [
                "line",
                "hunk"
            ],
            "enumDescriptions": [
                "Shows only the changes to the line",
                "Shows the set of related changes"
            ],
            "markdownDescription": "Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "line",
            "restricted": false
        },
        "gitlens.views.defaultItemLimit": {
            "type": "number",
            "default": 10,
            "markdownDescription": "Specifies the default number of items to show in a view list. Use 0 to specify no limit",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 10,
            "restricted": false
        },
        "gitlens.views.pageItemLimit": {
            "type": "number",
            "default": 40,
            "markdownDescription": "Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 40,
            "restricted": false
        },
        "gitlens.views.showRelativeDateMarkers": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.formats.commits.label": {
            "type": "string",
            "default": "${❰ tips ❱➤  }${message}",
            "markdownDescription": "Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${❰ tips ❱➤  }${message}",
            "restricted": false
        },
        "gitlens.views.formats.commits.description": {
            "type": "string",
            "default": "${author, }${agoOrDate}",
            "markdownDescription": "Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${author, }${agoOrDate}",
            "restricted": false
        },
        "gitlens.views.formats.commits.tooltip": {
            "type": "string",
            "default": "${link}${' via 'pullRequest}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
            "markdownDescription": "Specifies the tooltip format (in markdown) of commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${link}${' via 'pullRequest}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
            "restricted": false
        },
        "gitlens.views.formats.commits.tooltipWithStatus": {
            "type": "string",
            "default": "${link}${' via 'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
            "markdownDescription": "Specifies the tooltip format (in markdown) of \"file\" commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${link}${' via 'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}",
            "restricted": false
        },
        "gitlens.views.formats.files.label": {
            "type": "string",
            "default": "${working  }${file}",
            "markdownDescription": "Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${working  }${file}",
            "restricted": false
        },
        "gitlens.views.formats.files.description": {
            "type": "string",
            "default": "${directory}${  ←  originalPath}",
            "markdownDescription": "Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs",
            "scope": 3,
            "order": 41,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${directory}${  ←  originalPath}",
            "restricted": false
        },
        "gitlens.views.formats.stashes.label": {
            "type": "string",
            "default": "${message}",
            "markdownDescription": "Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${message}",
            "restricted": false
        },
        "gitlens.views.formats.stashes.description": {
            "type": "string",
            "default": "${stashOnRef, }${agoOrDate}",
            "markdownDescription": "Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
            "scope": 3,
            "order": 51,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${stashOnRef, }${agoOrDate}",
            "restricted": false
        },
        "gitlens.views.experimental.multiSelect.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to enable experimental multi-select support in the views.\n**NOTE**: Requires a restart to take effect.",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.commitFileFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.commitFileDescriptionFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.commitFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.label` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.commits.files.label#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.commitDescriptionFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.description` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.commits.description#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.stashFileFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.stashFileDescriptionFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.stashFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.label` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.stashes.files.label#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.stashDescriptionFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.description` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.stashes.description#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.statusFileFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.statusFileDescriptionFormat": {
            "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
            "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.commits.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch",
                "working"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the current branch with a user-selected reference",
                "Compares the working tree with a user-selected reference"
            ],
            "default": "working",
            "markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Commits_ view",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "working",
            "restricted": false
        },
        "gitlens.views.commits.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commits.pullRequests.showForBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commits.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 23,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commits.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Commits_ view will display files",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.commits.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.commits.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commits.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Commits_ view will display file icons",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.commits.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commits.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commitDetails.autolinks.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to automatically link external resources in commit messages",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commitDetails.autolinks.enhanced": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commitDetails.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for associated pull requests. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commitDetails.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commitDetails.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Commit Details_ view will display files",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.commitDetails.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.commitDetails.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.commitDetails.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Commit Details_ view will display file icons",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.commitDetails.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Commit Details_ view",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch",
                "working"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the current branch with a user-selected reference",
                "Compares the working tree with a user-selected reference"
            ],
            "default": "working",
            "markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Repositories_ view",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "working",
            "restricted": false
        },
        "gitlens.views.repositories.showUpstreamStatus": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.includeWorkingTree": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to include working tree file status for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 12,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.repositories.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.pullRequests.showForBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the branches for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showRemotes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the remotes for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showStashes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the stashes for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showTags": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the tags for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 34,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showContributors": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the contributors for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 35,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showWorktrees": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the worktrees for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 36,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.showIncomingActivity": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view",
            "scope": 3,
            "order": 37,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.repositories.autoRefresh": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.autoReveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.branches.layout": {
            "type": "string",
            "default": "tree",
            "enum": [
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Displays branches as a list",
                "Displays branches as a tree when branch names contain slashes `/`"
            ],
            "markdownDescription": "Specifies how the _Repositories_ view will display branches",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "tree",
            "restricted": false
        },
        "gitlens.views.repositories.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Repositories_ view will display files",
            "scope": 3,
            "order": 80,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.repositories.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 81,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.repositories.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 82,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.repositories.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Repositories_ view will display file icons",
            "scope": 3,
            "order": 83,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.repositories.compact": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show the _Repositories_ view in a compact display density",
            "scope": 3,
            "order": 90,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.repositories.branches.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the branch with a user-selected reference"
            ],
            "default": "branch",
            "markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) under each branch in the _Repositories_ view",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "branch",
            "restricted": false
        },
        "gitlens.views.repositories.enabled": {
            "deprecationMessage": "Deprecated. This setting is no longer used",
            "markdownDeprecationMessage": "Deprecated. This setting is no longer used",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.fileHistory.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.fileHistory.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.fileHistory.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _File History_ view will display files",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.fileHistory.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.fileHistory.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.fileHistory.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _File History_ view will display file icons",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.fileHistory.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of status icons in the _File History_ view",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.advanced.fileHistoryFollowsRenames": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether file histories will follow renames",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.advanced.fileHistoryShowAllBranches": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether file histories will show commits from all branches",
            "scope": 3,
            "order": 101,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.advanced.fileHistoryShowMergeCommits": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether file histories will show merge commits",
            "scope": 3,
            "order": 102,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.lineHistory.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of status icons in the _Line History_ view",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.lineHistory.enabled": {
            "deprecationMessage": "Deprecated. This setting is no longer used",
            "markdownDeprecationMessage": "Deprecated. This setting is no longer used",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.views.branches.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the branch with a user-selected reference"
            ],
            "default": "branch",
            "markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) in the _Branches_ view",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "branch",
            "restricted": false
        },
        "gitlens.views.branches.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.branches.pullRequests.showForBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.branches.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.branches.branches.layout": {
            "type": "string",
            "default": "tree",
            "enum": [
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Displays branches as a list",
                "Displays branches as a tree when branch names contain slashes `/`"
            ],
            "markdownDescription": "Specifies how the _Branches_ view will display branches",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "tree",
            "restricted": false
        },
        "gitlens.sortBranchesBy": {
            "type": "string",
            "default": "date:desc",
            "enum": [
                "date:desc",
                "date:asc",
                "name:asc",
                "name:desc"
            ],
            "enumDescriptions": [
                "Sorts branches by the most recent commit date in descending order",
                "Sorts branches by the most recent commit date in ascending order",
                "Sorts branches by name in ascending order",
                "Sorts branches by name in descending order"
            ],
            "markdownDescription": "Specifies how branches are sorted in quick pick menus and views",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "date:desc",
            "restricted": false
        },
        "gitlens.views.branches.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Branches_ view will display files",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.branches.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 51,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.branches.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 52,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.branches.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Branches_ view will display file icons",
            "scope": 3,
            "order": 53,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.branches.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.branches.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.remotes.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.remotes.pullRequests.showForBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.remotes.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 12,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.remotes.branches.layout": {
            "type": "string",
            "default": "tree",
            "enum": [
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Displays branches as a list",
                "Displays branches as a tree when branch names contain slashes `/`"
            ],
            "markdownDescription": "Specifies how the _Remotes_ view will display branches",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "tree",
            "restricted": false
        },
        "gitlens.views.remotes.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Remotes_ view will display files",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.remotes.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.remotes.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.remotes.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Remotes_ view will display file icons",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.remotes.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.remotes.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.stashes.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Stashes_ view will display files",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.stashes.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.stashes.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 12,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.stashes.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Stashes_ view will display file icons",
            "scope": 3,
            "order": 13,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.stashes.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.tags.branches.layout": {
            "type": "string",
            "default": "tree",
            "enum": [
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Displays tags as a list",
                "Displays tags as a tree when tags names contain slashes `/`"
            ],
            "markdownDescription": "Specifies how the _Tags_ view will display tags",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "tree",
            "restricted": false
        },
        "gitlens.sortTagsBy": {
            "type": "string",
            "default": "date:desc",
            "enum": [
                "date:desc",
                "date:asc",
                "name:asc",
                "name:desc"
            ],
            "enumDescriptions": [
                "Sorts tags by date in descending order",
                "Sorts tags by date in ascending order",
                "Sorts tags by name in ascending order",
                "Sorts tags by name in descending order"
            ],
            "markdownDescription": "Specifies how tags are sorted in quick pick menus and views",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "date:desc",
            "restricted": false
        },
        "gitlens.views.tags.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Tags_ view will display files",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.tags.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.tags.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.tags.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Tags_ view will display file icons",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.tags.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.tags.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.worktrees.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the worktree branch with a user-selected reference"
            ],
            "default": "working",
            "markdownDescription": "Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag. etc) in the _Worktrees_ view",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "working",
            "restricted": false
        },
        "gitlens.views.worktrees.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.worktrees.pullRequests.showForBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.worktrees.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.worktrees.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Worktrees_ view will display files",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.worktrees.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 41,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.worktrees.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 42,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.worktrees.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Worktrees_ view will display file icons",
            "scope": 3,
            "order": 43,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.worktrees.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.worktrees.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.contributors.showAllBranches": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show commits from all branches in the _Contributors_ view",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.contributors.showStatistics": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.contributors.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.contributors.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.sortContributorsBy": {
            "type": "string",
            "default": "count:desc",
            "enum": [
                "count:desc",
                "count:asc",
                "date:desc",
                "date:asc",
                "name:asc",
                "name:desc"
            ],
            "enumDescriptions": [
                "Sorts contributors by commit count in descending order",
                "Sorts contributors by commit count in ascending order",
                "Sorts contributors by the most recent commit date in descending order",
                "Sorts contributors by the most recent commit date in ascending order",
                "Sorts contributors by name in ascending order",
                "Sorts contributors by name in descending order"
            ],
            "markdownDescription": "Specifies how contributors are sorted in quick pick menus and views",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "count:desc",
            "restricted": false
        },
        "gitlens.views.contributors.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Contributors_ view will display files",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.contributors.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 51,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.contributors.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 52,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.contributors.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Contributors_ view will display file icons",
            "scope": 3,
            "order": 53,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.contributors.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.contributors.reveal": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.searchAndCompare.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.searchAndCompare.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.searchAndCompare.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _Search & Compare_ view will display files",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.searchAndCompare.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.searchAndCompare.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.searchAndCompare.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _Search & Compare_ view will display file icons",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.searchAndCompare.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch",
                "working"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the current branch with a user-selected reference",
                "Compares the working tree with a user-selected reference"
            ],
            "default": "working",
            "markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "working",
            "restricted": false
        },
        "gitlens.views.workspaces.showUpstreamStatus": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the upstream status of the current branch for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.includeWorkingTree": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to include working tree file status for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 12,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.workspaces.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _GitKraken Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.pullRequests.showForBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with branches in the _GitKraken Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.pullRequests.showForCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _GitKraken Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showCommits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the commits on the current branch for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showBranches": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the branches for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showRemotes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the remotes for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 32,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showStashes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the stashes for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 33,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showTags": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the tags for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 34,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showContributors": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the contributors for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 35,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showWorktrees": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the worktrees for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 36,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.showIncomingActivity": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show the experimental incoming activity for each repository in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 37,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.workspaces.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.branches.layout": {
            "type": "string",
            "default": "tree",
            "enum": [
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Displays branches as a list",
                "Displays branches as a tree when branch names contain slashes `/`"
            ],
            "markdownDescription": "Specifies how the _GitKraken Workspaces_ view will display branches",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "tree",
            "restricted": false
        },
        "gitlens.views.workspaces.files.layout": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "list",
                "tree"
            ],
            "enumDescriptions": [
                "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.workspaces.files.threshold#` value and the number of files at each nesting level",
                "Displays files as a list",
                "Displays files as a tree"
            ],
            "markdownDescription": "Specifies how the _GitKraken Workspaces_ view will display files",
            "scope": 3,
            "order": 80,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "gitlens.views.workspaces.files.threshold": {
            "type": "number",
            "default": 5,
            "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _GitKraken Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `auto`",
            "scope": 3,
            "order": 81,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "gitlens.views.workspaces.files.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _GitKraken Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `tree` or `auto`",
            "scope": 3,
            "order": 82,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.views.workspaces.files.icon": {
            "type": "string",
            "default": "type",
            "enum": [
                "status",
                "type"
            ],
            "enumDescriptions": [
                "Shows the file's status as the icon",
                "Shows the file's type (theme icon) as the icon"
            ],
            "markdownDescription": "Specifies how the _GitKraken Workspaces_ view will display file icons",
            "scope": 3,
            "order": 83,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "type",
            "restricted": false
        },
        "gitlens.views.workspaces.compact": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show the _GitKraken Workspaces_ view in a compact display density",
            "scope": 3,
            "order": 90,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.views.workspaces.branches.showBranchComparison": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                false,
                "branch"
            ],
            "enumDescriptions": [
                "Hides the branch comparison",
                "Compares the branch with a user-selected reference"
            ],
            "default": "branch",
            "markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) under each branch in the _GitKraken Workspaces_ view",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "branch",
            "restricted": false
        },
        "gitlens.blame.toggleMode": {
            "type": "string",
            "default": "file",
            "enum": [
                "file",
                "window"
            ],
            "enumDescriptions": [
                "Toggles each file individually",
                "Toggles the window, i.e. all files at once"
            ],
            "markdownDescription": "Specifies how the file blame annotations will be toggled",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "file",
            "restricted": false
        },
        "gitlens.blame.format": {
            "type": "string",
            "default": "${message|50?} ${agoOrDate|14-}",
            "markdownDescription": "Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "${message|50?} ${agoOrDate|14-}",
            "restricted": false
        },
        "gitlens.blame.heatmap.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide a heatmap indicator in the file blame annotations",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.blame.heatmap.location": {
            "type": "string",
            "default": "right",
            "enum": [
                "left",
                "right"
            ],
            "enumDescriptions": [
                "Adds a heatmap indicator on the left edge of the file blame annotations",
                "Adds a heatmap indicator on the right edge of the file blame annotations"
            ],
            "markdownDescription": "Specifies where the heatmap indicators will be shown in the file blame annotations",
            "scope": 3,
            "order": 31,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "right",
            "restricted": false
        },
        "gitlens.blame.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images in the file blame annotations",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.blame.compact": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to compact (deduplicate) matching adjacent file blame annotations",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.blame.highlight.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to highlight lines associated with the current line",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.blame.highlight.locations": {
            "type": "array",
            "default": [
                "gutter",
                "line",
                "overview"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "gutter",
                    "line",
                    "overview"
                ],
                "enumDescriptions": [
                    "Adds an indicator to the gutter",
                    "Adds a full-line highlight background color",
                    "Adds an indicator to the scroll bar"
                ]
            },
            "minItems": 1,
            "maxItems": 3,
            "uniqueItems": true,
            "markdownDescription": "Specifies where the associated line highlights will be shown",
            "scope": 3,
            "order": 61,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "gutter",
                "line",
                "overview"
            ],
            "restricted": false
        },
        "gitlens.blame.separateLines": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether file blame annotations will be separated by a small gap",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.blame.dateFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 80,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.changes.toggleMode": {
            "type": "string",
            "default": "file",
            "enum": [
                "file",
                "window"
            ],
            "enumDescriptions": [
                "Toggles each file individually",
                "Toggles the window, i.e. all files at once"
            ],
            "markdownDescription": "Specifies how the file changes annotations will be toggled",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "file",
            "restricted": false
        },
        "gitlens.changes.locations": {
            "type": "array",
            "default": [
                "gutter",
                "line",
                "overview"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "gutter",
                    "line",
                    "overview"
                ],
                "enumDescriptions": [
                    "Adds an indicator to the gutter",
                    "Adds a full-line highlight background color",
                    "Adds an indicator to the scroll bar"
                ]
            },
            "minItems": 1,
            "maxItems": 3,
            "uniqueItems": true,
            "markdownDescription": "Specifies where the indicators of the file changes annotations will be shown",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "gutter",
                "line",
                "overview"
            ],
            "restricted": false
        },
        "gitlens.heatmap.toggleMode": {
            "type": "string",
            "default": "file",
            "enum": [
                "file",
                "window"
            ],
            "enumDescriptions": [
                "Toggles each file individually",
                "Toggles the window, i.e. all files at once"
            ],
            "markdownDescription": "Specifies how the file heatmap annotations will be toggled",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "file",
            "restricted": false
        },
        "gitlens.heatmap.locations": {
            "type": "array",
            "default": [
                "gutter",
                "line",
                "overview"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "gutter",
                    "line",
                    "overview"
                ],
                "enumDescriptions": [
                    "Adds an indicator to the gutter",
                    "Adds a full-line highlight background color",
                    "Adds an indicator to the scroll bar"
                ]
            },
            "minItems": 1,
            "maxItems": 3,
            "uniqueItems": true,
            "markdownDescription": "Specifies where the indicators of the file heatmap annotations will be shown",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "gutter",
                "line",
                "overview"
            ],
            "restricted": false
        },
        "gitlens.heatmap.fadeLines": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies the whether to fade out older lines",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.heatmap.ageThreshold": {
            "type": "number",
            "default": 90,
            "markdownDescription": "Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 90,
            "restricted": false
        },
        "gitlens.heatmap.coldColor": {
            "type": "string",
            "default": "#0a60f6",
            "markdownDescription": "Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "#0a60f6",
            "restricted": false
        },
        "gitlens.heatmap.hotColor": {
            "type": "string",
            "default": "#f66a0a",
            "markdownDescription": "Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "#f66a0a",
            "restricted": false
        },
        "gitlens.graph.defaultItemLimit": {
            "type": "number",
            "default": 500,
            "markdownDescription": "Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 500,
            "restricted": false
        },
        "gitlens.graph.pageItemLimit": {
            "type": "number",
            "default": 200,
            "markdownDescription": "Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 200,
            "restricted": false
        },
        "gitlens.graph.searchItemLimit": {
            "type": "number",
            "default": 100,
            "markdownDescription": "Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit",
            "scope": 3,
            "order": 12,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 100,
            "restricted": false
        },
        "gitlens.graph.scrollMarkers.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show markers on the scrollbar in the _Commit Graph_",
            "scope": 3,
            "order": 13,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.scrollMarkers.additionalTypes": {
            "type": "array",
            "default": [
                "localBranches",
                "stashes"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "localBranches",
                    "remoteBranches",
                    "stashes",
                    "tags"
                ],
                "enumDescriptions": [
                    "Marks the location of local branches",
                    "Marks the location of remote branches",
                    "Marks the location of stashes",
                    "Marks the location of tags"
                ]
            },
            "minItems": 0,
            "maxItems": 4,
            "uniqueItems": true,
            "markdownDescription": "Specifies additional markers to show on the scrollbar in the _Commit Graph_",
            "scope": 3,
            "order": 14,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "localBranches",
                "stashes"
            ],
            "restricted": false
        },
        "gitlens.graph.scrollRowPadding": {
            "type": "number",
            "default": 0,
            "markdownDescription": "Specifies the number of rows from the edge at which the graph will scroll when using keyboard or search to change the selected row",
            "scope": 3,
            "order": 14,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "gitlens.graph.showDetailsView": {
            "type": [
                "boolean",
                "string"
            ],
            "default": "selection",
            "enum": [
                false,
                "open",
                "selection"
            ],
            "enumDescriptions": [
                "Never shows the _Commit Details_ view automatically",
                "Shows the _Commit Details_ view automatically only when opening the _Commit Graph_",
                "Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_"
            ],
            "markdownDescription": "Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "selection",
            "restricted": false
        },
        "gitlens.graph.showGhostRefsOnRowHover": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.highlightRowsOnRefHover": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.dimMergeCommits": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to dim (deemphasize) merge commit rows in the _Commit Graph_",
            "scope": 3,
            "order": 23,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.graph.showRemoteNames": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to show remote names on remote branches in the _Commit Graph_",
            "scope": 3,
            "order": 24,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.graph.avatars": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_",
            "scope": 3,
            "order": 25,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.showUpstreamStatus": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show a local branch's upstream status in the _Commit Graph_",
            "scope": 3,
            "order": 26,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.pullRequests.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show associated pull requests on remote branches in the _Commit Graph_. Requires a connection to a supported remote service (e.g. GitHub)",
            "scope": 3,
            "order": 27,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.commitOrdering": {
            "type": "string",
            "default": "date",
            "enum": [
                "date",
                "author-date",
                "topo"
            ],
            "enumDescriptions": [
                "Shows commits in reverse chronological order of the commit timestamp",
                "Shows commits in reverse chronological order of the author timestamp",
                "Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"
            ],
            "markdownDescription": "Specifies the order by which commits will be shown on the _Commit Graph_",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "date",
            "restricted": false
        },
        "gitlens.graph.dateStyle": {
            "type": [
                "string",
                "null"
            ],
            "default": "relative",
            "enum": [
                "relative",
                "absolute"
            ],
            "enumDescriptions": [
                "e.g. 1 day ago",
                "e.g. July 25th, 2018 7:18pm"
            ],
            "markdownDescription": "Specifies how dates will be displayed in the _Commit Graph_",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "relative",
            "restricted": false
        },
        "gitlens.graph.dateFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 41,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.graph.statusBar.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the _Commit Graph_ in the status bar",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.layout": {
            "type": "string",
            "default": "panel",
            "enum": [
                "editor",
                "panel"
            ],
            "enumDescriptions": [
                "Prefer showing the Commit Graph in the editor area",
                "Prefer showing the Commit Graph in the bottom panel"
            ],
            "markdownDescription": "Specifies the preferred layout of the _Commit Graph_",
            "scope": 3,
            "order": 99,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "panel",
            "restricted": false
        },
        "gitlens.graph.minimap.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show a minimap of commit activity above the _Commit Graph_",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.graph.minimap.dataType": {
            "type": "string",
            "default": "commits",
            "enum": [
                "commits",
                "lines"
            ],
            "enumDescriptions": [
                "Shows the number of commits per day in the minimap",
                "Shows the number of lines changed per day in the minimap"
            ],
            "markdownDescription": "Specifies the data to show on the minimap in the _Commit Graph_",
            "scope": 3,
            "order": 101,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "commits",
            "restricted": false
        },
        "gitlens.graph.minimap.additionalTypes": {
            "type": "array",
            "default": [
                "localBranches",
                "stashes"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "localBranches",
                    "remoteBranches",
                    "stashes",
                    "tags"
                ],
                "enumDescriptions": [
                    "Marks the location of local branches",
                    "Marks the location of remote branches",
                    "Marks the location of stashes",
                    "Marks the location of tags"
                ]
            },
            "minItems": 0,
            "maxItems": 4,
            "uniqueItems": true,
            "markdownDescription": "Specifies additional markers to show on the minimap in the _Commit Graph_",
            "scope": 3,
            "order": 102,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "localBranches",
                "stashes"
            ],
            "restricted": false
        },
        "gitlens.graph.experimental.allowMultipleInstances": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to allow opening multiple instances of the _Commit Graph_ in the editor area",
            "scope": 3,
            "order": 110,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.focus.experimental.allowMultipleInstances": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to allow opening multiple instances of the _Focus View_",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.visualHistory.experimental.allowMultipleInstances": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to allow opening multiple instances of the _Visual File History_ in the editor area",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.visualHistory.queryLimit": {
            "type": "number",
            "default": 20,
            "markdownDescription": "Specifies the limit on the how many commits can be queried for statistics in the _Visual File History_, because of rate limits. Only applies to virtual workspaces.",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 20,
            "restricted": false
        },
        "gitlens.rebaseEditor.ordering": {
            "type": "string",
            "default": "desc",
            "enum": [
                "asc",
                "desc"
            ],
            "enumDescriptions": [
                "Shows oldest commit first",
                "Shows newest commit first"
            ],
            "markdownDescription": "Specifies how Git commits are displayed in the _Interactive Rebase Editor_",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "desc",
            "restricted": false
        },
        "gitlens.rebaseEditor.showDetailsView": {
            "type": [
                "boolean",
                "string"
            ],
            "default": "selection",
            "enum": [
                false,
                "open",
                "selection"
            ],
            "enumDescriptions": [
                "Never shows the _Commit Details_ view automatically",
                "Shows the _Commit Details_ view automatically only when opening the _Interactive Rebase Editor_",
                "Shows the _Commit Details_ view automatically when selection changes in the _Interactive Rebase Editor_"
            ],
            "markdownDescription": "Specifies when to show the _Commit Details_ view for the selected row in the _Interactive Rebase Editor_",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "selection",
            "restricted": false
        },
        "gitlens.gitCommands.sortBy": {
            "type": "string",
            "default": "usage",
            "enum": [
                "name",
                "usage"
            ],
            "enumDescriptions": [
                "Sorts commands by name",
                "Sorts commands by last used date"
            ],
            "markdownDescription": "Specifies how Git commands are sorted in the _Git Command Palette_",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "usage",
            "restricted": false
        },
        "gitlens.gitCommands.skipConfirmations": {
            "type": "array",
            "default": [
                "fetch:command",
                "stash-push:command",
                "switch:command"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "branch-create:command",
                    "branch-create:menu",
                    "co-authors:command",
                    "co-authors:menu",
                    "fetch:command",
                    "fetch:menu",
                    "pull:command",
                    "pull:menu",
                    "push:command",
                    "push:menu",
                    "stash-apply:command",
                    "stash-apply:menu",
                    "stash-pop:command",
                    "stash-pop:menu",
                    "stash-push:command",
                    "stash-push:menu",
                    "switch:command",
                    "switch:menu",
                    "tag-create:command",
                    "tag-create:menu"
                ],
                "enumDescriptions": [
                    "Skips branch create confirmations when run from a command, e.g. a view action",
                    "Skips branch create confirmations when run from the Git Command Palette",
                    "Skips co-author confirmations when run from a command, e.g. a view action",
                    "Skips co-author confirmations when run from the Git Command Palette",
                    "Skips fetch confirmations when run from a command, e.g. a view action",
                    "Skips fetch confirmations when run from the Git Command Palette",
                    "Skips pull confirmations when run from a command, e.g. a view action",
                    "Skips pull confirmations when run from the Git Command Palette",
                    "Skips push confirmations when run from a command, e.g. a view action",
                    "Skips push confirmations when run from the Git Command Palette",
                    "Skips stash apply confirmations when run from a command, e.g. a view action",
                    "Skips stash apply confirmations when run from the Git Command Palette",
                    "Skips stash pop confirmations when run from a command, e.g. a view action",
                    "Skips stash pop confirmations when run from the Git Command Palette",
                    "Skips stash push confirmations when run from a command, e.g. a view action",
                    "Skips stash push confirmations when run from the Git Command Palette",
                    "Skips switch confirmations when run from a command, e.g. a view action",
                    "Skips switch confirmations when run from the Git Command Palette",
                    "Skips tag create confirmations when run from a command, e.g. a view action",
                    "Skips tag create confirmations when run from the Git Command Palette"
                ]
            },
            "minItems": 0,
            "maxItems": 14,
            "uniqueItems": true,
            "markdownDescription": "Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "fetch:command",
                "stash-push:command",
                "switch:command"
            ],
            "restricted": false
        },
        "gitlens.gitCommands.closeOnFocusOut": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.gitCommands.search.showResultsInSideBar": {
            "type": [
                "boolean",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.gitCommands.search.matchAll": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to match all or any commit message search patterns",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.gitCommands.search.matchCase": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to match commit search patterns with or without regard to casing",
            "scope": 3,
            "order": 51,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.gitCommands.search.matchRegex": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to match commit search patterns using regular expressions",
            "scope": 3,
            "order": 52,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.gitCommands.search.showResultsInView": {
            "deprecationMessage": "Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar",
            "markdownDeprecationMessage": "Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.autolinks": {
            "type": [
                "array",
                "null"
            ],
            "default": null,
            "items": {
                "type": "object",
                "required": [
                    "prefix",
                    "url"
                ],
                "properties": {
                    "prefix": {
                        "type": "string",
                        "description": "Specifies the short prefix to use to generate autolinks for the external resource"
                    },
                    "title": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": null,
                        "description": "Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number"
                    },
                    "url": {
                        "type": "string",
                        "description": "Specifies the URL of the external resource you want to link to. Use `<num>` as the variable for the reference number"
                    },
                    "alphanumeric": {
                        "type": "boolean",
                        "description": "Specifies whether alphanumeric characters should be allowed in `<num>`",
                        "default": false
                    },
                    "ignoreCase": {
                        "type": "boolean",
                        "description": "Specifies whether case should be ignored when matching the prefix",
                        "default": false
                    }
                },
                "additionalProperties": false
            },
            "uniqueItems": true,
            "markdownDescription": "Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.integrations.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to enable rich integrations with any supported remote services",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.partners": {
            "type": [
                "object",
                "null"
            ],
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Specifies whether the partner integration should be shown"
                    }
                },
                "additionalProperties": true,
                "description": "Specifies the configuration of a partner integration"
            },
            "default": null,
            "description": "Specifies the configuration of a partner integration",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.liveshare.allowGuestAccess": {
            "type": "boolean",
            "default": true,
            "description": "Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.terminalLinks.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.terminalLinks.showDetailsView": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the _Commit Details_ view when clicking on a commit link in the integrated terminal",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.terminal.overrideGitEditor": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to use VS Code as Git's `core.editor` for Gitlens terminal commands",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.experimental.generateCommitMessagePrompt": {
            "type": "string",
            "default": "Commit messages must have a short description that is less than 50 chars followed by a newline and a more detailed description.\n- Write concisely using an informal tone and avoid specific names from the code",
            "markdownDescription": "Specifies the prompt to use to tell OpenAI how to structure or format the generated commit message",
            "scope": 3,
            "order": 1,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "Commit messages must have a short description that is less than 50 chars followed by a newline and a more detailed description.\n- Write concisely using an informal tone and avoid specific names from the code",
            "restricted": false
        },
        "gitlens.ai.experimental.provider": {
            "type": "string",
            "default": "openai",
            "enum": [
                "openai",
                "anthropic"
            ],
            "enumDescriptions": [
                "OpenAI",
                "Anthropic"
            ],
            "markdownDescription": "Specifies the AI provider to use for GitLens' experimental AI features",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "openai",
            "restricted": false
        },
        "gitlens.ai.experimental.openai.model": {
            "type": "string",
            "default": "gpt-3.5-turbo",
            "enum": [
                "gpt-3.5-turbo",
                "gpt-3.5-turbo-16k",
                "gpt-3.5-turbo-0613",
                "gpt-4",
                "gpt-4-0613",
                "gpt-4-32k",
                "gpt-4-32k-0613"
            ],
            "enumDescriptions": [
                "GPT 3.5 Turbo",
                "GPT 3.5 Turbo 16k",
                "GPT 3.5 Turbo (June 13)",
                "GPT 4",
                "GPT 4 (June 13)",
                "GPT 4 32k",
                "GPT 4 32k (June 13)"
            ],
            "markdownDescription": "Specifies the OpenAI model to use for GitLens' experimental AI features",
            "scope": 3,
            "order": 101,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "gpt-3.5-turbo",
            "restricted": false
        },
        "gitlens.ai.experimental.openai.url": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies a custom URL to use for access to an OpenAI model via Azure. Azure URLs should be in the following format: https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}",
            "scope": 3,
            "order": 102,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.ai.experimental.anthropic.model": {
            "type": "string",
            "default": "claude-v1",
            "enum": [
                "claude-v1",
                "claude-v1-100k",
                "claude-instant-v1",
                "claude-instant-v1-100k",
                "claude-2"
            ],
            "enumDescriptions": [
                "Claude v1",
                "Claude v1 100k",
                "Claude Instant v1",
                "Claude Instant v1 100k",
                "Claude 2"
            ],
            "markdownDescription": "Specifies the Anthropic model to use for GitLens' experimental AI features",
            "scope": 3,
            "order": 102,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "claude-v1",
            "restricted": false
        },
        "gitlens.defaultDateStyle": {
            "type": "string",
            "default": "relative",
            "enum": [
                "relative",
                "absolute"
            ],
            "enumDescriptions": [
                "e.g. 1 day ago",
                "e.g. July 25th, 2018 7:18pm"
            ],
            "markdownDescription": "Specifies how dates will be displayed by default",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "relative",
            "restricted": false
        },
        "gitlens.defaultDateFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.defaultDateLocale": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, 'ja-JP = Japanese, etc.",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.defaultDateShortFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 22,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.defaultTimeFormat": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.defaultDateSource": {
            "type": "string",
            "default": "authored",
            "enum": [
                "authored",
                "committed"
            ],
            "enumDescriptions": [
                "Uses the date when the changes were authored (i.e. originally written)",
                "Uses the date when the changes were committed"
            ],
            "markdownDescription": "Specifies whether commit dates should use the authored or committed date",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "authored",
            "restricted": false
        },
        "gitlens.menus": {
            "anyOf": [
                {
                    "enum": [
                        false
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "editor": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "blame": {
                                            "type": "boolean"
                                        },
                                        "clipboard": {
                                            "type": "boolean"
                                        },
                                        "compare": {
                                            "type": "boolean"
                                        },
                                        "history": {
                                            "type": "boolean"
                                        },
                                        "remote": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "editorGroup": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "blame": {
                                            "type": "boolean"
                                        },
                                        "compare": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "editorGutter": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "compare": {
                                            "type": "boolean"
                                        },
                                        "remote": {
                                            "type": "boolean"
                                        },
                                        "share": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "editorTab": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "clipboard": {
                                            "type": "boolean"
                                        },
                                        "compare": {
                                            "type": "boolean"
                                        },
                                        "history": {
                                            "type": "boolean"
                                        },
                                        "remote": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "explorer": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "clipboard": {
                                            "type": "boolean"
                                        },
                                        "compare": {
                                            "type": "boolean"
                                        },
                                        "history": {
                                            "type": "boolean"
                                        },
                                        "remote": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "ghpr": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "worktree": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scm": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "graph": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scmRepositoryInline": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "graph": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scmRepository": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "authors": {
                                            "type": "boolean"
                                        },
                                        "generateCommitMessage": {
                                            "type": "boolean"
                                        },
                                        "graph": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scmGroupInline": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "stash": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scmGroup": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "compare": {
                                            "type": "boolean"
                                        },
                                        "openClose": {
                                            "type": "boolean"
                                        },
                                        "stash": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scmItemInline": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "stash": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "scmItem": {
                            "anyOf": [
                                {
                                    "enum": [
                                        false
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "clipboard": {
                                            "type": "boolean"
                                        },
                                        "compare": {
                                            "type": "boolean"
                                        },
                                        "history": {
                                            "type": "boolean"
                                        },
                                        "remote": {
                                            "type": "boolean"
                                        },
                                        "share": {
                                            "type": "boolean"
                                        },
                                        "stash": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                }
            ],
            "default": {
                "editor": {
                    "blame": true,
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true
                },
                "editorGroup": {
                    "blame": true,
                    "compare": true
                },
                "editorGutter": {
                    "compare": true,
                    "remote": true,
                    "share": true
                },
                "editorTab": {
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true
                },
                "explorer": {
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true
                },
                "ghpr": {
                    "worktree": true
                },
                "scm": {
                    "graph": true
                },
                "scmRepositoryInline": {
                    "graph": true
                },
                "scmRepository": {
                    "authors": true,
                    "generateCommitMessage": true,
                    "graph": false
                },
                "scmGroupInline": {
                    "stash": true
                },
                "scmGroup": {
                    "compare": true,
                    "openClose": true,
                    "stash": true
                },
                "scmItemInline": {
                    "stash": false
                },
                "scmItem": {
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true,
                    "share": true,
                    "stash": true
                }
            },
            "markdownDescription": "Specifies which commands will be added to which menus",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": {
                "editor": {
                    "blame": true,
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true
                },
                "editorGroup": {
                    "blame": true,
                    "compare": true
                },
                "editorGutter": {
                    "compare": true,
                    "remote": true,
                    "share": true
                },
                "editorTab": {
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true
                },
                "explorer": {
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true
                },
                "ghpr": {
                    "worktree": true
                },
                "scm": {
                    "graph": true
                },
                "scmRepositoryInline": {
                    "graph": true
                },
                "scmRepository": {
                    "authors": true,
                    "generateCommitMessage": true,
                    "graph": false
                },
                "scmGroupInline": {
                    "stash": true
                },
                "scmGroup": {
                    "compare": true,
                    "openClose": true,
                    "stash": true
                },
                "scmItemInline": {
                    "stash": false
                },
                "scmItem": {
                    "clipboard": true,
                    "compare": true,
                    "history": true,
                    "remote": true,
                    "share": true,
                    "stash": true
                }
            },
            "restricted": false
        },
        "gitlens.keymap": {
            "type": "string",
            "default": "chorded",
            "enum": [
                "alternate",
                "chorded",
                "none"
            ],
            "enumDescriptions": [
                "Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)",
                "Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)",
                "No shortcut keys will be added"
            ],
            "markdownDescription": "Specifies the keymap to use for GitLens shortcut keys",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "chorded",
            "restricted": false
        },
        "gitlens.mode.statusBar.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to provide the active GitLens mode in the status bar",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.mode.statusBar.alignment": {
            "type": "string",
            "default": "right",
            "enum": [
                "left",
                "right"
            ],
            "enumDescriptions": [
                "Aligns to the left",
                "Aligns to the right"
            ],
            "markdownDescription": "Specifies the active GitLens mode alignment in the status bar",
            "scope": 3,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "right",
            "restricted": false
        },
        "gitlens.mode.active": {
            "type": "string",
            "markdownDescription": "Specifies the active GitLens mode, if any",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": "",
            "restricted": false
        },
        "gitlens.modes": {
            "type": "object",
            "properties": {
                "zen": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Specifies the friendly name of this user-defined mode"
                        },
                        "statusBarItemName": {
                            "type": "string",
                            "description": "Specifies the name shown in the status bar when this user-defined mode is active"
                        },
                        "description": {
                            "type": "string",
                            "description": "Specifies the description of this user-defined mode"
                        },
                        "codeLens": {
                            "type": "boolean",
                            "description": "Specifies whether to show any Git CodeLens when this user-defined mode is active"
                        },
                        "currentLine": {
                            "type": "boolean",
                            "description": "Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"
                        },
                        "hovers": {
                            "type": "boolean",
                            "description": "Specifies whether to show any hovers when this user-defined mode is active"
                        },
                        "statusBar": {
                            "type": "boolean",
                            "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
                        }
                    }
                },
                "review": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Specifies the friendly name of this user-defined mode"
                        },
                        "statusBarItemName": {
                            "type": "string",
                            "description": "Specifies the name shown in the status bar when this user-defined mode is active"
                        },
                        "description": {
                            "type": "string",
                            "description": "Specifies the description of this user-defined mode"
                        },
                        "codeLens": {
                            "type": "boolean",
                            "description": "Specifies whether to show any Git CodeLens when this user-defined mode is active"
                        },
                        "currentLine": {
                            "type": "boolean",
                            "description": "Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"
                        },
                        "hovers": {
                            "type": "boolean",
                            "description": "Specifies whether to show any hovers when this user-defined mode is active"
                        },
                        "statusBar": {
                            "type": "boolean",
                            "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
                        }
                    }
                }
            },
            "additionalProperties": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Specifies the friendly name of this user-defined mode"
                    },
                    "statusBarItemName": {
                        "type": "string",
                        "description": "Specifies the name shown in the status bar when this user-defined mode is active"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of this user-defined mode"
                    },
                    "annotations": {
                        "type": "string",
                        "enum": [
                            "blame",
                            "changes",
                            "heatmap"
                        ],
                        "enumDescriptions": [
                            "Shows the file blame annotations",
                            "Shows the file changes annotations",
                            "Shows the file heatmap annotations"
                        ],
                        "description": "Specifies which (if any) file annotations will be shown when this user-defined mode is active"
                    },
                    "codeLens": {
                        "type": "boolean",
                        "description": "Specifies whether to show any Git CodeLens when this user-defined mode is active"
                    },
                    "currentLine": {
                        "type": "boolean",
                        "description": "Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"
                    },
                    "hovers": {
                        "type": "boolean",
                        "description": "Specifies whether to show any hovers when this user-defined mode is active"
                    },
                    "statusBar": {
                        "type": "boolean",
                        "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
                    }
                }
            },
            "default": {
                "zen": {
                    "name": "Zen",
                    "statusBarItemName": "Zen",
                    "description": "for a zen-like experience, disables many visual features",
                    "codeLens": false,
                    "currentLine": false,
                    "hovers": false,
                    "statusBar": false
                },
                "review": {
                    "name": "Review",
                    "statusBarItemName": "Reviewing",
                    "description": "for reviewing code, enables many visual features",
                    "codeLens": true,
                    "currentLine": true,
                    "hovers": true
                }
            },
            "markdownDescription": "Specifies the user-defined GitLens modes",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": {
                "zen": {
                    "name": "Zen",
                    "statusBarItemName": "Zen",
                    "description": "for a zen-like experience, disables many visual features",
                    "codeLens": false,
                    "currentLine": false,
                    "hovers": false,
                    "statusBar": false
                },
                "review": {
                    "name": "Review",
                    "statusBarItemName": "Reviewing",
                    "description": "for reviewing code, enables many visual features",
                    "codeLens": true,
                    "currentLine": true,
                    "hovers": true
                }
            },
            "restricted": false
        },
        "gitlens.telemetry.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to allow GitLens to send product usage telemetry.\n\n_**Note:** For GitLens to send any telemetry BOTH this setting and VS Code telemetry must be enabled. If either one is disabled no telemetry will be sent._",
            "scope": 3,
            "order": 1,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.advanced.messages": {
            "type": "object",
            "default": {
                "suppressCommitHasNoPreviousCommitWarning": false,
                "suppressCommitNotFoundWarning": false,
                "suppressCreatePullRequestPrompt": false,
                "suppressDebugLoggingWarning": false,
                "suppressFileNotUnderSourceControlWarning": false,
                "suppressGitDisabledWarning": false,
                "suppressGitMissingWarning": false,
                "suppressGitVersionWarning": false,
                "suppressLineUncommittedWarning": false,
                "suppressNoRepositoryWarning": false,
                "suppressRebaseSwitchToTextWarning": false,
                "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": false,
                "suppressIntegrationRequestFailed500Warning": false,
                "suppressIntegrationRequestTimedOutWarning": false
            },
            "properties": {
                "suppressCommitHasNoPreviousCommitWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Commit Has No Previous Commit Warning"
                },
                "suppressCommitNotFoundWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Commit Not Found Warning"
                },
                "suppressCreatePullRequestPrompt": {
                    "type": "boolean",
                    "default": false,
                    "description": "Create Pull Request Prompt"
                },
                "suppressDebugLoggingWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Debug Logging Warning"
                },
                "suppressFileNotUnderSourceControlWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "File Not Under Source Control Warning"
                },
                "suppressGitDisabledWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Git Disabled Warning"
                },
                "suppressGitMissingWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Git Missing Warning"
                },
                "suppressGitVersionWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Git Version Warning"
                },
                "suppressLineUncommittedWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Line Uncommitted Warning"
                },
                "suppressNoRepositoryWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "No Repository Warning"
                },
                "suppressRebaseSwitchToTextWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Rebase Switch To Text Warning"
                },
                "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Integration Disconnected; Too Many Failed Requests Warning"
                },
                "suppressIntegrationRequestFailed500Warning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Integration Request Failed (500 status code) Warning"
                },
                "suppressIntegrationRequestTimedOutWarning": {
                    "type": "boolean",
                    "default": false,
                    "description": "Integration Request Timed Out Warning"
                }
            },
            "additionalProperties": false,
            "markdownDescription": "Specifies which messages should be suppressed",
            "scope": 3,
            "order": 5,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": {
                "suppressCommitHasNoPreviousCommitWarning": false,
                "suppressCommitNotFoundWarning": false,
                "suppressCreatePullRequestPrompt": false,
                "suppressDebugLoggingWarning": false,
                "suppressFileNotUnderSourceControlWarning": false,
                "suppressGitDisabledWarning": false,
                "suppressGitMissingWarning": false,
                "suppressGitVersionWarning": false,
                "suppressLineUncommittedWarning": false,
                "suppressNoRepositoryWarning": false,
                "suppressRebaseSwitchToTextWarning": false,
                "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": false,
                "suppressIntegrationRequestFailed500Warning": false,
                "suppressIntegrationRequestTimedOutWarning": false
            },
            "restricted": false
        },
        "gitlens.advanced.abbreviatedShaLength": {
            "type": "number",
            "default": 7,
            "markdownDescription": "Specifies the length of abbreviated commit SHAs",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 7,
            "restricted": false
        },
        "gitlens.advanced.abbreviateShaOnCopy": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.",
            "scope": 3,
            "order": 21,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.advanced.commitOrdering": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "enum": [
                null,
                "date",
                "author-date",
                "topo"
            ],
            "enumDescriptions": [
                "Shows commits in reverse chronological order",
                "Shows commits in reverse chronological order of the commit timestamp",
                "Shows commits in reverse chronological order of the author timestamp",
                "Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"
            ],
            "markdownDescription": "Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.advanced.blame.delayAfterEdit": {
            "type": "number",
            "default": 5000,
            "markdownDescription": "Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait",
            "scope": 3,
            "order": 42,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5000,
            "restricted": false
        },
        "gitlens.advanced.blame.sizeThresholdAfterEdit": {
            "type": "number",
            "default": 5000,
            "markdownDescription": "Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum",
            "scope": 3,
            "order": 43,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 5000,
            "restricted": false
        },
        "gitlens.advanced.similarityThreshold": {
            "type": [
                "number",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.advanced.externalDiffTool": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.advanced.externalDirectoryDiffTool": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).",
            "scope": 3,
            "order": 61,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.advanced.quickPick.closeOnFocusOut": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.advanced.maxListItems": {
            "type": "number",
            "default": 200,
            "markdownDescription": "Specifies the maximum number of items to show in a list. Use 0 to specify no maximum",
            "scope": 3,
            "order": 80,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 200,
            "restricted": false
        },
        "gitlens.advanced.maxSearchItems": {
            "type": "number",
            "default": 200,
            "markdownDescription": "Specifies the maximum number of items to show in a search. Use 0 to specify no maximum",
            "scope": 3,
            "order": 81,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": 200,
            "restricted": false
        },
        "gitlens.advanced.caching.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether git output will be cached — changing the default is not recommended",
            "scope": 3,
            "order": 90,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.debug": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies debug mode",
            "scope": 3,
            "order": 100,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.deepLinks.schemeOverride": {
            "type": [
                "boolean",
                "string"
            ],
            "default": false,
            "markdownDescription": "Specifies whether to override the default deep link scheme (vscode://) with the environment value or a specified value",
            "scope": 3,
            "order": 110,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.experimental.nativeGit": {
            "type": [
                "boolean",
                "null"
            ],
            "default": true,
            "markdownDescription": "(Experimental) Specifies whether to use Git directly for fetch/push/pull operation instead of relying on VS Code's built-in Git implementation",
            "scope": 3,
            "order": 120,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.advanced.useSymmetricDifferenceNotation": {
            "deprecationMessage": "Deprecated. This setting is no longer used",
            "markdownDescription": "Deprecated. This setting is no longer used",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "gitlens.showWelcomeOnInstall": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the Welcome experience on first install",
            "scope": 3,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.showWhatsNewAfterUpgrades": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to show the What's New notification after upgrading to new feature releases",
            "scope": 3,
            "order": 20,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.outputLevel": {
            "type": "string",
            "default": "errors",
            "enum": [
                "silent",
                "errors",
                "verbose",
                "debug"
            ],
            "enumDescriptions": [
                "Logs nothing",
                "Logs only errors",
                "Logs all errors, warnings, and messages",
                "Logs all errors, warnings, and messages with extra context useful for debugging"
            ],
            "markdownDescription": "Specifies how much (if any) output will be sent to the GitLens output channel",
            "scope": 3,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "errors",
            "restricted": false
        },
        "gitlens.defaultGravatarsStyle": {
            "type": "string",
            "default": "robohash",
            "enum": [
                "identicon",
                "mp",
                "monsterid",
                "retro",
                "robohash",
                "wavatar"
            ],
            "enumDescriptions": [
                "A geometric pattern",
                "A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)",
                "A monster with different colors, faces, etc",
                "8-bit arcade-style pixelated faces",
                "A robot with different colors, faces, etc",
                "A face with differing features and backgrounds"
            ],
            "markdownDescription": "Specifies the style of the gravatar default (fallback) images",
            "scope": 3,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "robohash",
            "restricted": false
        },
        "gitlens.fileAnnotations.command": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "enum": [
                null,
                "blame",
                "heatmap",
                "changes"
            ],
            "enumDescriptions": [
                "Shows a menu to choose which file annotations to toggle",
                "Toggles file blame annotations",
                "Toggles file heatmap annotations",
                "Toggles file changes annotations"
            ],
            "markdownDescription": "Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations",
            "scope": 3,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.proxy": {
            "type": [
                "object",
                "null"
            ],
            "default": null,
            "items": {
                "type": "object",
                "required": [
                    "url",
                    "strictSSL"
                ],
                "properties": {
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": null,
                        "description": "Specifies the URL of the proxy server to use"
                    },
                    "strictSSL": {
                        "type": "boolean",
                        "description": "Specifies whether the proxy server certificate should be verified against the list of supplied CAs",
                        "default": true
                    }
                },
                "additionalProperties": false
            },
            "uniqueItems": true,
            "description": "Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings",
            "scope": 3,
            "order": 55,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.plusFeatures.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to hide or show features that require a trial or paid plan and are not accessible given the opened repositories and current trial or plan",
            "scope": 3,
            "order": 60,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.virtualRepositories.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to enable virtual repositories support",
            "scope": 3,
            "order": 70,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.insiders": {
            "deprecationMessage": "Deprecated. Use the pre-release edition of GitLens instead",
            "markdownDeprecationMessage": "Deprecated. Use the pre-release of GitLens instead",
            "scope": 3,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": null,
            "restricted": false
        },
        "prettier.disableLanguages": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "deprecationMessage": "This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.",
            "markdownDescription": "A list of languages IDs to disable this extension on.",
            "scope": 3,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "default": [],
            "restricted": false
        },
        "prettier.documentSelectors": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.",
            "scope": 3,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "default": [],
            "restricted": true
        },
        "github.copilot.advanced": {
            "type": "object",
            "title": "Advanced Settings",
            "properties": {
                "secret_key": {
                    "type": "string",
                    "default": "",
                    "description": "Secret API key"
                },
                "length": {
                    "type": "integer",
                    "default": 500,
                    "description": "Length of code to generate in tokens"
                },
                "temperature": {
                    "type": "string",
                    "default": "",
                    "description": "Override sampling temperature (range 0.0 - 1.0)"
                },
                "top_p": {
                    "type": "number",
                    "default": 1,
                    "description": "Top probability mass to consider"
                },
                "stops": {
                    "type": "object",
                    "default": {
                        "*": [
                            "\n\n\n"
                        ],
                        "python": [
                            "\ndef ",
                            "\nclass ",
                            "\nif ",
                            "\n\n#"
                        ]
                    },
                    "description": "Configure per-language stop sequences"
                },
                "indentationMode": {
                    "type": "object",
                    "default": {
                        "python": false,
                        "javascript": false,
                        "javascriptreact": false,
                        "jsx": false,
                        "typescript": false,
                        "typescriptreact": false,
                        "go": false,
                        "ruby": false,
                        "*": true
                    },
                    "markdownDescription": "Enable or disable indentation block termination for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). Set to 'clientandserver' to run both parser-based and indent-based termination."
                },
                "inlineSuggestCount": {
                    "type": "integer",
                    "default": 3,
                    "description": "Number of inline suggestions to fetch"
                },
                "listCount": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of solutions to list in Open GitHub Copilot"
                },
                "authProvider": {
                    "type": "string",
                    "enum": [
                        "github",
                        "github-enterprise"
                    ],
                    "enumDescriptions": [
                        "GitHub.com",
                        "GitHub Enterprise"
                    ],
                    "default": "github",
                    "description": "The GitHub identity to use for Copilot"
                },
                "debug.showScores": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show scores in sorted solutions"
                },
                "debug.overrideEngine": {
                    "type": "string",
                    "default": "",
                    "description": "Override engine name"
                },
                "debug.overrideProxyUrl": {
                    "type": "string",
                    "default": "",
                    "description": "Override GitHub authentication proxy full URL"
                },
                "debug.testOverrideProxyUrl": {
                    "type": "string",
                    "default": "",
                    "description": "Override GitHub authentication proxy URL when running tests"
                },
                "debug.overrideCapiUrl": {
                    "type": "string",
                    "default": "",
                    "description": "Override GitHub Copilot API full URL"
                },
                "debug.testOverrideCapiUrl": {
                    "type": "string",
                    "default": "",
                    "description": "Override GitHub Copilot API URL when running tests"
                },
                "debug.filterLogCategories": {
                    "type": "array",
                    "default": [],
                    "description": "Show only log categories listed in this setting. If an array is empty, show all loggers"
                }
            },
            "scope": 3,
            "source": {
                "id": "GitHub.copilot",
                "displayName": "GitHub Copilot"
            },
            "default": {},
            "restricted": false
        },
        "github.copilot.enable": {
            "type": "object",
            "default": {
                "*": true,
                "plaintext": false,
                "markdown": false,
                "scminput": false
            },
            "additionalProperties": "boolean",
            "markdownDescription": "Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)",
            "scope": 3,
            "source": {
                "id": "GitHub.copilot",
                "displayName": "GitHub Copilot"
            },
            "defaultDefaultValue": {
                "*": true,
                "plaintext": false,
                "markdown": false,
                "scminput": false
            },
            "restricted": false
        },
        "github.copilot.inlineSuggest.enable": {
            "type": "boolean",
            "default": true,
            "deprecationMessage": "Deprecated: Please use github.copilot.editor.enableAutoCompletions instead.",
            "description": "Show inline suggestions",
            "scope": 3,
            "source": {
                "id": "GitHub.copilot",
                "displayName": "GitHub Copilot"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "github.copilot.editor.enableCodeActions": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable copilot code actions",
            "scope": 3,
            "source": {
                "id": "GitHub.copilot-chat",
                "displayName": "GitHub Copilot Chat"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "github.copilot.editor.iterativeFixing": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable iterative fixing of diagnostics",
            "scope": 3,
            "source": {
                "id": "GitHub.copilot-chat",
                "displayName": "GitHub Copilot Chat"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubPullRequests.pullRequestTitle": {
            "deprecationMessage": "The pull request title now uses the same defaults as GitHub, and can be edited before create.",
            "type": "string",
            "enum": [
                "commit",
                "branch",
                "custom",
                "ask"
            ],
            "enumDescriptions": [
                "Use the latest commit message",
                "Use the branch name",
                "Specify a custom title",
                "Ask which of the above methods to use"
            ],
            "default": "ask",
            "description": "The title used when creating pull requests.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "ask",
            "restricted": false
        },
        "githubPullRequests.pullRequestDescription": {
            "type": "string",
            "enum": [
                "template",
                "commit"
            ],
            "enumDescriptions": [
                "Use a pull request template and commit description, or just use the commit description if no templates were found",
                "Use the latest commit message only"
            ],
            "default": "template",
            "description": "The description used when creating pull requests.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "template",
            "restricted": false
        },
        "githubPullRequests.defaultCreateOption": {
            "type": "string",
            "enum": [
                "lastUsed",
                "create",
                "createDraft",
                "createAutoMerge"
            ],
            "markdownEnumDescriptions": [
                "The most recently used create option.",
                "The pull request will be created.",
                "The pull request will be created as a draft.",
                "The pull request will be created with auto-merge enabled. The merge method selected will be the default for the repo or the value of `githubPullRequests.defaultMergeMethod` if set."
            ],
            "default": "lastUsed",
            "description": "The create option that the \"Create\" button will default to when creating a pull request.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "lastUsed",
            "restricted": false
        },
        "githubPullRequests.createDraft": {
            "type": "boolean",
            "default": false,
            "deprecationMessage": "Use the setting 'githubPullRequests.defaultCreateMethod' instead.",
            "description": "Whether the \"Draft\" checkbox will be checked by default when creating a pull request.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "githubPullRequests.logLevel": {
            "type": "string",
            "enum": [
                "info",
                "debug",
                "off"
            ],
            "default": "info",
            "description": "Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.",
            "markdownDeprecationMessage": "Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command. You can set the log level for the current session and also the default log level from there.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "info",
            "restricted": false,
            "deprecationMessage": "Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command. You can set the log level for the current session and also the default log level from there."
        },
        "githubPullRequests.remotes": {
            "type": "array",
            "default": [
                "origin",
                "upstream"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "List of remotes, by name, to fetch pull requests from.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [
                "origin",
                "upstream"
            ],
            "restricted": false
        },
        "githubPullRequests.includeRemotes": {
            "type": "string",
            "enum": [
                "default",
                "all"
            ],
            "default": "default",
            "deprecationMessage": "The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.",
            "description": "By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "githubPullRequests.defaultMergeMethod": {
            "type": "string",
            "enum": [
                "merge",
                "squash",
                "rebase"
            ],
            "default": "merge",
            "description": "The method to use when merging pull requests.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "merge",
            "restricted": false
        },
        "githubPullRequests.showInSCM": {
            "type": "boolean",
            "default": false,
            "deprecationMessage": "This setting is deprecated. Views can now be dragged to any location.",
            "description": "When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "githubPullRequests.notifications": {
            "type": "string",
            "enum": [
                "pullRequests",
                "off"
            ],
            "default": "off",
            "description": "If GitHub notifications should be shown to the user.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "githubPullRequests.fileListLayout": {
            "type": "string",
            "enum": [
                "flat",
                "tree"
            ],
            "default": "tree",
            "description": "The layout to use when displaying changed files list.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "tree",
            "restricted": false
        },
        "githubPullRequests.defaultDeletionMethod.selectLocalBranch": {
            "type": "boolean",
            "default": true,
            "description": "When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubPullRequests.defaultDeletionMethod.selectRemote": {
            "type": "boolean",
            "default": true,
            "description": "When true, the option to delete the remote will be selected by default when deleting a branch from a pull request.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubPullRequests.terminalLinksHandler": {
            "type": "string",
            "enum": [
                "github",
                "vscode",
                "ask"
            ],
            "enumDescriptions": [
                "Create the pull request on GitHub",
                "Create the pull request in VS Code",
                "Ask which method to use"
            ],
            "default": "ask",
            "description": "Default handler for terminal links.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "ask",
            "restricted": false
        },
        "githubPullRequests.createOnPublishBranch": {
            "type": "string",
            "enum": [
                "never",
                "ask"
            ],
            "enumDescriptions": [
                "Never create a pull request when a branch is published.",
                "Ask if you want to create a pull request when a branch is published."
            ],
            "default": "ask",
            "description": "Create a pull request when a branch is published.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "ask",
            "restricted": false
        },
        "githubPullRequests.commentExpandState": {
            "type": "string",
            "enum": [
                "expandUnresolved",
                "collapseAll"
            ],
            "enumDescriptions": [
                "All unresolved comments will be expanded.",
                "All comments will be collapsed"
            ],
            "default": "expandUnresolved",
            "description": "Controls whether comments are expanded when a document with comments is opened.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "expandUnresolved",
            "restricted": false
        },
        "githubPullRequests.useReviewMode": {
            "type": "object",
            "description": "Choose which pull request states will use review mode. \"Open\" pull requests will always use review mode.",
            "additionalProperties": false,
            "properties": {
                "merged": {
                    "type": "boolean",
                    "description": "Use review mode for merged pull requests.",
                    "default": true
                },
                "closed": {
                    "type": "boolean",
                    "description": "Use review mode for closed pull requests. Merged pull requests are not considered \"closed\".",
                    "default": false
                }
            },
            "required": [
                "merged",
                "closed"
            ],
            "default": {
                "merged": true,
                "closed": false
            },
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": {
                "merged": true,
                "closed": false
            },
            "restricted": false
        },
        "githubPullRequests.assignCreated": {
            "type": "string",
            "description": "All pull requests created with this extension will be assigned to this user. To assign to yourself, use the '${user}' variable.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "default": "",
            "restricted": false
        },
        "githubPullRequests.pushBranch": {
            "type": "string",
            "enum": [
                "prompt",
                "always"
            ],
            "default": "prompt",
            "enumDescriptions": [
                "Prompt to push the branch when creating a PR and the \"from\" branch is not available on the remote.",
                "Always push the branch when creating a PR and the \"from\" branch is not available on the remote."
            ],
            "description": "Push the \"from\" branch when creating a PR and the \"from\" branch is not available on the remote.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "githubPullRequests.pullBranch": {
            "type": "string",
            "enum": [
                "prompt",
                "never",
                "always"
            ],
            "default": "prompt",
            "markdownEnumDescriptions": [
                "Prompt to pull a PR branch when changes are detected in the PR.",
                "Never pull a PR branch when changes are detected in the PR.",
                "Always pull a PR branch when changes are detected in the PR. When `\"git.autoStash\": true` this will instead `prompt` to prevent unexpected file changes."
            ],
            "description": "Pull changes from the remote when a PR branch is checked out locally. Changes are detected when the PR is manually refreshed and during periodic background updates.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "githubPullRequests.ignoredPullRequestBranches": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string",
                "description": "Branch name"
            },
            "description": "Prevents branches that are associated with a pull request from being automatically detected. This will prevent review mode from being entered on these branches.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "githubPullRequests.overrideDefaultBranch": {
            "type": "string",
            "description": "The default branch for a repository is set on github.com. With this setting, you can override that default with another branch.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "default": "",
            "restricted": false
        },
        "githubPullRequests.postCreate": {
            "type": "string",
            "enum": [
                "none",
                "openOverview",
                "checkoutDefaultBranch"
            ],
            "description": "The action to take after creating a pull request.",
            "default": "openOverview",
            "enumDescriptions": [
                "No action",
                "Open the overview page of the pull request",
                "Checkout the default branch of the repository"
            ],
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "openOverview",
            "restricted": false
        },
        "githubPullRequests.defaultCommentType": {
            "type": "string",
            "enum": [
                "single",
                "review"
            ],
            "default": "single",
            "description": "The default comment type to use when submitting a comment and there is no active review",
            "enumDescriptions": [
                "Submits the comment as a single comment that will be immediately visible to other users",
                "Submits the comment as a review comment that will be visible to other users once the review is submitted"
            ],
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "single",
            "restricted": false
        },
        "githubPullRequests.quickDiff": {
            "type": "boolean",
            "description": "Enables quick diff in the editor gutter for checked-out pull requests. Requires a reload to take effect",
            "default": false,
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "githubPullRequests.setAutoMerge": {
            "type": "boolean",
            "description": "Checks the \"Auto-merge\" checkbox in the \"Create Pull Request\" view.",
            "deprecationMessage": "Use the setting 'githubPullRequests.defaultCreateMethod' instead.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "githubPullRequests.pullPullRequestBranchBeforeCheckout": {
            "type": "boolean",
            "description": "Pulls pull request before checkout",
            "default": true,
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubPullRequests.upstreamRemote": {
            "type": "string",
            "enum": [
                "add",
                "never"
            ],
            "markdownDescription": "Controls whether an `upstream` remote is automatically added for forks",
            "markdownEnumDescriptions": [
                "An `upstream` remote will be automatically added for forks",
                "An `upstream` remote will never be automatically added for forks"
            ],
            "default": "add",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "add",
            "restricted": false
        },
        "githubIssues.ignoreMilestones": {
            "type": "array",
            "default": [],
            "description": "An array of milestones titles to never show issues from.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "githubIssues.createIssueTriggers": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "String that enables the 'Create issue from comment' code action. Should not contain whitespace."
            },
            "default": [
                "TODO",
                "todo",
                "BUG",
                "FIXME",
                "ISSUE",
                "HACK"
            ],
            "description": "Strings that will cause the 'Create issue from comment' code action to show.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [
                "TODO",
                "todo",
                "BUG",
                "FIXME",
                "ISSUE",
                "HACK"
            ],
            "restricted": false
        },
        "githubIssues.createInsertFormat": {
            "type": "string",
            "enum": [
                "number",
                "url"
            ],
            "default": "number",
            "description": "Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "number",
            "restricted": false
        },
        "githubIssues.issueCompletions.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether completion suggestions are shown for issues.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubIssues.userCompletions.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether completion suggestions are shown for users.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubIssues.ignoreCompletionTrigger": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "Language that issue completions should not trigger on '#'."
            },
            "default": [
                "coffeescript",
                "diff",
                "dockerfile",
                "dockercompose",
                "ignore",
                "ini",
                "julia",
                "makefile",
                "perl",
                "powershell",
                "python",
                "r",
                "ruby",
                "shellscript",
                "yaml"
            ],
            "description": "Languages that the '#' character should not be used to trigger issue completion suggestions.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [
                "coffeescript",
                "diff",
                "dockerfile",
                "dockercompose",
                "ignore",
                "ini",
                "julia",
                "makefile",
                "perl",
                "powershell",
                "python",
                "r",
                "ruby",
                "shellscript",
                "yaml"
            ],
            "restricted": false
        },
        "githubIssues.ignoreUserCompletionTrigger": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "Language that user completions should not trigger on '@'."
            },
            "default": [
                "python"
            ],
            "description": "Languages that the '@' character should not be used to trigger user completion suggestions.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [
                "python"
            ],
            "restricted": false
        },
        "githubIssues.issueBranchTitle": {
            "type": "string",
            "default": "${user}/issue${issueNumber}",
            "markdownDescription": "Advanced settings for the name of the branch that is created when you start working on an issue. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters (https://git-scm.com/docs/git-check-ref-format) removed",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "${user}/issue${issueNumber}",
            "restricted": false
        },
        "githubIssues.useBranchForIssues": {
            "type": "string",
            "enum": [
                "on",
                "off",
                "prompt"
            ],
            "enumDescriptions": [
                "A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.",
                "A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.",
                "A prompt will show for setting the name of the branch that will be created and checked out."
            ],
            "default": "on",
            "description": "Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `#githubIssues.issueBranchTitle#`.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "on",
            "restricted": false
        },
        "githubIssues.issueCompletionFormatScm": {
            "type": "string",
            "default": "${issueTitle} ${issueNumberLabel}",
            "markdownDescription": "Sets the format of issue completions in the SCM inputbox. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "${issueTitle} ${issueNumberLabel}",
            "restricted": false
        },
        "githubIssues.workingIssueFormatScm": {
            "type": "string",
            "default": "${issueTitle} \nFixes ${issueNumberLabel}",
            "markdownDescription": "Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} \nFixes #${issueNumber}`",
            "editPresentation": "multilineText",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "${issueTitle} \nFixes ${issueNumberLabel}",
            "restricted": false
        },
        "githubIssues.assignWhenWorking": {
            "type": "boolean",
            "default": true,
            "description": "Assigns the issue you're working on to you. Only applies when the issue you're working on is in a repo you currently have open.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubPullRequests.focusedMode": {
            "properties": {
                "oneOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "type": "string"
                    }
                ]
            },
            "enum": [
                "firstDiff",
                "overview",
                false
            ],
            "default": "firstDiff",
            "description": "The layout to use when a pull request is checked out. Set to false to prevent layout changes.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": "firstDiff",
            "restricted": false
        },
        "githubPullRequests.showPullRequestNumberInTree": {
            "type": "boolean",
            "default": false,
            "description": "Shows the pull request number in the tree view.",
            "scope": 3,
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlab.debug": {
            "type": "boolean",
            "default": false,
            "description": "Turning on debug mode turns on better stack trace resolution (source maps) and shows more detailed logs. Restart the extension after enabling this option.",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlab.aiAssistedCodeSuggestions.enabled": {
            "description": "Enable code completion (Beta)",
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlab.aiAssistedCodeSuggestions.preferredAccount": {
            "description": "GitLab account to use for code completion",
            "type": "string",
            "default": null,
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlab.showStatusBarLinks": {
            "type": "boolean",
            "default": true,
            "description": "Display all GitLab-related links in the status bar (requires restarting Visual Studio Code)",
            "deprecationMessage": "To hide an item from the status bar, you should right-click the item in Visual Studio Code.",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlab.showIssueLinkOnStatusBar": {
            "type": "boolean",
            "default": true,
            "description": "Display the GitLab issue link in the status bar",
            "deprecationMessage": "To hide an item from the status bar, you should right-click the item in Visual Studio Code.",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlab.showMrStatusOnStatusBar": {
            "type": "boolean",
            "default": true,
            "description": "Display the GitLab merge request status in the status bar",
            "deprecationMessage": "To hide an item from the status bar, you should right-click the item in Visual Studio Code.",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlab.ca": {
            "type": "string",
            "default": null,
            "description": "Custom CA file to use (example: /etc/ssl/certs/ca-certificates.crt)",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlab.cert": {
            "type": "string",
            "default": null,
            "description": "Custom Certificate file to use (example: /etc/ssl/certs/certificate.crt)",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlab.certKey": {
            "type": "string",
            "default": null,
            "description": "Custom Certificate Key file to use (example: /etc/ssl/certs/certificateKey.key)",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlab.ignoreCertificateErrors": {
            "type": "boolean",
            "default": false,
            "description": "Ignore TLS/SSL certificate errors when calling the GitLab API",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlab.pipelineGitRemoteName": {
            "type": "string",
            "default": null,
            "description": "Name of the git remote to use in order to locate the Gitlab project for your pipeline. Keep empty for default",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlab.showPipelineUpdateNotifications": {
            "type": "boolean",
            "default": false,
            "description": "Show notification in VSCode when pipeline status changed",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlab.showProjectMergeRequests": {
            "type": "boolean",
            "default": true,
            "description": "Enable the \"All Project Merge Requests\" sidebar pane",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlab.customQueries": {
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "title": "Custom GitLab Query",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The label to show in the GitLab panel"
                    },
                    "maxResults": {
                        "type": "number",
                        "description": "The maximum number of results to show",
                        "default": 20,
                        "maximum": 100,
                        "minimum": 1
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Return issues ordered by the selected value. It is not applicable for vulnerabilities",
                        "enum": [
                            "created_at",
                            "updated_at",
                            "priority",
                            "due_date",
                            "relative_position",
                            "label_priority",
                            "milestone_due",
                            "popularity",
                            "weight"
                        ],
                        "default": "created_at"
                    },
                    "sort": {
                        "type": "string",
                        "description": "Return issues sorted in ascending or descending order. It is not applicable for vulnerabilities",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "default": " desc"
                    },
                    "scope": {
                        "type": "string",
                        "description": "Return Gitlab items for the given scope. It is not applicable for epics. \"assigned_to_me\" and \"created_by_me\" are not applicable for vulnerabilities. \"dismissed\" is not applicable for issues and merge requests",
                        "enum": [
                            "assigned_to_me",
                            "created_by_me",
                            "dismissed",
                            "all"
                        ],
                        "default": "all"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of GitLab items to return. If snippets is selected, none of the other filter will work. Epics will work only on GitLab ultimate/gold.",
                        "enum": [
                            "issues",
                            "merge_requests",
                            "epics",
                            "snippets",
                            "vulnerabilities"
                        ],
                        "default": "merge_requests"
                    },
                    "noItemText": {
                        "type": "string",
                        "description": "The text to show if the query returns no items",
                        "default": "No items found."
                    },
                    "state": {
                        "type": "string",
                        "description": "Return \"all\" issues or just those that are \"opened\" or \"closed\". It is not applicable for vulnerabilities",
                        "enum": [
                            "all",
                            "opened",
                            "closed"
                        ],
                        "default": "opened"
                    },
                    "labels": {
                        "type": "array",
                        "description": "Array of label names, Gitlab item must have all labels to be returned. \"None\" lists all GitLab items with no labels. \"Any\" lists all GitLab issues with at least one label. Predefined names are case-insensitive. It is not applicable for vulnerabilities",
                        "items": {
                            "type": "string"
                        }
                    },
                    "milestone": {
                        "type": "string",
                        "description": "The milestone title. \"None\" lists all GitLab items with no milestone. \"Any\" lists all GitLab items that have an assigned milestone. It is not applicable for epics and vulnerabilities"
                    },
                    "author": {
                        "type": "string",
                        "description": "Return GitLab items created by the given username. It is not applicable for vulnerabilities"
                    },
                    "assignee": {
                        "type": "string",
                        "description": "Returns GitLab items assigned to the given username. \"None\" returns unassigned GitLab items. \"Any\" returns GitLab items with an assignee. It is not applicable for epics and vulnerabilities"
                    },
                    "search": {
                        "type": "string",
                        "description": "Search GitLab items against their title and description. It is not applicable for vulnerabilities"
                    },
                    "searchIn": {
                        "type": "string",
                        "description": "Modify the scope of the search attribute. It is not applicable for epics and vulnerabilities",
                        "enum": [
                            "all",
                            "title",
                            "description"
                        ],
                        "default": "all"
                    },
                    "createdAfter": {
                        "type": "string",
                        "format": "date",
                        "description": "Return GitLab items created after the given date. ISO 8601 formatted, e.g. 2016-03-11T03:45:40Z. It is not applicable for vulnerabilities"
                    },
                    "createdBefore": {
                        "type": "string",
                        "format": "date",
                        "description": "Return GitLab items created before the given date. ISO 8601 formatted, e.g. 2016-03-11T03:45:40Z. It is not applicable for vulnerabilities"
                    },
                    "updatedAfter": {
                        "type": "string",
                        "format": "date",
                        "description": "Return GitLab items updated after the given date. ISO 8601 formatted, e.g. 2016-03-11T03:45:40Z. It is not applicable for vulnerabilities"
                    },
                    "updatedBefore": {
                        "type": "string",
                        "format": "date",
                        "description": "Return GitLab items updated before the given date. ISO 8601 formatted, e.g. 2016-03-11T03:45:40Z. It is not applicable for vulnerabilities"
                    },
                    "wip": {
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "description": "Filter merge requests against their wip status. \"yes\" to return only WIP merge requests, \"no\" to return non WIP merge requests. Works only with merge requests",
                        "default": "no"
                    },
                    "confidential": {
                        "type": "boolean",
                        "description": "Filter confidential or public issues. Works only with issues",
                        "default": false
                    },
                    "excludeLabels": {
                        "type": "array",
                        "description": "Array of label names, Gitlab item must not have to be returned. Predefined names are case-insensitive. Works only with issues",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excludeMilestone": {
                        "type": "string",
                        "description": "The milestone title to exclude. Works only with issues"
                    },
                    "excludeAuthor": {
                        "type": "string",
                        "description": "Return GitLab items not created by the given username. Works only with issues"
                    },
                    "excludeAssignee": {
                        "type": "string",
                        "description": "Returns GitLab items not assigned to the given username. Works only with issues"
                    },
                    "excludeSearch": {
                        "type": "string",
                        "description": "Search GitLab items that doesn't have the search key in their title or description. Works only with issues"
                    },
                    "excludeSearchIn": {
                        "type": "string",
                        "description": "Modify the scope of the excludeSearch attribute. Works only with issues",
                        "enum": [
                            "all",
                            "title",
                            "description"
                        ],
                        "default": "all"
                    },
                    "reportTypes": {
                        "type": "array",
                        "description": "Returns vulnerabilities belonging to specified report types. Works only with vulnerabilities",
                        "items": {
                            "type": "string",
                            "enum": [
                                "sast",
                                "dast",
                                "dependency_scanning",
                                "container_scanning"
                            ]
                        }
                    },
                    "severityLevels": {
                        "type": "array",
                        "description": "Returns vulnerabilities belonging to specified severity levels. Defaults to all. Works only with vulnerabilities",
                        "items": {
                            "type": "string",
                            "enum": [
                                "undefined",
                                "info",
                                "unknown",
                                "low",
                                "medium",
                                "high",
                                "critical"
                            ]
                        }
                    },
                    "confidenceLevels": {
                        "type": "array",
                        "description": "Returns vulnerabilities belonging to specified confidence levels. Defaults to all. Works only with vulnerabilities",
                        "items": {
                            "type": "string",
                            "enum": [
                                "undefined",
                                "ignore",
                                "unknown",
                                "experimental",
                                "low",
                                "medium",
                                "high",
                                "confirmed"
                            ]
                        }
                    },
                    "reviewer": {
                        "type": "string",
                        "description": "Returns GitLab Merge Requests assigned for review to the given username. When set to \"<current_user>\", the extension uses the current user's username."
                    }
                }
            },
            "default": [
                {
                    "name": "Issues assigned to me",
                    "type": "issues",
                    "scope": "assigned_to_me",
                    "state": "opened",
                    "noItemText": "There is no issue assigned to you."
                },
                {
                    "name": "Issues created by me",
                    "type": "issues",
                    "scope": "created_by_me",
                    "state": "opened",
                    "noItemText": "There is no issue created by you."
                },
                {
                    "name": "Merge requests assigned to me",
                    "type": "merge_requests",
                    "scope": "assigned_to_me",
                    "state": "opened",
                    "noItemText": "There is no MR assigned to you."
                },
                {
                    "name": "Merge requests I'm reviewing",
                    "type": "merge_requests",
                    "reviewer": "<current_user>",
                    "state": "opened",
                    "noItemText": "There is no MR for you to review."
                },
                {
                    "name": "Merge requests created by me",
                    "type": "merge_requests",
                    "scope": "created_by_me",
                    "state": "opened",
                    "noItemText": "There is no MR created by you."
                },
                {
                    "name": "All project merge requests",
                    "type": "merge_requests",
                    "scope": "all",
                    "state": "opened",
                    "noItemText": "The project has no merge requests"
                }
            ],
            "description": "Custom views in the GitLab panel",
            "scope": 3,
            "source": {
                "id": "GitLab.gitlab-workflow",
                "displayName": "GitLab Workflow"
            },
            "defaultDefaultValue": [
                {
                    "name": "Issues assigned to me",
                    "type": "issues",
                    "scope": "assigned_to_me",
                    "state": "opened",
                    "noItemText": "There is no issue assigned to you."
                },
                {
                    "name": "Issues created by me",
                    "type": "issues",
                    "scope": "created_by_me",
                    "state": "opened",
                    "noItemText": "There is no issue created by you."
                },
                {
                    "name": "Merge requests assigned to me",
                    "type": "merge_requests",
                    "scope": "assigned_to_me",
                    "state": "opened",
                    "noItemText": "There is no MR assigned to you."
                },
                {
                    "name": "Merge requests I'm reviewing",
                    "type": "merge_requests",
                    "reviewer": "<current_user>",
                    "state": "opened",
                    "noItemText": "There is no MR for you to review."
                },
                {
                    "name": "Merge requests created by me",
                    "type": "merge_requests",
                    "scope": "created_by_me",
                    "state": "opened",
                    "noItemText": "There is no MR created by you."
                },
                {
                    "name": "All project merge requests",
                    "type": "merge_requests",
                    "scope": "all",
                    "state": "opened",
                    "noItemText": "The project has no merge requests"
                }
            ],
            "restricted": false
        },
        "go.showWelcome": {
            "type": "boolean",
            "default": true,
            "description": "Specifies whether to show the Welcome experience on first install",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.coverOnTestPackage": {
            "type": "boolean",
            "default": true,
            "description": "If true, shows test coverage when Go: Test Package command is run.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.coverOnSingleTest": {
            "type": "boolean",
            "default": false,
            "description": "If true, shows test coverage when Go: Test Function at cursor command is run.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.coverOnSingleTestFile": {
            "type": "boolean",
            "default": false,
            "description": "If true, shows test coverage when Go: Test Single File command is run.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.testExplorer.enable": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "description": "Enable the Go test explorer",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.testExplorer.showOutput": {
            "type": "boolean",
            "default": true,
            "description": "Open the test output terminal when a test run is started.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.useLanguageServer": {
            "type": "boolean",
            "default": true,
            "description": "Enable intellisense, code navigation, refactoring, formatting & diagnostics for Go. The features are powered by the Go language server \"gopls\".",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.languageServerFlags": {
            "type": "array",
            "default": [],
            "description": "Flags like -rpc.trace and -logfile to be used while running the language server.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "go.trace.server": {
            "type": "string",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Trace the communication between VS Code and the Go language server.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "go.toolsManagement.checkForUpdates": {
            "type": "string",
            "default": "proxy",
            "enum": [
                "proxy",
                "local",
                "off"
            ],
            "enumDescriptions": [
                "keeps notified of new releases by checking the Go module proxy (GOPROXY)",
                "checks only the minimum tools versions required by the extension",
                "completely disables version check (not recommended)"
            ],
            "markdownDescription": "Specify whether to prompt about new versions of Go and the Go tools (currently, only `gopls`) the extension depends on",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "proxy",
            "restricted": false
        },
        "go.useGoProxyToCheckForToolUpdates": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, the extension automatically checks the Go proxy if there are updates available for Go and the Go tools (at present, only gopls) it depends on and prompts the user accordingly",
            "markdownDeprecationMessage": "Use `go.toolsManagement.checkForUpdates` instead.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false,
            "deprecationMessage": "Use `go.toolsManagement.checkForUpdates` instead."
        },
        "go.playground": {
            "type": "object",
            "properties": {
                "openbrowser": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to open the created Go Playground in the default browser"
                },
                "share": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to make the created Go Playground shareable"
                },
                "run": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to run the created Go Playground after creation"
                }
            },
            "description": "The flags configured here will be passed through to command `goplay`",
            "additionalProperties": false,
            "default": {
                "openbrowser": true,
                "share": true,
                "run": true
            },
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "openbrowser": true,
                "share": true,
                "run": true
            },
            "restricted": false
        },
        "go.survey.prompt": {
            "type": "boolean",
            "default": true,
            "description": "Prompt for surveys, including the gopls survey and the Go developer survey.",
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.tasks.provideDefault": {
            "default": true,
            "description": "enable the default go build/test task provider.",
            "scope": 3,
            "type": "boolean",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.inlayHints.assignVariableTypes": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for variable types in assign statements:\n```go\n\ti/* int*/, j/* int*/ := 0, len(r)-1\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.inlayHints.compositeLiteralFields": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for composite literal field names:\n```go\n\t{/*in: */\"Hello, world\", /*want: */\"dlrow ,olleH\"}\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.inlayHints.compositeLiteralTypes": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for composite literal types:\n```go\n\tfor _, c := range []struct {\n\t\tin, want string\n\t}{\n\t\t/*struct{ in string; want string }*/{\"Hello, world\", \"dlrow ,olleH\"},\n\t}\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.inlayHints.constantValues": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for constant values:\n```go\n\tconst (\n\t\tKindNone   Kind = iota/* = 0*/\n\t\tKindPrint/*  = 1*/\n\t\tKindPrintf/* = 2*/\n\t\tKindErrorf/* = 3*/\n\t)\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.inlayHints.functionTypeParameters": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for implicit type parameters on generic functions:\n```go\n\tmyFoo/*[int, string]*/(1, \"hello\")\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.inlayHints.parameterNames": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for parameter names:\n```go\n\tparseInt(/* str: */ \"123\", /* radix: */ 8)\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.inlayHints.rangeVariableTypes": {
            "type": "boolean",
            "markdownDescription": "Enable/disable inlay hints for variable types in range statements:\n```go\n\tfor k/* int*/, v/* string*/ := range []string{} {\n\t\tfmt.Println(k, v)\n\t}\n```",
            "default": false,
            "scope": 3,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.general.debug": {
            "default": false,
            "markdownDescription": "Create a debug channel in the Output view.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.general.automaticGitRefreshInterval": {
            "default": 0,
            "markdownDescription": "Polling interval (in seconds) for automatically refreshing the tree when your repository is updated. Set to '0' to disable.",
            "type": "integer",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "todo-tree.general.periodicRefreshInterval": {
            "default": 0,
            "markdownDescription": "Periodic refresh interval (in minutes) for automatically refreshing the tree. Set to '0' to disable.",
            "type": "integer",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "todo-tree.general.revealBehaviour": {
            "default": "start of todo",
            "enum": [
                "start of line",
                "start of todo",
                "end of todo",
                "leave focus in tree"
            ],
            "markdownDescription": "Sets where the cursor is positioned when revealing a todo.",
            "markdownEnumDescriptions": [
                "Moves the cursor to the start of the line",
                "Moves the cursor to the beginning of the todo",
                "Moves the cursor to the end of the todo",
                "Leave the focus in the tree view"
            ],
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "start of todo",
            "restricted": false
        },
        "todo-tree.general.exportPath": {
            "default": "~/todo-tree-%Y%m%d-%H%M.txt",
            "markdownDescription": "Path to use when exporting the tree. Environment variables will be expanded, e.g `${HOME}` and the path is passed through strftime (see <https://github.com/samsonjs/strftime>). Set the extension to `.json` to export as a JSON record.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "~/todo-tree-%Y%m%d-%H%M.txt",
            "restricted": false
        },
        "todo-tree.general.rootFolder": {
            "default": "",
            "markdownDescription": "Folder in which to run the search (defaults to the workspace folder).",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "todo-tree.general.schemes": {
            "default": [
                "file",
                "ssh",
                "untitled",
                "vscode-notebook-cell"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Editor schemes to find TODOs in. To find TODOs in settings files, for instance, add `vscode-userdata` or for output windows, add `output`.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [
                "file",
                "ssh",
                "untitled",
                "vscode-notebook-cell"
            ],
            "restricted": false
        },
        "todo-tree.general.statusBar": {
            "default": "none",
            "enum": [
                "none",
                "total",
                "tags",
                "top three",
                "current file"
            ],
            "markdownDescription": "What to show in the status bar - nothing, total count, counts per tag, top three counts per tag or count of tags in the current file.",
            "markdownEnumDescriptions": [
                "Only show the scanning status in the status bar",
                "Show the total count of tags in the status bar",
                "Show a breakdown of the count of each tag in the status bar",
                "Show the count of the top three tags in the status bar",
                "Show the count of tags in the current file in the status bar"
            ],
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "todo-tree.general.showIconsInsteadOfTagsInStatusBar": {
            "default": false,
            "markdownDescription": "Show icons instead of tags in the status bar",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.general.statusBarClickBehaviour": {
            "default": "reveal",
            "enum": [
                "cycle",
                "reveal",
                "toggle highlights"
            ],
            "markdownDescription": "What to do when the status bar is clicked.",
            "markdownEnumDescriptions": [
                "Toggle between showing total count and the top three tag counts",
                "Reveal the tree view",
                "Toggle highlighting"
            ],
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "reveal",
            "restricted": false
        },
        "todo-tree.general.tagGroups": {
            "default": {},
            "markdownDescription": "Allows similar tags to be grouped under the same type, e.g. `{ \"FIX\": [\"FIXME\",\"FIXIT\"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "todo-tree.general.tags": {
            "default": [
                "BUG",
                "HACK",
                "FIXME",
                "TODO",
                "XXX",
                "[ ]",
                "[x]"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [
                "BUG",
                "HACK",
                "FIXME",
                "TODO",
                "XXX",
                "[ ]",
                "[x]"
            ],
            "restricted": false
        },
        "todo-tree.general.showActivityBarBadge": {
            "default": false,
            "markdownDescription": "Show a badge in the activity bar indicating the total number of TODOs",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.highlights.customHighlight": {
            "default": {
                "BUG": {
                    "icon": "bug"
                },
                "HACK": {
                    "icon": "tools"
                },
                "FIXME": {
                    "icon": "flame"
                },
                "XXX": {
                    "icon": "x"
                },
                "[ ]": {
                    "icon": "issue-draft"
                },
                "[x]": {
                    "icon": "issue-closed"
                }
            },
            "markdownDescription": "Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).",
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "foreground": {
                        "type": "string",
                        "format": "color-hex"
                    },
                    "background": {
                        "type": "string",
                        "format": "color-hex"
                    },
                    "opacity": {
                        "type": "number"
                    },
                    "fontWeight": {
                        "type": "string"
                    },
                    "fontStyle": {
                        "type": "string"
                    },
                    "textDecoration": {
                        "type": "string"
                    },
                    "borderRadius": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "iconColour": {
                        "type": "string",
                        "format": "color-hex"
                    },
                    "gutterIcon": {
                        "type": "boolean"
                    },
                    "rulerColour": {
                        "type": "string",
                        "format": "color-hex"
                    },
                    "rulerOpacity": {
                        "type": "number"
                    },
                    "rulerLane": {
                        "type": "string",
                        "enum": [
                            "none",
                            "left",
                            "center",
                            "right",
                            "full"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "tag",
                            "text",
                            "tag-and-comment",
                            "tag-and-subTag",
                            "text-and-comment",
                            "line",
                            "whole-line",
                            "none"
                        ]
                    },
                    "hideFromTree": {
                        "type": "boolean"
                    },
                    "hideFromStatusBar": {
                        "type": "boolean"
                    },
                    "hideFromActivityBar": {
                        "type": "boolean"
                    }
                }
            },
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": {
                "BUG": {
                    "icon": "bug"
                },
                "HACK": {
                    "icon": "tools"
                },
                "FIXME": {
                    "icon": "flame"
                },
                "XXX": {
                    "icon": "x"
                },
                "[ ]": {
                    "icon": "issue-draft"
                },
                "[x]": {
                    "icon": "issue-closed"
                }
            },
            "restricted": false
        },
        "todo-tree.highlights.defaultHighlight": {
            "default": {},
            "markdownDescription": "Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).",
            "type": "object",
            "properties": {
                "foreground": {
                    "type": "string",
                    "format": "color-hex"
                },
                "background": {
                    "type": "string",
                    "format": "color-hex"
                },
                "opacity": {
                    "type": "number"
                },
                "fontWeight": {
                    "type": "string"
                },
                "fontStyle": {
                    "type": "string"
                },
                "textDecoration": {
                    "type": "string"
                },
                "borderRadius": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "iconColour": {
                    "type": "string",
                    "format": "color-hex"
                },
                "gutterIcon": {
                    "type": "boolean"
                },
                "rulerColour": {
                    "type": "string",
                    "format": "color-hex"
                },
                "rulerOpacity": {
                    "type": "number"
                },
                "rulerLane": {
                    "type": "string",
                    "enum": [
                        "none",
                        "left",
                        "center",
                        "right",
                        "full"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "tag",
                        "text",
                        "tag-and-comment",
                        "tag-and-subTag",
                        "text-and-comment",
                        "line",
                        "whole-line",
                        "none"
                    ]
                },
                "hideFromTree": {
                    "type": "boolean"
                },
                "hideFromStatusBar": {
                    "type": "boolean"
                },
                "hideFromActivityBar": {
                    "type": "boolean"
                }
            },
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "todo-tree.highlights.enabled": {
            "default": true,
            "markdownDescription": "Set to false to disable highlighting.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.highlights.highlightDelay": {
            "default": 500,
            "markdownDescription": "Delay before highlighting tags within files (milliseconds).",
            "type": "integer",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": 500,
            "restricted": false
        },
        "todo-tree.highlights.useColourScheme": {
            "default": false,
            "markdownDescription": "Use a colour scheme to colour the tags. This scheme is applied to the tags in the order of tags. The colours can be modified using `todo-tree.highlights.foregroundColourScheme` and `todo-tree.highlights.backgroundColourScheme`. The colour scheme overrides colours in the default highlight, but not the custom highlight.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.highlights.foregroundColourScheme": {
            "default": [
                "white",
                "black",
                "black",
                "white",
                "white",
                "white",
                "black"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [
                "white",
                "black",
                "black",
                "white",
                "white",
                "white",
                "black"
            ],
            "restricted": false
        },
        "todo-tree.highlights.backgroundColourScheme": {
            "default": [
                "red",
                "orange",
                "yellow",
                "green",
                "blue",
                "indigo",
                "violet"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [
                "red",
                "orange",
                "yellow",
                "green",
                "blue",
                "indigo",
                "violet"
            ],
            "restricted": false
        },
        "todo-tree.filtering.excludedWorkspaces": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "An array of workspace names to exclude as roots in the tree (wildcards can be used).",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "todo-tree.filtering.excludeGlobs": {
            "default": [
                "**/node_modules/*/**"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [
                "**/node_modules/*/**"
            ],
            "restricted": false
        },
        "todo-tree.filtering.ignoreGitSubmodules": {
            "default": false,
            "markdownDescription": "If true, any subfolders containing a .git file will be ignored when searching.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.filtering.includedWorkspaces": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "todo-tree.filtering.includeGlobs": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "todo-tree.filtering.includeHiddenFiles": {
            "default": false,
            "markdownDescription": "Include hidden files (starting with a .).",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.filtering.passGlobsToRipgrep": {
            "default": true,
            "markdownDescription": "By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.filtering.scopes": {
            "default": [],
            "markdownDescription": "Scopes (sets of globs) that can be switched between",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "todo-tree.filtering.useBuiltInExcludes": {
            "default": "none",
            "enum": [
                "none",
                "file excludes",
                "search excludes",
                "file and search excludes"
            ],
            "markdownDescription": "Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.",
            "markdownEnumDescriptions": [
                "Don't used any built in excludes",
                "Use the Files:Exclude setting",
                "Use the Search:Exclude setting",
                "Use the Files:Exclude and the Search:Exclude setting"
            ],
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "todo-tree.tree.autoRefresh": {
            "default": true,
            "markdownDescription": "Refresh the tree when files are opened or saved.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.disableCompactFolders": {
            "default": false,
            "markdownDescription": "Prevent the tree from showing compact folders.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.expanded": {
            "default": false,
            "markdownDescription": "When opening new workspaces, show the tree initially fully expanded.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.filterCaseSensitive": {
            "default": false,
            "markdownDescription": "Set to true if you want the view filtering to be case sensitive.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.flat": {
            "default": false,
            "markdownDescription": "When opening new workspaces, show the tree initially as flat list of files.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.groupedByTag": {
            "default": false,
            "markdownDescription": "When opening new workspaces, show the tree initially grouped by tag.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.groupedBySubTag": {
            "default": false,
            "markdownDescription": "When opening new workspaces, show the tree initially grouped by sub tag.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.hideIconsWhenGroupedByTag": {
            "default": false,
            "markdownDescription": "Save some space by hiding the item icons when grouped by tag.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.hideTreeWhenEmpty": {
            "default": false,
            "markdownDescription": "Hide the view if it is empty.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.labelFormat": {
            "default": "${tag} ${after}",
            "markdownDescription": "Format for tree items.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "${tag} ${after}",
            "restricted": false
        },
        "todo-tree.tree.scanAtStartup": {
            "default": true,
            "markdownDescription": "Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.scanMode": {
            "default": "workspace",
            "enum": [
                "workspace",
                "open files",
                "current file",
                "workspace only"
            ],
            "markdownDescription": "Set this to change which files are scanned.",
            "markdownEnumDescriptions": [
                "Scan the whole workspace (or workspaces) and open file",
                "Scan open files only",
                "Scan the current file only",
                "Scan the workspace but don't refresh files open in the editor"
            ],
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "workspace",
            "restricted": false
        },
        "todo-tree.tree.showBadges": {
            "default": true,
            "markdownDescription": "Show badges and SCM state in the tree view.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.showCountsInTree": {
            "default": false,
            "markdownDescription": "Show counts of TODOs in the tree.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.showInExplorer": {
            "default": false,
            "deprecationMessage": "This setting is no longer used. Please drag the view to move it.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.showCurrentScanMode": {
            "default": true,
            "markdownDescription": "Show the current scan mode at the top of the tree view",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.showScanOpenFilesOrWorkspaceButton": {
            "default": false,
            "deprecationMessage": "This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.subTagClickUrl": {
            "default": "",
            "markdownDescription": "The URL to open when clicking on a sub tag in the tree. Can include placeholders as defined in `todo-tree.tree.labelFormat`.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "todo-tree.tree.showTagsFromOpenFilesOnly": {
            "default": false,
            "deprecationMessage": "This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.sortTagsOnlyViewAlphabetically": {
            "default": false,
            "markdownDescription": "Sort items in the tags only view alphabetically instead of by file and line number.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.sort": {
            "default": true,
            "markdownDescription": "ripgrep searches using multiple threads to improve performance. The tree is sorted when it is populated so that it stays stable. If you want to use ripgrep's own sort arguments, set this to false.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.tagsOnly": {
            "default": false,
            "markdownDescription": "When opening new workspaces, show only tag elements in tree.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.tooltipFormat": {
            "default": "${filepath}, line ${line}",
            "markdownDescription": "Tree item tooltip format.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "${filepath}, line ${line}",
            "restricted": false
        },
        "todo-tree.tree.trackFile": {
            "default": true,
            "markdownDescription": "Track the current file in the tree view.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.reveal": {
            "default": true,
            "markdownDescription": "Show a button in the tree view title bar to reveal the current item (only when track file is not enabled).",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.scanMode": {
            "default": false,
            "markdownDescription": "Show a button in the tree view title bar to change the Scan Mode setting.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.buttons.viewStyle": {
            "default": true,
            "markdownDescription": "Show a button in the tree view title bar to change the view style (tree, flat or tags only).",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.groupByTag": {
            "default": true,
            "markdownDescription": "Show a button in the tree view title bar to enable grouping items by tag.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.groupBySubTag": {
            "default": false,
            "markdownDescription": "Show a button in the tree view title bar to enable grouping items by sub tag.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.tree.buttons.filter": {
            "default": true,
            "markdownDescription": "Show a button in the tree view title bar allowing the tree to be filtered by entering some text.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.refresh": {
            "default": true,
            "markdownDescription": "Show a refresh button in the tree view title bar.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.expand": {
            "default": true,
            "markdownDescription": "Show a button in the tree view title bar to expand or collapse the whole tree.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.tree.buttons.export": {
            "default": false,
            "markdownDescription": "Show a button in the tree view title bar to create a file showing the tree content.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.regex.regexCaseSensitive": {
            "default": true,
            "markdownDescription": "Use a case sensitive regular expression.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "todo-tree.regex.subTagRegex": {
            "default": "",
            "markdownDescription": "Regular expression for processing the text to the right of the tag, e.g. for extracting a sub tag, or removing unwanted characters.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "todo-tree.regex.enableMultiLine": {
            "default": false,
            "markdownDescription": "Force the regex to match over multiple lines. Allows use of `[\\s\\S]` to match anything including newlines.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "todo-tree.ripgrep.ripgrep": {
            "default": "",
            "markdownDescription": "Location of your version of ripgrep.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "todo-tree.ripgrep.ripgrepArgs": {
            "default": "--max-columns=1000 --no-config ",
            "markdownDescription": "Additional arguments to pass to ripgrep (Use with caution!).",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "--max-columns=1000 --no-config ",
            "restricted": false
        },
        "todo-tree.ripgrep.ripgrepMaxBuffer": {
            "default": 200,
            "markdownDescription": "Size of the buffer to use for retrieving output from ripgrep (kilobytes).",
            "type": "integer",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": 200,
            "restricted": false
        },
        "todo-tree.ripgrep.usePatternFile": {
            "default": true,
            "markdownDescription": "A pattern file is used with ripgrep by default. If you experience issues with deleting the pattern file, set this to false to use the legacy method of providing the regex to ripgrep.",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latex.texDirs": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "List of directories where to look for extra input `.tex` files. \nAbsolute paths are required. You may also need to set the environment variable `TEXINPUTS` properly for the LaTeX compiler to find the `.tex` files, see the `env` parameter of [recipes](https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#latex-recipes).",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.latex.verbatimEnvs": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "verbatim",
                "lstlisting",
                "minted"
            ],
            "markdownDescription": "List environments with verbatim-like content. These environments are stripped off the `.tex` files before any parsing occurs. Note that this variable has no effect on syntax highlighting.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "verbatim",
                "lstlisting",
                "minted"
            ],
            "restricted": false
        },
        "latex-workshop.kpsewhich.path": {
            "scope": 3,
            "type": "string",
            "default": "kpsewhich",
            "markdownDescription": "Define the location of the kpsewhich executable file.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "kpsewhich",
            "restricted": false
        },
        "latex-workshop.kpsewhich.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Use kpsewhich as defined by `#latex-workshop.kpsewhich.path#` to resolve bibliography files in addition to looking into the directories listed in `#latex-workshop.latex.bibDirs#`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latex.bibDirs": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "List of directories where to look for `.bib` files. Absolute paths are required. This setting is only used by the intellisense feature, you may also need to set the environment variable `BIBINPUTS` properly for the LaTeX compiler to find the `.bib` files.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.latex.watch.usePolling": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "deprecationMessage": "Deprecated: This config is deprecated and has no use.",
            "markdownDeprecationMessage": "**Deprecated**: This config is deprecated and has no use.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.latex.watch.interval": {
            "scope": 3,
            "type": "number",
            "default": 300,
            "deprecationMessage": "Deprecated: This config is deprecated and has no use.",
            "markdownDeprecationMessage": "**Deprecated**: This config is deprecated and has no use.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 300,
            "restricted": false
        },
        "latex-workshop.latex.watch.delay": {
            "scope": 3,
            "type": "number",
            "default": 250,
            "deprecationMessage": "Deprecated: This config is deprecated and has no use.",
            "markdownDeprecationMessage": "**Deprecated**: This config is deprecated and has no use.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 250,
            "restricted": false
        },
        "latex-workshop.latex.watch.pdf.delay": {
            "scope": 3,
            "type": "number",
            "default": 250,
            "markdownDescription": "Defines the time delay before confirming a PDF-like binary file is fully changed. Increase this value if you encounter repeated viewer refreshes and/or loss of PDF scrolling position. LaTeX Workshop internally monitors file change events and initiates auto-builds and/or PDF viewing refresh. When LaTeX is changing large files (particularly binary files like PDFs), multiple consecutive file change events may be emitted, potentially causing file corruption issues. We use this config to control the file polling delay before confirming that the file change has been stabilized. Note that non-binary files such as `.tex`, `.bib`, and `.cls` are not affected.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 250,
            "restricted": false
        },
        "latex-workshop.latex.watch.files.ignore": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "**/*.bbx",
                "**/*.bbl",
                "**/*.cbx",
                "**/*.cfg",
                "**/*.clo",
                "**/*.cnf",
                "**/*.def",
                "**/*.dfu",
                "**/*.enc",
                "**/*.fd",
                "**/*.fmt",
                "**/*.lbx",
                "**/*.map",
                "**/*.mkii",
                "**/*.pfb",
                "**/*.tfm",
                "**/*.vf",
                "**/*.code.tex",
                "**/*.sty",
                "**/texmf-{dist,var}/**",
                "**/Local/MiKTeX/**",
                "**/Local/Programs/MiKTeX/**",
                "**/Roaming/MiKTeX/**",
                "**/Program*/MiKTeX*/**",
                "**/.miktex/texmfs/**",
                "/var/cache/miktex-texmf/**",
                "/usr/local/share/miktex-texmf/**",
                "**/Library/Application Support/MiKTeX/texmfs/**",
                "/dev/null"
            ],
            "markdownDescription": "Files to ignore from the watching mechanism, i.e., no intellisense or build-on-file-change. However, document structure/outline and build-on-save won't be affected. This property must be an array of glob patterns. The patterns are matched against the absolute file path. To ignore everything inside the `texmf` tree, `**/texmf/**` can be used.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "**/*.bbx",
                "**/*.bbl",
                "**/*.cbx",
                "**/*.cfg",
                "**/*.clo",
                "**/*.cnf",
                "**/*.def",
                "**/*.dfu",
                "**/*.enc",
                "**/*.fd",
                "**/*.fmt",
                "**/*.lbx",
                "**/*.map",
                "**/*.mkii",
                "**/*.pfb",
                "**/*.tfm",
                "**/*.vf",
                "**/*.code.tex",
                "**/*.sty",
                "**/texmf-{dist,var}/**",
                "**/Local/MiKTeX/**",
                "**/Local/Programs/MiKTeX/**",
                "**/Roaming/MiKTeX/**",
                "**/Program*/MiKTeX*/**",
                "**/.miktex/texmfs/**",
                "/var/cache/miktex-texmf/**",
                "/usr/local/share/miktex-texmf/**",
                "**/Library/Application Support/MiKTeX/texmfs/**",
                "/dev/null"
            ],
            "restricted": false
        },
        "latex-workshop.view.outline.sections": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "part",
                "chapter",
                "section",
                "subsection",
                "subsubsection"
            ],
            "markdownDescription": "The section names of LaTeX outline hierarchy. It is also used by the folding mechanism. This property is an array of case-sensitive strings in the order of document structure hierarchy. For multiple tags in the same level, separate the tags with `|` as delimiters, e.g., `section|alternative`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "part",
                "chapter",
                "section",
                "subsection",
                "subsubsection"
            ],
            "restricted": false
        },
        "latex-workshop.view.outline.commands": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "label"
            ],
            "markdownDescription": "The names of the commands to be shown in the outline/structure views. The commands must be called in the form `\\commandname{arg}`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "label"
            ],
            "restricted": false
        },
        "latex-workshop.view.outline.floats.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show the floating objects (figures and tables) in the outline/structure views.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.view.outline.floats.number.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show the float number in the outline/structure views.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.view.outline.floats.caption.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show the float caption in the outline/structure views.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.view.outline.numbers.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show the sectioning numbers in the outline/structure views.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.view.autoFocus.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Auto focus the LaTeX view when switching from non-tex to tex files. This will cause the view to appear consistently upon activating the extension.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.view.pdf.viewer": {
            "scope": 3,
            "type": "string",
            "default": "tab",
            "enum": [
                "browser",
                "tab",
                "external",
                "legacy",
                "singleton"
            ],
            "markdownDescription": "The default PDF viewer.",
            "enumDescriptions": [
                "Open PDF with the default web browser.",
                "Open PDF with the built-in tab viewer.",
                "[Experimental] Open PDF with the external viewer set in \"View > Pdf > External: command\".",
                "[Legacy] Open PDF with the built-in tab viewer with vscode WebView API.",
                "[Legacy] Open PDF with the built-in tab viewer with vscode WebView API, reveal existing one if possible."
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "tab",
            "restricted": false
        },
        "latex-workshop.view.pdf.tab.editorGroup": {
            "scope": 3,
            "type": "string",
            "default": "right",
            "enum": [
                "current",
                "left",
                "right",
                "above",
                "below"
            ],
            "markdownDescription": "The editor group in which to open the tab viewer.",
            "enumDescriptions": [
                "Use the current editor group",
                "Put the viewer tab in a new group on the left of the current one",
                "Put the viewer tab in a new group on the right of the current one",
                "Put the viewer tab in a new group above the current one",
                "Put the viewer tab in a new group below the current one"
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "right",
            "restricted": false
        },
        "latex-workshop.view.pdf.tab.openDelay": {
            "scope": 3,
            "type": "number",
            "default": 1000,
            "deprecationMessage": "Deprecated: This config has no use and has been removed.",
            "markdownDeprecationMessage": "**Deprecated**: This config has no use and has been removed.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "latex-workshop.view.pdf.ref.viewer": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "tabOrBrowser",
                "external"
            ],
            "markdownDescription": "PDF viewer used for [View on PDF] link on \\ref.",
            "scope": 3,
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "latex-workshop.viewer.pdf.internal.port": {
            "scope": 3,
            "type": "number",
            "default": 0,
            "markdownDescription": "Define the port to listen on for communicating with the internal viewer. The default value \"0\" means the port is chosen randomly by the application. If this config is set, only one Visual Studio Code instance with this extension active can be opened. Otherwise, a port conflict may happen.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "latex-workshop.view.pdf.internal.synctex.keybinding": {
            "scope": 3,
            "type": "string",
            "default": "ctrl-click",
            "enum": [
                "ctrl-click",
                "double-click"
            ],
            "markdownDescription": " Which keybinding to use for the internal viewer for reverse synctex. `ctrl`/`cmd` + click (default) or double click.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "ctrl-click",
            "restricted": false
        },
        "latex-workshop.viewer.pdf.internal.keyboardEvent": {
            "scope": 3,
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "force",
                "never"
            ],
            "markdownDescription": "Rebroadcasting KeyboardEvent on the internal viewers. If keyboard shortcuts on the internal viewer do not work well, change this setting.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "latex-workshop.view.pdf.external.viewer.command": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": "The command to execute when using external viewer. This function is not officially supported.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.view.pdf.external.viewer.args": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "%PDF%"
            ],
            "markdownDescription": "The arguments for `#latex-workshop.view.pdf.external.viewer.command#` when using external viewer. This function is not officially supported. %PDF% is the placeholder for the absolute path to the generated PDF file.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "%PDF%"
            ],
            "restricted": false
        },
        "latex-workshop.view.pdf.external.synctex.command": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": "The command to execute when forward synctex to external viewer. This function is not officially supported.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.view.pdf.external.synctex.args": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "%LINE%",
                "%PDF%",
                "%TEX%"
            ],
            "markdownDescription": "The arguments for `#latex-workshop.view.pdf.external.synctex.args#` when forward synctex to external viewer. %LINE% is the line number, %PDF% is the placeholder for the absolute path to the generated PDF file, and %TEX% is the source LaTeX file path with `.tex` extension from which syncTeX is fired.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "%LINE%",
                "%PDF%",
                "%TEX%"
            ],
            "restricted": false
        },
        "latex-workshop.view.pdf.zoom": {
            "scope": 3,
            "type": "string",
            "default": "auto",
            "markdownDescription": "The default zoom level of the PDF viewer. This default value will be passed to the viewer upon opening. Possible values are `auto`, `page-actual`, `page-fit`, `page-width`, and one-based scale values (e.g., 0.5 for 50%, 2.0 for 200%).",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "latex-workshop.view.pdf.trim": {
            "scope": 3,
            "type": "number",
            "default": 0,
            "enum": [
                0,
                1,
                2,
                3
            ],
            "markdownDescription": "The default trim mode of the PDF viewer.",
            "enumDescriptions": [
                "No page trimming",
                "Trim 5% at margin",
                "Trim 10% at margin",
                "Trim 15% at margin"
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "latex-workshop.view.pdf.scrollMode": {
            "scope": 3,
            "type": "number",
            "default": 0,
            "markdownDescription": "The default scroll mode of the PDF viewer. This default value will be passed to the viewer upon opening. Possible values are `0` (vertical), `1`(horizontal), `2` (wrapped), `3` (page).",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "latex-workshop.view.pdf.spreadMode": {
            "scope": 3,
            "type": "number",
            "default": 0,
            "markdownDescription": "The default spread mode of the PDF viewer. This default value will be passed to the viewer upon opening. Possible values are `0` (none), `1` (odd) and `2` (even).",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "latex-workshop.view.pdf.hand": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Define if the hand tool is enabled by default in the PDF viewer.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.view.pdf.invertMode.enabled": {
            "scope": 3,
            "type": "string",
            "enum": [
                "auto",
                "always",
                "compat",
                "never"
            ],
            "default": "compat",
            "markdownDescription": "Enable the CSS invert filter.",
            "enumDescriptions": [
                "Enable the invert filter when using a dark theme.",
                "Always enable invert filter.",
                "Enable the invert filter only if `invert > 0`.",
                "Disable the invert filter"
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "compat",
            "restricted": false
        },
        "latex-workshop.view.pdf.invert": {
            "scope": 3,
            "type": "number",
            "default": 0,
            "markdownDescription": " Define the CSS invert filter level of the PDF viewer. This config can invert the color of PDF. Possible values are from 0 to 1.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "latex-workshop.view.pdf.invertMode.brightness": {
            "scope": 3,
            "type": "number",
            "default": 1,
            "markdownDescription": " Define the CSS brightness filter level of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 2.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 1,
            "restricted": false
        },
        "latex-workshop.view.pdf.invertMode.grayscale": {
            "scope": 3,
            "type": "number",
            "default": 0.6,
            "markdownDescription": " Define the CSS grayscale filter level of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 1.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0.6,
            "restricted": false
        },
        "latex-workshop.view.pdf.invertMode.hueRotate": {
            "scope": 3,
            "type": "number",
            "default": 180,
            "markdownDescription": " Define the CSS hue-rotate filter angle of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 360.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 180,
            "restricted": false
        },
        "latex-workshop.view.pdf.invertMode.sepia": {
            "scope": 3,
            "type": "number",
            "default": 0,
            "markdownDescription": " Define the CSS sepia filter level of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 1.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "latex-workshop.view.pdf.color.light.pageColorsForeground": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": " The foreground color of the PDF document 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.light.pageColorsBackground": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": " The background color of the PDF document 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.light.backgroundColor": {
            "scope": 3,
            "type": "string",
            "default": "#ffffff",
            "markdownDescription": " The background color of the viewer 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "#ffffff",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.light.pageBorderColor": {
            "scope": 3,
            "type": "string",
            "default": "lightgrey",
            "markdownDescription": " The border color of the PDF pages 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "lightgrey",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.dark.pageColorsForeground": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": " The foreground color of the PDF document 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.dark.pageColorsBackground": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": " The background color of the PDF document 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.dark.backgroundColor": {
            "scope": 3,
            "type": "string",
            "default": "#ffffff",
            "markdownDescription": " The background color of the viewer 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "#ffffff",
            "restricted": false
        },
        "latex-workshop.view.pdf.color.dark.pageBorderColor": {
            "scope": 3,
            "type": "string",
            "default": "lightgrey",
            "markdownDescription": " The border color of the PDF pages 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "lightgrey",
            "restricted": false
        },
        "latex-workshop.synctex.path": {
            "scope": 3,
            "type": "string",
            "default": "synctex",
            "markdownDescription": "Define the location of SyncTeX executive file. Additional arguments, e.g., synctex modes and position of click, will be appended to this command.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "synctex",
            "restricted": false
        },
        "latex-workshop.synctex.afterBuild.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Execute forward synctex at cursor position after compiling LaTeX project.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.synctex.synctexjs.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable using a builtin synctex function. The command set in latex-workshop.synctex.path will not be used.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.linting.chktex.exec.path": {
            "scope": 3,
            "type": "string",
            "default": "chktex",
            "markdownDescription": "Define the location of ChkTeX executive file. This command will be joint with `#latex-workshop.linting.chktex.exec.args#` and required arguments to form a complete command of ChkTeX.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "chktex",
            "restricted": false
        },
        "latex-workshop.linting.lacheck.exec.path": {
            "scope": 3,
            "type": "string",
            "default": "lacheck",
            "markdownDescription": "Define the location of LaCheck executive file.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "lacheck",
            "restricted": false
        },
        "latex-workshop.check.duplicatedLabels.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable checking for duplicated labels. A new check is triggered every time the intellisense data is updated, see `#latex-workshop.intellisense.update.aggressive.enabled#`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.texcount.path": {
            "scope": 3,
            "type": "string",
            "default": "texcount",
            "markdownDescription": "Define the location of TeXCount executive file/script. This command will be joint with `#latex-workshop.texcount.args#` and required arguments to form a complete command of TeXCount.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "texcount",
            "restricted": false
        },
        "latex-workshop.intellisense.update.aggressive.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Defines whether the extension aggressively parses the changed content after stopped typing. Disable this config will let the extension only update intellisense after saving changed files.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.intellisense.update.delay": {
            "scope": 3,
            "type": "number",
            "default": 1000,
            "markdownDescription": "Defines the delay in milliseconds for the extension to update current active file content for intellisense after stopped typing. This config works only when `intellisense.update.aggressive.enabled` is enabled. Lower this value to let the extension know newly defined commands/references/environments more quickly, at the cost of more frequent content parsing: more computational burden.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "latex-workshop.intellisense.atSuggestion.user": {
            "scope": 3,
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "markdownDescription": "Dictionary of `\"@prefix\": \"snippet command\"` to add to, replace, or remove the default suggestions in `data/at-suggestions.json`. The key of the dictionary is the triggering string, which **must** starts with `@` regardless of `#latex-workshop.intellisense.atSuggestion.trigger.latex#`. The value of the dictionary is the snippet to be inserted. If the key is identical to a default snippet defined in `data/at-suggestions.json`, the new value in the dictionary is used for suggestion. If the value is an empty string, the snippet is removed from suggestion. For example, `{ \"@.\": \"\\cdot\", \"@6\": \"\" }`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "latex-workshop.intellisense.command.user": {
            "scope": 3,
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "markdownDescription": "Dictionary of `\"command name\": \"command snippet\"` to add to, replace, or remove the default ones in `data/commands.json`. The key of the dictionary is the command name with optional braces indicating the command arguments. The value of the dictionary is the snippet to be inserted. If the key is identical to a default command suggestion defined in `data/commands.json`, the new value in the dictionary is used for suggestion. If the value is an empty string, the command is removed from suggestion. Leading backslashes will be added to both the name and snippet by the extension, so don't include them in this config. For example, `{\"mycommand[]{}\": \"notsamecommand[${2:option}]{$TM_SELECTED_TEXT$1}\", \"parbox{}{}\": \"parbox{${2:width}}{$TM_SELECTED_TEXT$1}\", \"overline{}\": \"\"}` adds a new command with name `mycommand[]{} that inserts `\\notsamecommand[]{}`, replaces the default snippet of `\\parbox{}{}` to make it include current selected text, and removes `\\overline{}` from suggestion.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "latex-workshop.intellisense.citation.type": {
            "scope": 3,
            "type": "string",
            "enum": [
                "inline",
                "browser"
            ],
            "default": "inline",
            "markdownDescription": "Defines which type of hint to show when intellisense provides citation suggestions.",
            "enumDescriptions": [
                "Use the inline intellisense to provide citation completion items.",
                "Use a dropdown menu to provide citation completion items."
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "inline",
            "restricted": false
        },
        "latex-workshop.intellisense.triggers.latex": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "{"
            ],
            "markdownDescription": "Additional trigger characters for intellisense of LaTeX documents.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "{"
            ],
            "restricted": false
        },
        "latex-workshop.intellisense.atSuggestion.trigger.latex": {
            "scope": 3,
            "type": "string",
            "default": "@",
            "markdownDescription": "Character to trigger snippet suggestions as part of intellisense. Set this variable to `''` to deactivate these suggestions.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "@",
            "restricted": false
        },
        "latex-workshop.intellisense.atSuggestionJSON.replace": {
            "scope": 3,
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "deprecationMessage": "Deprecated: This config has been renamed to `latex-workshop.intellisense.atSuggestion.user`.",
            "markdownDeprecationMessage": "**Deprecated**: This config has been renamed to `#latex-workshop.intellisense.atSuggestion.user#`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "latex-workshop.intellisense.label.command": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "label",
                "linelabel"
            ],
            "markdownDescription": "The name of LaTeX commands that indicates a label definition. The command must accept one mandatory argument of the label reference string, e.g, \\linelabel{ref-str}.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "label",
                "linelabel"
            ],
            "restricted": false
        },
        "latex-workshop.intellisense.unimathsymbols.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "When `\\` is typed, show unimath symbols in the dropdown selector.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.intellisense.package.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Auto-complete commands and environments from used packages.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.intellisense.package.extra": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "List of extra packages to always add to the auto-completion mechanism. When `#latex-workshop.intellisense.package.enabled#` is set to `true`, the commands and environments defined in these extra packages will be added to the intellisense suggestions.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.intellisense.package.exclude": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "List of packages to exclude from the auto-completion mechanism. When `#latex-workshop.intellisense.package.enabled#` is set to `true`, the commands and environments defined in these packages will not be added to the intellisense suggestions. This setting has a higher priority over `#latex-workshop.intellisense.package.extra#`. You may include the string \"lw-default\" in the list to remove all default commands and environments.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.intellisense.package.env.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "If true, every environment provided by an included package is available by a snippet `\\envname`. Only applies when `#latex-workshop.intellisense.package.enabled#` is true. ",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.intellisense.package.dirs": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "List of extra directories to look for package completion files in addition to those provided by the extension. See https://github.com/James-Yu/LaTeX-Workshop/wiki/Intellisense#commands-starting-with- to learn how to generate these files. Files found in these directories have a higher priority over the default ones. This setting is only relevant when `#latex-workshop.intellisense.package.env.enabled#` is true.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.intellisense.includegraphics.preview.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable preview for `\\includegraphics` completion.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.message.badbox.show": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show badbox information in the problems panel.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.message.biberlog.exclude": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "Exclude biber log messages matching the given regexp from the problems panel.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.message.bibtexlog.exclude": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "Exclude bibtex log messages matching the given regexp from the problems panel.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.message.latexlog.exclude": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "Exclude latex log messages matching the given regexp from the problems panel.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.message.information.show": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Display information messages in popup notifications.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.message.warning.show": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Display warning messages in popup notifications.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.message.error.show": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Display error messages in popup notifications.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.message.log.show": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Display LaTeX Workshop debug log in output panel. This property defines whether LaTeX Workshop will output its debug log to the log panel.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.message.convertFilenameEncoding": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Convert the encoding of filenames if necessary when displaying them in the problems panel.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latexindent.path": {
            "scope": 3,
            "type": "string",
            "default": "latexindent",
            "markdownDescription": "Define the location of the latexindent executable file.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "latexindent",
            "restricted": false
        },
        "latex-workshop.docker.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable docker-based LaTeX distribution support. Do not set this item to `true` unless you are aware of what it means. This extension will use the images defined in `#latex-workshop.docker.image.latex#` to execute `latexmk`, `synctex`, `texcount`, and `latexindent`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.docker.image.latex": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": "Define the image for `latexmk`, `synctex`, `texcount`, and `latexindent`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.showContextMenu": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable the LaTeX contextual menu. This menu is deactivated as it is available through the new LaTeX badge. Just set this variable to `true` to recover the menu.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.bind.enter.key": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable the automatic insertion of `\\item` on a newline when pressing `Enter` in a line starting in `\\item`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.bind.altKeymap.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Use alternative keymap combo, i.e., `ctrl`+`l` `alt`+`key`, to replace the default `ctrl`/`cmd`+`alt` shortcuts.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.hover.ref.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable Hover on References.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.ref.number.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show number assigned to the reference in the previous compilation.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.citation.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable Hover on Citations.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.command.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable Hover on Commands to show the possible signatures.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.preview.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable Hover Preview.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.preview.maxLines": {
            "scope": 3,
            "type": "number",
            "default": 20,
            "markdownDescription": "Maximum number of lines between the beginning of the math environment and the cursor position to allow preview.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 20,
            "restricted": false
        },
        "latex-workshop.hover.preview.scale": {
            "scope": 3,
            "type": "number",
            "default": 1,
            "markdownDescription": "Scaling of Hover Preview.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 1,
            "restricted": false
        },
        "latex-workshop.hover.preview.newcommand.parseTeXFile.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable newcommands defined in the current TeX file to be included in Hover Preview.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.preview.newcommand.newcommandFile": {
            "scope": 3,
            "type": "string",
            "default": "",
            "markdownDescription": "Set the path of a file containing newcommands to be used in Hover Preview. If the path is relative, it is joined with the root dir.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.hover.preview.cursor.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Render cursor in Hover Preview at the current position.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.hover.preview.cursor.symbol": {
            "scope": 3,
            "type": "string",
            "default": "\\!|\\!",
            "markdownDescription": "Cursor symbol in Hover Preview.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "\\!|\\!",
            "restricted": false
        },
        "latex-workshop.hover.preview.cursor.color": {
            "scope": 3,
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "black",
                "blue",
                "brown",
                "cyan",
                "darkgray",
                "gray",
                "green",
                "lightgray",
                "lime",
                "magenta",
                "olive",
                "orange",
                "pink",
                "purple",
                "red",
                "teal",
                "violet",
                "white",
                "yellow"
            ],
            "markdownDescription": "The color of cursor in Hover Preview.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "latex-workshop.hover.preview.mathjax.extensions": {
            "scope": 3,
            "type": "array",
            "default": [],
            "markdownDescription": "MathJax extensions to load for Hover Preview. See [the list](https://docs.mathjax.org/en/latest/input/tex/extensions/index.html). Note that the following extensions are loaded by default: `ams`, `color`, `newcommand`, `noerrors`, and `noundefined`. They cannot be disabled.",
            "items": {
                "type": "string",
                "enum": [
                    "amscd",
                    "bbox",
                    "boldsymbol",
                    "braket",
                    "bussproofs",
                    "cancel",
                    "cases",
                    "centernot",
                    "colortbl",
                    "empheq",
                    "enclose",
                    "extpfeil",
                    "gensymb",
                    "html",
                    "mathtools",
                    "mhchem",
                    "physics",
                    "textcomp",
                    "textmacros",
                    "unicode",
                    "upgreek",
                    "verb"
                ]
            },
            "uniqueItems": true,
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.intellisense.optionalArgsEntries.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Some LaTeX commands can have several forms, each with different arguments. If set to True, the intellisense completion list will have one entry for each form of a given command. Default is true.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.intellisense.argumentHint.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Many snippets use text hints of the form `${\\d:some_tex}` for their argument. You may prefer to hide instead by setting this configuration to `false`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.intellisense.commandsJSON.replace": {
            "scope": 3,
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "deprecationMessage": "Deprecated: This config has been superseded by config `latex-workshop.intellisense.command.user`, which provides more features.",
            "markdownDeprecationMessage": "**Deprecated**: This config has been superseded by config `#latex-workshop.intellisense.command.user#`, which provides more features.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "latex-workshop.texdoc.path": {
            "scope": 3,
            "type": "string",
            "default": "texdoc",
            "markdownDescription": "Define the location of the `texdoc` executable. This command is used to show a package documentation.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "texdoc",
            "restricted": false
        },
        "latex-workshop.texdoc.args": {
            "scope": 3,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "--view"
            ],
            "markdownDescription": "Texdoc arguments to see a package documentation. Arguments must be in separate strings in the array. The package name is automatically appended to the arguments.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "--view"
            ],
            "restricted": false
        },
        "latex-workshop.bibtex.maxFileSize": {
            "scope": 3,
            "type": "number",
            "default": 5,
            "markdownDescription": "Defines the maximum bibtex file size for the extension to parse in MB.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "latex-workshop.bibtex-format.align-equal.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Align equal signs when calling VSCode format on a .bib file.",
            "scope": 3,
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.mathpreviewpanel.cursor.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": false,
            "markdownDescription": "[Experimental] Render a cursor on the math preview panel. **This feature is experimental. If you report an issue to us on this feature, we will not fix it. We will not accept any pull requests.**",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.mathpreviewpanel.editorGroup": {
            "scope": 3,
            "type": "string",
            "default": "below",
            "enum": [
                "current",
                "left",
                "right",
                "above",
                "below"
            ],
            "markdownDescription": "The editor group in which to open the math preview panel.",
            "enumDescriptions": [
                "Use the current editor group",
                "Put the math preview panel in a new group on the left of the current one",
                "Put the math preview panel in a new group on the right of the current one",
                "Put the math preview panel in a new group above the current one",
                "Put the math preview panel in a new group below the current one"
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "below",
            "restricted": false
        },
        "latex-workshop.selection.smart.latex.enabled": {
            "scope": 3,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable AST based smart selection. Command ids are `editor.action.smartSelect.expand` and `editor.action.smartSelect.shrink`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.codespaces.portforwarding.openDelay": {
            "scope": 3,
            "type": "number",
            "default": 20000,
            "markdownDescription": "Delay to wait for GitHub Codespaces Authentication of port forwarding to be resolved, in milliseconds.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 20000,
            "restricted": false
        },
        "nix.formatterPath": {
            "type": [
                "string",
                "array"
            ],
            "default": "nixpkgs-fmt",
            "description": "Location of the nix formatter command.",
            "scope": 3,
            "source": {
                "id": "jnoortheen.nix-ide",
                "displayName": "Nix IDE"
            },
            "defaultDefaultValue": "nixpkgs-fmt",
            "restricted": false
        },
        "nix.serverPath": {
            "type": "string",
            "default": "rnix-lsp",
            "description": "Location of the nix language server command.",
            "scope": 3,
            "source": {
                "id": "jnoortheen.nix-ide",
                "displayName": "Nix IDE"
            },
            "defaultDefaultValue": "rnix-lsp",
            "restricted": false
        },
        "nix.enableLanguageServer": {
            "type": "boolean",
            "default": false,
            "description": "Use LSP instead of nix-instantiate and nixpkgs-fmt.",
            "scope": 3,
            "source": {
                "id": "jnoortheen.nix-ide",
                "displayName": "Nix IDE"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "nix.serverSettings": {
            "type": "object",
            "default": {},
            "description": "Settings passed to the language server on configuration requests.",
            "scope": 3,
            "source": {
                "id": "jnoortheen.nix-ide",
                "displayName": "Nix IDE"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "haskell.indentationRules.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc.",
            "scope": 3,
            "source": {
                "id": "justusadam.language-haskell",
                "displayName": "Haskell Syntax Highlighting"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "alejandra.program": {
            "default": "alejandra",
            "description": "Specifies an alternative full path to the Alejandra executable.",
            "type": [
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "kamadorueda.alejandra",
                "displayName": "Alejandra 💅"
            },
            "defaultDefaultValue": "alejandra",
            "defaultValueSource": {
                "id": "kamadorueda.alejandra",
                "displayName": "Alejandra 💅"
            },
            "restricted": false
        },
        "vscord.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Is the extension enabled?",
            "order": 0,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.app.name": {
            "type": "string",
            "enum": [
                "Code",
                "Visual Studio Code",
                "VSCodium",
                "Custom"
            ],
            "default": "Code",
            "description": "Choose the name you want the application to use.\nChoosing \"Custom\" will make it so it use the \"rpc.id\" as application id",
            "order": 2,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Code",
            "restricted": false
        },
        "vscord.app.id": {
            "type": "string",
            "default": "782685898163617802",
            "description": "Application id that will be used when `appName` is \"Custom\" or when `appName` is invalid",
            "order": 3,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "782685898163617802",
            "restricted": false
        },
        "vscord.app.privacyMode.enable": {
            "type": "boolean",
            "default": false,
            "description": "Should we hide the github repository, the file name and the workspace name?",
            "order": 4,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.app.whitelistEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Is the whitelist enabled?",
            "order": 5,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.app.whitelistIsBlacklist": {
            "type": "boolean",
            "default": false,
            "description": "Switches the whitelist to a blacklist.",
            "order": 6,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.app.whitelist": {
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "description": "List of discord user ids that will be able to use the extension.",
            "order": 7,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "vscord.status.showElapsedTime": {
            "type": "boolean",
            "default": true,
            "description": "Should elapsed time be shown?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.resetElapsedTimePerFile": {
            "type": "boolean",
            "default": false,
            "description": "Should we reset the elapsed time after switching file?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.problems.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Should we count the problems?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.problems.text": {
            "type": "string",
            "default": "- {problems_count} problems found",
            "description": "This text will be shown when there is a problem.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "- {problems_count} problems found",
            "restricted": false
        },
        "vscord.status.problems.countedSeverities": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "error",
                    "warning",
                    "info",
                    "hint"
                ]
            },
            "default": [
                "error",
                "warning"
            ],
            "description": "List of problem level to count for `problems_count`.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": [
                "error",
                "warning"
            ],
            "restricted": false
        },
        "vscord.status.idle.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Should we enable the idle status?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.idle.check": {
            "type": "boolean",
            "default": true,
            "description": "Should we check when you are idling?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.idle.disconnectOnIdle": {
            "type": "boolean",
            "default": false,
            "description": "Should going idle disconnect you from discord gateway?.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.idle.resetElapsedTime": {
            "type": "boolean",
            "default": false,
            "description": "Should going idle reset the elapsed time?.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.idle.timeout": {
            "type": "number",
            "default": 300,
            "description": "Time in seconds before the user is considered idle.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": 300,
            "restricted": false
        },
        "vscord.ignore.workspaces": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "A list of workspace (name / path) to ignore.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "vscord.ignore.workspacesText": {
            "type": [
                "string",
                "object"
            ],
            "description": "The text / object to show in the status when current workspace is ignored, when using the object, key is workspace name and value is the text.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.ignore.repositories": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "A list of repository name to ignore.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "vscord.ignore.organizations": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "A list of git organizations to ignore.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "vscord.ignore.gitHosts": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "A list of git host to ignore.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "vscord.status.details.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Should details be shown?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.details.idle.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Should details be shown when idling?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.details.text.idle": {
            "type": "string",
            "default": "Idling",
            "description": "The text to show when idling.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Idling",
            "restricted": false
        },
        "vscord.status.details.text.editing": {
            "type": "string",
            "default": "In {workspace} {problems}",
            "description": "The text to show when editing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "In {workspace} {problems}",
            "restricted": false
        },
        "vscord.status.details.text.debugging": {
            "type": "string",
            "default": "Debugging {file_name}{file_extension}",
            "description": "The text to show when debugging.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Debugging {file_name}{file_extension}",
            "restricted": false
        },
        "vscord.status.details.text.viewing": {
            "type": "string",
            "default": "In {workspace} {problems}",
            "description": "The text to show when viewing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "In {workspace} {problems}",
            "restricted": false
        },
        "vscord.status.details.text.notInFile": {
            "type": "string",
            "default": "Not in a file!",
            "description": "The text to show when you are not in a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Not in a file!",
            "restricted": false
        },
        "vscord.status.details.text.noWorkSpaceText": {
            "type": "string",
            "default": "no workspace",
            "description": "The text to show when you are not in a workspace and there is no workspace text.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "no workspace",
            "restricted": false
        },
        "vscord.status.state.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Should state be shown?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.state.idle.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Should state be shown when idling?",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.state.text.idle": {
            "type": "string",
            "default": "",
            "description": "The text to show when idling.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "vscord.status.state.text.editing": {
            "type": "string",
            "default": "Working on {file_name}{file_extension}:{current_line}:{current_column}",
            "description": "The text to show when editing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Working on {file_name}{file_extension}:{current_line}:{current_column}",
            "restricted": false
        },
        "vscord.status.state.text.debugging": {
            "type": "string",
            "default": "Debugging: {workspace}",
            "description": "The text to show when debugging.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Debugging: {workspace}",
            "restricted": false
        },
        "vscord.status.state.text.viewing": {
            "type": "string",
            "default": "Viewing {file_name}{file_extension}",
            "description": "The text to show when viewing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Viewing {file_name}{file_extension}",
            "restricted": false
        },
        "vscord.status.state.text.notInFile": {
            "type": "string",
            "default": "",
            "description": "The text to show when you are not in a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "vscord.status.state.text.noWorkspaceFound": {
            "type": "string",
            "default": "No workspace.",
            "description": "The text to show when no workspace is found.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "No workspace.",
            "restricted": false
        },
        "vscord.status.image.large.idle.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle-{app_id}.png",
            "description": "The image url to use when idling",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle-{app_id}.png",
            "restricted": false
        },
        "vscord.status.image.large.idle.text": {
            "type": "string",
            "default": "Idling",
            "description": "The large text to show when idling.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Idling",
            "restricted": false
        },
        "vscord.status.image.large.viewing.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{lang}.png",
            "description": "The image url to use when viewing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{lang}.png",
            "restricted": false
        },
        "vscord.status.image.large.viewing.text": {
            "type": "string",
            "default": "Viewing a {LANG} file",
            "description": "The large text to show when viewing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Viewing a {LANG} file",
            "restricted": false
        },
        "vscord.status.image.large.editing.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{lang}.png",
            "description": "The image url to use when editing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{lang}.png",
            "restricted": false
        },
        "vscord.status.image.large.editing.text": {
            "type": "string",
            "default": "Editing a {LANG} file",
            "description": "The large text to show when editing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Editing a {LANG} file",
            "restricted": false
        },
        "vscord.status.image.large.debugging.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/debugging.png",
            "description": "The image url to use when debugging.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/debugging.png",
            "restricted": false
        },
        "vscord.status.image.large.debugging.text": {
            "type": "string",
            "default": "Debugging a {LANG} file",
            "description": "The large text to show when debugging",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Debugging a {LANG} file",
            "restricted": false
        },
        "vscord.status.image.large.notInFile.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle-{app_id}.png",
            "description": "The image url to use when you are not in a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle-{app_id}.png",
            "restricted": false
        },
        "vscord.status.image.large.notInFile.text": {
            "type": "string",
            "default": "",
            "description": "The lage text to show when you are not in a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "vscord.status.image.small.idle.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle.png",
            "description": "The image url to use when idling.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle.png",
            "restricted": false
        },
        "vscord.status.image.small.idle.text": {
            "type": "string",
            "default": "zZz",
            "description": "The small text to show when idling.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "zZz",
            "restricted": false
        },
        "vscord.status.image.small.viewing.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{app_id}.png",
            "description": "The image url to use when viewing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{app_id}.png",
            "restricted": false
        },
        "vscord.status.image.small.viewing.text": {
            "type": "string",
            "default": "{app_name}",
            "description": "The small text to show when viewing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "{app_name}",
            "restricted": false
        },
        "vscord.status.image.small.editing.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{app_id}.png",
            "description": "The image url to use when editing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/{app_id}.png",
            "restricted": false
        },
        "vscord.status.image.small.editing.text": {
            "type": "string",
            "default": "{app_name}",
            "description": "The small text to show when editing a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "{app_name}",
            "restricted": false
        },
        "vscord.status.image.small.debugging.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/debugging.png",
            "description": "The image url to use when debugging.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/debugging.png",
            "restricted": false
        },
        "vscord.status.image.small.debugging.text": {
            "type": "string",
            "default": "{app_name}",
            "description": "The small text to show when debugging.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "{app_name}",
            "restricted": false
        },
        "vscord.status.image.small.notInFile.key": {
            "type": "string",
            "default": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle.png",
            "description": "The image url to use when you are not in a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://raw.githubusercontent.com/LeonardSSH/vscord/main/assets/icons/idle.png",
            "restricted": false
        },
        "vscord.status.image.small.notInFile.text": {
            "type": "string",
            "default": "Snoozin...",
            "description": "The small text to show when you are not in a file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Snoozin...",
            "restricted": false
        },
        "vscord.status.buttons.button1.enabled": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.buttons.button1.active.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button1.active.label": {
            "type": "string",
            "default": "Active Label Button 1",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Active Label Button 1",
            "restricted": false
        },
        "vscord.status.buttons.button1.active.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button1.inactive.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button1.inactive.label": {
            "type": "string",
            "default": "Inactive Label Button 1",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Inactive Label Button 1",
            "restricted": false
        },
        "vscord.status.buttons.button1.inactive.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button1.idle.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button1.idle.label": {
            "type": "string",
            "default": "Idle Label Button 1",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Idle Label Button 1",
            "restricted": false
        },
        "vscord.status.buttons.button1.idle.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button1.git.active.enabled": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.buttons.button1.git.active.label": {
            "type": "string",
            "default": "View Repository",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "View Repository",
            "restricted": false
        },
        "vscord.status.buttons.button1.git.active.url": {
            "type": "string",
            "default": "{git_url}",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "{git_url}",
            "restricted": false
        },
        "vscord.status.buttons.button1.git.inactive.enabled": {
            "type": "boolean",
            "default": true,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.buttons.button1.git.inactive.label": {
            "type": "string",
            "default": "View Repository",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "View Repository",
            "restricted": false
        },
        "vscord.status.buttons.button1.git.inactive.url": {
            "type": "string",
            "default": "{git_url}",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "{git_url}",
            "restricted": false
        },
        "vscord.status.buttons.button1.git.idle.enabled": {
            "type": "boolean",
            "default": true,
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.status.buttons.button1.git.idle.label": {
            "type": "string",
            "default": "View Repository",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "View Repository",
            "restricted": false
        },
        "vscord.status.buttons.button1.git.idle.url": {
            "type": "string",
            "default": "{git_url}",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "{git_url}",
            "restricted": false
        },
        "vscord.status.buttons.button2.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.active.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.active.label": {
            "type": "string",
            "default": "Active Label Button 2",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Active Label Button 2",
            "restricted": false
        },
        "vscord.status.buttons.button2.active.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button2.inactive.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.inactive.label": {
            "type": "string",
            "default": "Inactive Label Button 2",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Inactive Label Button 2",
            "restricted": false
        },
        "vscord.status.buttons.button2.inactive.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button2.idle.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.idle.label": {
            "type": "string",
            "default": "Idle Label Button 2",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Idle Label Button 2",
            "restricted": false
        },
        "vscord.status.buttons.button2.idle.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button2.git.active.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.git.active.label": {
            "type": "string",
            "default": "Git Active Label Button 2",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Git Active Label Button 2",
            "restricted": false
        },
        "vscord.status.buttons.button2.git.active.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button2.git.inactive.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.git.inactive.label": {
            "type": "string",
            "default": "Git Inactive Label Button 2",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Git Inactive Label Button 2",
            "restricted": false
        },
        "vscord.status.buttons.button2.git.inactive.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.status.buttons.button2.git.idle.enabled": {
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.status.buttons.button2.git.idle.label": {
            "type": "string",
            "default": "Git Idle Label Button 2",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "Git Idle Label Button 2",
            "restricted": false
        },
        "vscord.status.buttons.button2.git.idle.url": {
            "type": "string",
            "default": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "minLength": 1,
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
            "restricted": false
        },
        "vscord.file.size.round": {
            "type": "number",
            "default": 2,
            "description": "The number of decimal places to round the file size to.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": 2,
            "restricted": false
        },
        "vscord.file.size.spacer": {
            "type": "string",
            "default": " ",
            "description": "Spacer between the number and the unit.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": " ",
            "restricted": false
        },
        "vscord.behaviour.additionalFileMapping": {
            "type": "object",
            "default": {},
            "additionalProperties": {
                "type": "string"
            },
            "description": "Additional regex to check for language, key is regex and value is the language.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "vscord.behaviour.suppressNotifications": {
            "type": "boolean",
            "default": false,
            "description": "Suppresses all notifications from the extension.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.behavoiur.prioritizeLanguagesOverExtensions": {
            "type": "boolean",
            "default": false,
            "description": "Prioritize language defined by editor over file extension when determining the language for the file.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscord.file.size.humanReadable": {
            "type": "boolean",
            "default": true,
            "description": "If true, the file size will be displayed in a human readable format (e.g. 1.2 MB). If false, the file size will be displayed in bytes.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vscord.file.size.standard": {
            "type": "string",
            "enum": [
                "iec",
                "jedec"
            ],
            "default": "iec",
            "description": "The unit standard to use when displaying the file size.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": "iec",
            "restricted": false
        },
        "vscord.behaviour.debug": {
            "type": "boolean",
            "default": false,
            "description": "Enable debug mode",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rpc.id": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.app.id#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.app.id instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.appName": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.app.name#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.app.name instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.enabled": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.enabled instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.detailsEditing": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details.text.editing#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details.text.editing instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.detailsIdling": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details.text.idle#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details.text.idle instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.detailsDebugging": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details.text.debugging#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details.text.debugging instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.detailsViewing": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details.text.viewing#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details.text.viewing instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.lowerDetailsEditing": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.state.text.editing#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.state.text.editing instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.lowerDetailsIdling": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.state.text.idle#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.state.text.idle instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.lowerDetailsDebugging": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.state.text.debugging#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.state.text.debugging instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.lowerDetailsViewing": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.state.text.viewing#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.state.text.viewing instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.lowerDetailsNoWorkspaceFound": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.state.text.noWorkspaceFound#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.state.text.noWorkspaceFound instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.baseImageLink": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.image#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.image instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.largeImage": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.image#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.image instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.largeImageIdling": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.image.small.idle.key#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.image.small.idle.key instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.smallImage": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.image.small#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.image.small instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.removeElapsedTime": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.showElapsedTime#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.showElapsedTime instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.removeDetails": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details.enabled instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.removeLowerDetails": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.removeLowerDetailsIdling": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.details.text.idle#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.details.text.idle instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.showProblems": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.problems.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.problems.enabled instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.problemsText": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.problems.text#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.problems.text instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.ignoreWorkspaces": {
            "type": "array",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.ignore.workspaces#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.ignore.workspaces instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": [],
            "restricted": false
        },
        "rpc.ignoreWorkspacesText": {
            "type": [
                "string",
                "object"
            ],
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.ignore.workspacesText#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.ignore.workspacesText instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.checkIdle": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.idle.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.idle.enabled instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.disconnectOnIdle": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.idle.disconnectOnIdle#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.idle.disconnectOnIdle instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.resetElapsedTimeAfterIdle": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.idle.resetElapsedTime#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.idle.resetElapsedTime instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.idleTimeout": {
            "type": "number",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.idle.timeout#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.idle.timeout instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": 0,
            "restricted": false
        },
        "rpc.idleText": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.image.small.idle.text#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.image.small.idle.text instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.buttonEnabled": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.enabled instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.buttonActiveLabel": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.active.label#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.active.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.status.button.active.enabled": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.git.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.git.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "vscord.status.button.active.label": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.git.label#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.git.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.status.button.active.url": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.git.url#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.git.url instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.status.button.idle.enabled": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.idle.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.idle.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "vscord.status.button.idle.label": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.idle.label#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.idle.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.status.button.idle.url": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.idle.url#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.idle.url instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.status.button.inactive.enabled": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.enabled#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.inactive.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "vscord.status.button.inactive.label": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.label#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.inactive.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "vscord.status.button.inactive.url": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.url#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.inactive.url instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.buttonActiveUrl": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.active.url#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.active.url instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.buttonInactiveLabel": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.label#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.inactive.label instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.buttonInactiveUrl": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.status.buttons.button1.inactive.url#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.status.buttons.button1.inactive.url instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.ignoreRepositories": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.ignore.repositories#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.ignore.repositories instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": [],
            "restricted": false
        },
        "rpc.ignoreOrganizations": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.ignore.organizations#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.ignore.organizations instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": [],
            "restricted": false
        },
        "rpc.ignoreGitHosts": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.ignore.gitHosts#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.ignore.gitHosts instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": [],
            "restricted": false
        },
        "rpc.suppressNotifications": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.behaviour.suppressNotifications#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.behaviour.suppressNotifications instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.prioritizeLanguagesOverExtensions": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.behaviour.prioritizeLanguagesOverExtensions#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.behaviour.prioritizeLanguagesOverExtensions instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.fileSizeHumanReadable": {
            "type": "boolean",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.behaviour.size.humanReadable#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.behaviour.size.humanReadable instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": false,
            "restricted": false
        },
        "rpc.fileSizeSpec": {
            "type": "string",
            "enum": [
                "si",
                "iec",
                "jedec"
            ],
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.file.size.standard#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.file.size.standard instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "rpc.fileSizeFixed": {
            "type": "number",
            "markdownDeprecationMessage": "**Deprecated**",
            "deprecationMessage": "Deprecated",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": 0,
            "restricted": false
        },
        "rpc.fileSizeSpacer": {
            "type": "string",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vscord.file.size.spacer#` instead.",
            "deprecationMessage": "Deprecated: Please use vscord.file.size.spacer instead.",
            "scope": 3,
            "source": {
                "id": "LeonardSSH.vscord",
                "displayName": "Discord Rich Presence"
            },
            "default": "",
            "restricted": false
        },
        "direnv.status.showChangesCount": {
            "type": "boolean",
            "default": true,
            "description": "Show the number of changed environment variables",
            "scope": 3,
            "source": {
                "id": "mkhl.direnv",
                "displayName": "direnv"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "direnv.restart.automatic": {
            "type": "boolean",
            "default": false,
            "description": "Automatically restart extension host upon environment changes",
            "scope": 3,
            "source": {
                "id": "mkhl.direnv",
                "displayName": "direnv"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vs-kubernetes": {
            "type": "object",
            "title": "Additional settings",
            "description": "Kubernetes configuration",
            "properties": {
                "vs-kubernetes.namespace": {
                    "type": "string",
                    "description": "The namespace to use for all commands"
                },
                "vs-kubernetes.kubectl-path": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a kubectl binary."
                },
                "vs-kubernetes.helm-path": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a helm binary."
                },
                "vs-kubernetes.minikube-path": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a minikube binary."
                },
                "vs-kubernetes.kubectl-path.windows": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a kubectl binary."
                },
                "vs-kubernetes.helm-path.windows": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a helm binary."
                },
                "vs-kubernetes.minikube-path.windows": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a minikube binary."
                },
                "vs-kubernetes.kubectl-path.mac": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a kubectl binary."
                },
                "vs-kubernetes.helm-path.mac": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a helm binary."
                },
                "vs-kubernetes.minikube-path.mac": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a minikube binary."
                },
                "vs-kubernetes.kubectl-path.linux": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a kubectl binary."
                },
                "vs-kubernetes.helm-path.linux": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a helm binary."
                },
                "vs-kubernetes.minikube-path.linux": {
                    "type": "string",
                    "description": "[deprecated - use top level property] File path to a minikube binary."
                },
                "vs-kubernetes.kubectlVersioning": {
                    "type": "string",
                    "enum": [
                        "user-provided",
                        "infer"
                    ],
                    "description": "Whether to use the kubectl binary you provide ('user-provided'), or to automatically download the right version of kubectl for each cluster ('infer')."
                },
                "vs-kubernetes.kubeconfig": {
                    "type": "string",
                    "description": "File path to the kubeconfig file."
                },
                "vs-kubernetes.knownKubeconfigs": {
                    "type": "array",
                    "description": "File paths to kubeconfig files from which you can select."
                },
                "vs-kubernetes.autoCleanupOnDebugTerminate": {
                    "type": "boolean",
                    "description": "Once the debug session is terminated, automatically clean up the created Deployment and associated Pod by the command \"Kubernetes: Debug (Launch)\"."
                },
                "vs-kubernetes.outputFormat": {
                    "enum": [
                        "json",
                        "yaml"
                    ],
                    "type": "string",
                    "description": "Output format for Kubernetes specs. One of 'json' or 'yaml' (default)."
                },
                "vs-kubernetes.nodejs-autodetect-remote-root": {
                    "type": "boolean",
                    "description": "If true will try to automatically get the root location of the source code in the container (nodejs)."
                },
                "vs-kubernetes.nodejs-remote-root": {
                    "type": "string",
                    "description": "The root location of the source code in the container (nodejs)."
                },
                "vs-kubernetes.nodejs-debug-port": {
                    "type": "number",
                    "description": "Remote debugging port for nodejs. Usually 9229."
                },
                "checkForMinikubeUpgrade": {
                    "type": "boolean",
                    "description": "Notify on startup if update is available for minikube"
                },
                "disable-lint": {
                    "type": "boolean",
                    "description": "Disable all linting of Kubernetes files"
                },
                "disable-linters": {
                    "type": "array",
                    "description": "List of linters by name to disable"
                },
                "resource-commands-on-files": {
                    "type": "boolean",
                    "description": "If true, show Kubernetes resource commands on file context menu for all YAML files"
                },
                "imageBuildTool": {
                    "type": "string",
                    "enum": [
                        "Docker",
                        "Buildah"
                    ],
                    "description": "Container image build tool. By default, Docker."
                },
                "vs-kubernetes.python-autodetect-remote-root": {
                    "type": "boolean",
                    "description": "If true will try to automatically get the root location of the source code in the container (Python)."
                },
                "vs-kubernetes.python-remote-root": {
                    "type": "string",
                    "description": "The root location of the source code in the container (Python)."
                },
                "vs-kubernetes.python-debug-port": {
                    "type": "number",
                    "description": "Remote debugging port for Python. Usually 5678."
                },
                "vs-kubernetes.dotnet-vsdbg-path": {
                    "type": "string",
                    "description": "The path to the vsdbg debugger in the container (.NET)."
                },
                "vs-kubernetes.dotnet-source-file-map": {
                    "type": "string",
                    "description": "The compilation root for the vsdbg debugger in order to have a sourceFileMap in the attach configuration of debug (.NET)."
                },
                "vs-kubernetes.debug-just-my-code": {
                    "type": "boolean",
                    "description": "Enable/disable justMyCode debug configuration property for .NET, Python."
                },
                "vs-kubernetes.resources-to-watch": {
                    "type": "array",
                    "description": "List of resources to be watched."
                },
                "vs-kubernetes.enable-snap-flag": {
                    "type": "boolean",
                    "description": "Enables compatibility with instances of VS Code that were installed using snap."
                },
                "vs-kubernetes.disable-context-info-status-bar": {
                    "type": "boolean",
                    "description": "Disable displaying your current Kubernetes context in VS Code's status bar."
                },
                "vs-kubernetes.disable-namespace-info-status-bar": {
                    "type": "boolean",
                    "description": "Disable displaying your current Kubernetes namespace in VS Code's status bar."
                },
                "vs-kubernetes.local-tunnel-debug-provider": {
                    "type": "string",
                    "description": "Configure the Local Tunnel debug provider you want to use by default."
                },
                "vs-kubernetes.enable-minimal-workflow": {
                    "type": "boolean",
                    "description": "Enables the minimal workflow for several actions (Get, Describe, Scale, Expose, Switch). It reduces the queries to the cluster but the guided prompt has limited options."
                },
                "vs-kubernetes.suppress-kubectl-not-found-alerts": {
                    "type": "boolean",
                    "default": false,
                    "description": "Suppresses the display of warnings if no kubectl binary is available"
                },
                "vs-kubernetes.suppress-helm-not-found-alerts": {
                    "type": "boolean",
                    "default": false,
                    "description": "Suppresses the display of warnings if no helm binary is available"
                },
                "vs-kubernetes.ignore-recommendations": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to silence Kubernetes extension recommendation notifications."
                },
                "vs-kubernetes.crd-code-completion": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled"
                    ],
                    "description": "Set the smart code completion for CRDs. This would always prevent/allow the plugin to fetch all custom schemas from all CRDs on cluster, despite of their number."
                },
                "vs-kubernetes.minikube-show-information-expiration": {
                    "type": "string",
                    "default": "Install",
                    "description": "Set installation expiration for displaying minikube installation dialog box."
                }
            },
            "default": {
                "vs-kubernetes.namespace": "",
                "vs-kubernetes.kubectl-path": "",
                "vs-kubernetes.helm-path": "",
                "vs-kubernetes.minikube-path": "",
                "vs-kubernetes.kubectlVersioning": "user-provided",
                "vs-kubernetes.outputFormat": "yaml",
                "vs-kubernetes.kubeconfig": "",
                "vs-kubernetes.knownKubeconfigs": [],
                "vs-kubernetes.autoCleanupOnDebugTerminate": false,
                "vs-kubernetes.nodejs-autodetect-remote-root": true,
                "vs-kubernetes.nodejs-remote-root": "",
                "vs-kubernetes.nodejs-debug-port": 9229,
                "vs-kubernetes.dotnet-vsdbg-path": "~/vsdbg/vsdbg",
                "vs-kubernetes.local-tunnel-debug-provider": "",
                "checkForMinikubeUpgrade": true,
                "imageBuildTool": "Docker"
            },
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": {
                "vs-kubernetes.namespace": "",
                "vs-kubernetes.kubectl-path": "",
                "vs-kubernetes.helm-path": "",
                "vs-kubernetes.minikube-path": "",
                "vs-kubernetes.kubectlVersioning": "user-provided",
                "vs-kubernetes.outputFormat": "yaml",
                "vs-kubernetes.kubeconfig": "",
                "vs-kubernetes.knownKubeconfigs": [],
                "vs-kubernetes.autoCleanupOnDebugTerminate": false,
                "vs-kubernetes.nodejs-autodetect-remote-root": true,
                "vs-kubernetes.nodejs-remote-root": "",
                "vs-kubernetes.nodejs-debug-port": 9229,
                "vs-kubernetes.dotnet-vsdbg-path": "~/vsdbg/vsdbg",
                "vs-kubernetes.local-tunnel-debug-provider": "",
                "checkForMinikubeUpgrade": true,
                "imageBuildTool": "Docker"
            },
            "restricted": false
        },
        "vsdocker.imageUser": {
            "type": "string",
            "default": null,
            "description": "Image prefix for docker images ie 'docker.io/brendanburns'",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.follow": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to follow logs by default in the log viewer.",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.timestamp": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to show timestamps by default in the log viewer.",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.since": {
            "type": "integer",
            "default": -1,
            "minimum": -1,
            "description": "How far back to fetch logs from in seconds by default. Set to -1 for all logs.",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": -1,
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.tail": {
            "type": "integer",
            "default": -1,
            "minimum": -1,
            "description": "The number of recent logs to display by default in the log viewer. Set to -1 for all log lines.",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": -1,
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.destination": {
            "type": "string",
            "default": "Webview",
            "description": "Where to display logs, defaults to the dedicated Webview.",
            "enum": [
                "Webview",
                "Terminal"
            ],
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": "Webview",
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.wrap": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to wrap lines by default in the log viewer.",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vscode-kubernetes.log-viewer.autorun": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to automatically begin fetching logs once the log viewer is opened using the default settings.",
            "scope": 3,
            "source": {
                "id": "ms-kubernetes-tools.vscode-kubernetes-tools",
                "displayName": "Kubernetes"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.languageServer": {
            "default": "Default",
            "description": "Defines type of the language server.",
            "enum": [
                "Default",
                "Jedi",
                "Pylance",
                "None"
            ],
            "enumDescriptions": [
                "Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.",
                "Use Jedi behind the Language Server Protocol (LSP) as a language server.",
                "Use Pylance as a language server.",
                "Disable language server capabilities."
            ],
            "scope": 3,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Default",
            "restricted": false
        },
        "python.analysis.logLevel": {
            "type": "string",
            "default": "Information",
            "description": "Specifies the level of logging for the Output panel",
            "enum": [
                "Error",
                "Warning",
                "Information",
                "Trace"
            ],
            "scope": 3,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": "Information",
            "restricted": false
        },
        "C_Cpp.codeFolding": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "default": "enabled",
            "description": "If enabled, code folding ranges are provided by the language server.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "enabled",
            "restricted": false
        },
        "C_Cpp.enhancedColorization": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "default": "enabled",
            "markdownDescription": "If enabled, code is colorized based on IntelliSense. This setting only applies if `#C_Cpp.intelliSenseEngine#` is set to `default`.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "enabled",
            "restricted": false
        },
        "C_Cpp.workspaceSymbols": {
            "type": "string",
            "enum": [
                "All",
                "Just My Code"
            ],
            "default": "Just My Code",
            "description": "The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "Just My Code",
            "restricted": false
        },
        "C_Cpp.workspaceParsingPriority": {
            "type": "string",
            "enum": [
                "highest",
                "high",
                "medium",
                "low"
            ],
            "default": "highest",
            "markdownDescription": "Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values `highest`/`high`/`medium`/`low` correspond to approximately 100/75/50/25% CPU usage.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "highest",
            "restricted": false
        },
        "C_Cpp.commentContinuationPatterns": {
            "type": "array",
            "default": [
                "/**"
            ],
            "items": {
                "anyOf": [
                    {
                        "type": "string",
                        "markdownDescription": "The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ` * ` for multiline comment blocks or this string for single line comment blocks."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "begin": {
                                "type": "string",
                                "description": "The pattern that begins a multiline or single line comment block."
                            },
                            "continue": {
                                "type": "string",
                                "description": "The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."
                            }
                        }
                    }
                ]
            },
            "uniqueItems": true,
            "description": "Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": [
                "/**"
            ],
            "restricted": false
        },
        "C_Cpp.debugger.useBacktickCommandSubstitution": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If `true`, debugger shell command substitution will use obsolete backtick ``(`)``.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.sshTargetsView": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled",
                "default"
            ],
            "default": "default",
            "description": "Controls whether the SSH Targets view is visible. By default, enable the view when an SSH command is invoked.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "C_Cpp.loggingLevel": {
            "type": "string",
            "enum": [
                "None",
                "Error",
                "Warning",
                "Information",
                "Debug"
            ],
            "default": "Error",
            "markdownDescription": "The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: `None` < `Error` < `Warning` < `Information` < `Debug`.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "C_Cpp.autoAddFileAssociations": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether files are automatically added to `#files.associations#` when they are the target of a navigation operation from a C/C++ file.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.experimentalFeatures": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "default": "disabled",
            "description": "Controls whether \"experimental\" features are usable.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "disabled",
            "restricted": false
        },
        "C_Cpp.caseSensitiveFileSupport": {
            "type": "string",
            "enum": [
                "default",
                "enabled"
            ],
            "default": "default",
            "markdownDescription": "If set to `default`, the file system of the workspace is assumed to be case insensitive on Windows and case sensitive on macOS or Linux. If set to `enabled`, the file system of the workspace is assumed to be case sensitive on Windows.",
            "scope": 3,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "liveshare.anonymousGuestApproval": {
            "default": "prompt",
            "enum": [
                "prompt",
                "accept",
                "reject"
            ],
            "description": "Controls how to handle join requests from anonymous guests.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "prompt",
            "restricted": true
        },
        "liveshare.launcherClient": {
            "type": "string",
            "default": "web",
            "enum": [
                "web",
                "visualStudioCode",
                "visualStudio"
            ],
            "description": "Specifies the client to launch when clicking on a Live Share URL.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "web",
            "restricted": false
        },
        "liveshare.diagnosticLoggingLevel": {
            "default": "Warning",
            "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warning",
                "Error",
                "Critical",
                "Off"
            ],
            "description": "Specifies the level of logging output from Visual Studio Live Share Extension",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "Warning",
            "restricted": false
        },
        "liveshare.diagnosticLogging": {
            "type": "boolean",
            "default": false,
            "description": "Enables the Visual Studio Live Share output channel.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "liveshare.diagnosticMode": {
            "type": "boolean",
            "default": false,
            "description": "Enables diagnostic notifications and logs.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "liveshare.connectionMode": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "direct",
                "relay"
            ],
            "description": "Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "liveshare.nameTagVisibility": {
            "type": "string",
            "default": "Activity",
            "enum": [
                "Always",
                "Activity",
                "Never"
            ],
            "description": "Controls when to display a participant's name tag instead of just their cursor.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "Activity",
            "restricted": false
        },
        "liveshare.guestApprovalRequired": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the host needs to explicitly approve guest requests to join collaboration sessions.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "liveshare.shareExternalFiles": {
            "type": "boolean",
            "default": true,
            "description": "Automatically share external files opened by the host during a collaboration session.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": true
        },
        "liveshare.joinDebugSessionOption": {
            "type": "string",
            "default": "Automatic",
            "enum": [
                "Automatic",
                "Manual",
                "Prompt"
            ],
            "description": "Controls how the participant will join incoming shared debug sessions.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "Automatic",
            "restricted": true
        },
        "liveshare.showInStatusBar": {
            "type": "string",
            "default": "always",
            "enum": [
                "always",
                "whileCollaborating",
                "never"
            ],
            "description": "Show or hide the Live Share status bar items.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "always",
            "restricted": false
        },
        "liveshare.sharedTerminalWidth": {
            "type": "number",
            "default": 120,
            "description": "Width of shared terminal window, characters.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": 120,
            "restricted": false
        },
        "liveshare.sharedTerminalHeight": {
            "type": "number",
            "default": 50,
            "description": "Height of shared terminal window, characters.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": 50,
            "restricted": false
        },
        "liveshare.featureSet": {
            "type": "string",
            "default": "stable",
            "enum": [
                "stable",
                "insiders"
            ],
            "markdownDescription": "Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy).",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "stable",
            "restricted": false
        },
        "liveshare.keepAliveInterval": {
            "type": "number",
            "default": 20,
            "description": "Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": 20,
            "restricted": false
        },
        "liveshare.allowGuestTaskControl": {
            "type": "boolean",
            "default": false,
            "description": "Allow guests to run and terminate workspace tasks.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "liveshare.allowGuestDebugControl": {
            "type": "boolean",
            "default": false,
            "description": "Allow guests to start and stop debugging sessions.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "liveshare.languages.allowGuestCommandControl": {
            "type": "boolean",
            "default": false,
            "description": "Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "liveshare.notebooks.allowGuestExecuteCells": {
            "type": "boolean",
            "default": false,
            "description": "Allow guests to run notebook cells",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "liveshare.focusBehavior": {
            "type": "string",
            "default": "accept",
            "description": "Specifies how to respond to focus requests from other participants.",
            "enum": [
                "accept",
                "prompt"
            ],
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "accept",
            "restricted": false
        },
        "liveshare.alwaysFollowHost": {
            "type": "boolean",
            "default": false,
            "description": "Ensures that the session's host is always followed.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "liveshare.showReadOnlyUsersInEditor": {
            "type": "string",
            "default": "whileFollowing",
            "description": "Controls visibility of the cursor and highlights for read-only users.",
            "enum": [
                "whileFollowing",
                "always"
            ],
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "whileFollowing",
            "restricted": true
        },
        "liveshare.increasedGuestLimit": {
            "type": "boolean",
            "default": true,
            "description": "Increases the guest limit from 5 to 30.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "liveshare.autoShareTerminals": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether terminals are automatically shared with guests (read-only).",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": true
        },
        "liveshare.codeLens": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to show the CodeLens for starting a collaboration session.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "liveshare.showVerboseNotifications": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to show verbose notifications, such as when a guest joins and leaves a session.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "liveshare.populateGitCoAuthors": {
            "type": "string",
            "default": "always",
            "description": "Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).",
            "enum": [
                "always",
                "never"
            ],
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "always",
            "restricted": false
        },
        "liveshare.autoShareServers": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": true
        },
        "liveshare.openSharedServers": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to automatically open shared servers in your default browser.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": true
        },
        "liveshare.publishWorkspaceInfo": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether to publish your current workspace folder to other users",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "liveshare.comments": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to allow comments in collaboration sessions",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "liveshare.accessibility.accessibilityFeaturesEnabled": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "description": "Enables various accessibility features, such as audio cues about what is happening in the session.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "liveshare.accessibility.outputDevice": {
            "type": "string",
            "default": "Default",
            "description": "Output device to play audio in accessibility mode.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "Default",
            "restricted": false
        },
        "liveshare.accessibility.voiceVolume": {
            "type": "number",
            "minimum": 0,
            "maxiumum": 100,
            "default": 100,
            "description": "Controls the volume of voice audio in accessibility mode (between 0 and 100).",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": 100,
            "restricted": false
        },
        "liveshare.accessibility.soundVolume": {
            "type": "number",
            "minimum": 0,
            "maxiumum": 100,
            "default": 100,
            "description": "Controls the volume of sound audio in accessibility mode (between 0 and 100).",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": 100,
            "restricted": false
        },
        "liveshare.accessibility.speechRate": {
            "type": "number",
            "minimum": 1,
            "maxiumum": 10,
            "default": 2,
            "description": "Controls the rate of speech in accessibility mode.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": 2,
            "restricted": false
        },
        "liveshare.accessibility.voice": {
            "type": "string",
            "default": "en-US-Jenny",
            "enum": [
                "en-AU-Natasha",
                "en-AU-William",
                "en-CA-Clara",
                "en-CA-Liam",
                "en-HK-Yan",
                "en-HK-Sam",
                "en-IN-Neerja",
                "en-IN-Prabhat",
                "en-IE-Emily",
                "en-IE-Connor",
                "en-NZ-Molly",
                "en-NZ-Mitchell",
                "en-PH-Rosa",
                "en-PH-James",
                "en-SG-Luna",
                "en-SG-Wayne",
                "en-ZA-Leah",
                "en-ZA-Luke",
                "en-GB-Libby",
                "en-GB-Sonia",
                "en-GB-Mia",
                "en-GB-Ryan",
                "en-US-Aria",
                "en-US-Jenny",
                "en-US-Guy",
                "en-US-Sara",
                "en-US-Amber",
                "en-US-Ashley",
                "en-US-Cora",
                "en-US-Elizabeth",
                "en-US-Michelle",
                "en-US-Monica",
                "en-US-Ana",
                "en-US-Brandon",
                "en-US-Christopher",
                "en-US-Jacob",
                "en-US-Eric",
                "zh-HK-HiuGaai",
                "zh-HK-WanLung",
                "zh-CN-Xiaohan",
                "zh-CN-Yunxi",
                "zh-TW-HsiaoChen",
                "zh-TW-YunJhe",
                "fr-FR-Denise",
                "fr-FR-Henri",
                "de-DE-Katja",
                "de-DE-Conrad",
                "it-IT-Elsa",
                "it-IT-Diego",
                "es-ES-Elvira",
                "es-ES-Alvaro",
                "ja-JP-Nanami",
                "ja-JP-Keita",
                "ko-KR-SunHi",
                "ko-KR-InJoon",
                "ru-RU-Dariya",
                "ru-RU-Dmitry",
                "bg-BG-Kalina",
                "bg-BG-Borislav",
                "hu-HU-Noemi",
                "hu-HU-Tamas",
                "pt-BR-Francisca",
                "pt-BR-Antonio",
                "tr-TR-Emel",
                "tr-TR-Ahmet",
                "pl-PL-Agnieszka",
                "pl-PL-Marek",
                "cs-CZ-Vlasta",
                "cs-CZ-Antonin"
            ],
            "description": "The voice used for speech in accessibility mode.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": "en-US-Jenny",
            "restricted": false
        },
        "liveshare.accessibility.voiceEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Enables spoken announcements about activity.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "liveshare.accessibility.soundsEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Enables sound effects about activity.",
            "scope": 3,
            "source": {
                "id": "ms-vsliveshare.vsliveshare",
                "displayName": "Live Share"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "color-highlight.enable": {
            "default": true,
            "description": "Controls if plugin is enabled",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "color-highlight.languages": {
            "default": [
                "*"
            ],
            "description": "An array of language ids which should be highlighted by Color Highlight. \"*\" to trigger on any language; Prepend language id with \"!\" to exclude the language (i.e \"!typescript\", \"!javascript\")",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": [
                "*"
            ],
            "restricted": false
        },
        "color-highlight.matchWords": {
            "default": false,
            "description": "Highlight color words in all files (grey, green, etc.)",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "color-highlight.matchRgbWithNoFunction": {
            "default": false,
            "description": "Highlight rgb without functions like rgb() ('255, 255, 255', [255, 255, 255], '255 255 255', etc.)",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "color-highlight.rgbWithNoFunctionLanguages": {
            "default": [
                "*"
            ],
            "description": "An array of language ids which should be highlighted by Color Highlight with the rgbWithNoFunction pattern. \"*\" to trigger on any language; Prepend language id with \"!\" to exclude the language (i.e \"!typescript\", \"!javascript\")",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": [
                "*"
            ],
            "restricted": false
        },
        "color-highlight.markerType": {
            "default": "background",
            "description": "Style of the highlight. Can be 'dot-before', 'dot-after', 'foreground', 'background', 'outline', 'underline'",
            "type": "string",
            "enum": [
                "dot-before",
                "dot-after",
                "foreground",
                "background",
                "outline",
                "underline"
            ],
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": "background",
            "restricted": false
        },
        "color-highlight.markRuler": {
            "default": true,
            "description": "Highlight colors on the ruler (scroll bar), true/false",
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "color-highlight.sass.includePaths": {
            "default": [],
            "description": "Array of absolute paths to search while perform file lookups.",
            "type": "array",
            "scope": 3,
            "source": {
                "id": "naumovs.color-highlight",
                "displayName": "Color Highlight"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "typst-lsp.exportPdf": {
            "title": "Export PDF",
            "description": "The extension can export PDFs of your Typst files. This setting controls whether this feature is enabled and how often it runs.",
            "type": "string",
            "default": "onSave",
            "enum": [
                "never",
                "onSave",
                "onType"
            ],
            "enumDescriptions": [
                "Never export PDFs, you will manually run typst.",
                "Export PDFs when you save a file.",
                "Export PDFs as you type in a file."
            ],
            "scope": 3,
            "source": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            },
            "defaultDefaultValue": "onSave",
            "restricted": false
        },
        "typst-lsp.rootPath": {
            "title": "Root path",
            "description": "Configure the root for absolute paths in typst",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "scope": 3,
            "source": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "typst-lsp.semanticTokens": {
            "title": "Semantic tokens mode",
            "description": "Enable or disable semantic tokens (LSP syntax highlighting)",
            "type": "string",
            "default": "enable",
            "enum": [
                "enable",
                "disable"
            ],
            "enumDescriptions": [
                "Use semantic tokens for syntax highlighting",
                "Do not use semantic tokens for syntax highlighting"
            ],
            "scope": 3,
            "source": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            },
            "defaultDefaultValue": "enable",
            "restricted": false
        },
        "typst-lsp.serverPath": {
            "title": "Path to server executable",
            "description": "The extension can use a local typst-lsp executable instead of the one bundled with the extension. This setting controls the path to the executable.",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "scope": 3,
            "source": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "typst-lsp.trace.server": {
            "scope": 3,
            "type": "string",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the language server.",
            "source": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "typst-lsp.experimentalFormatterMode": {
            "title": "Enable Experimental Formatter",
            "description": "The extension can format Typst files using typstfmt (experimental).",
            "type": "string",
            "default": "off",
            "enum": [
                "off",
                "on"
            ],
            "enumDescriptions": [
                "Formatter is not activated.",
                "Experimental formatter is activated."
            ],
            "scope": 3,
            "source": {
                "id": "nvarner.typst-lsp",
                "displayName": "Typst LSP"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "redhat.telemetry.enabled": {
            "type": "boolean",
            "default": null,
            "markdownDescription": "Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).",
            "scope": 3,
            "tags": [
                "telemetry",
                "usesOnlineServices"
            ],
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "yaml.yamlVersion": {
            "type": "string",
            "default": "1.2",
            "enum": [
                "1.1",
                "1.2"
            ],
            "markdownDescription": "Default YAML spec version",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "1.2",
            "restricted": false
        },
        "yaml.trace.server": {
            "type": "string",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VSCode and the YAML language service.",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "yaml.schemas": {
            "type": "object",
            "default": {},
            "description": "Associate schemas to YAML files in the current workspace",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "yaml.format.enable": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable default YAML formatter",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "yaml.format.singleQuote": {
            "type": "boolean",
            "default": false,
            "description": "Use single quotes instead of double quotes",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "yaml.format.bracketSpacing": {
            "type": "boolean",
            "default": true,
            "description": "Print spaces between brackets in objects",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "yaml.format.proseWrap": {
            "type": "string",
            "default": "preserve",
            "enum": [
                "preserve",
                "never",
                "always"
            ],
            "description": "Always: wrap prose if it exceeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "preserve",
            "restricted": false
        },
        "yaml.format.printWidth": {
            "type": "integer",
            "default": 80,
            "description": "Specify the line length that the printer will wrap on",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": 80,
            "restricted": false
        },
        "yaml.validate": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable validation feature",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "yaml.hover": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable hover feature",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "yaml.completion": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable completion feature",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "yaml.customTags": {
            "type": "array",
            "default": [],
            "description": "Custom tags for the parser to use",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "yaml.schemaStore.enable": {
            "type": "boolean",
            "default": true,
            "description": "Automatically pull available YAML schemas from JSON Schema Store",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "yaml.schemaStore.url": {
            "type": "string",
            "default": "https://www.schemastore.org/api/json/catalog.json",
            "description": "URL of schema store catalog to use",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "https://www.schemastore.org/api/json/catalog.json",
            "restricted": false
        },
        "yaml.disableAdditionalProperties": {
            "type": "boolean",
            "default": false,
            "description": "Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml.",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "yaml.disableDefaultProperties": {
            "type": "boolean",
            "default": false,
            "description": "Disable adding not required properties with default values into completion text.",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "yaml.maxItemsComputed": {
            "type": "integer",
            "default": 5000,
            "description": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": 5000,
            "restricted": false
        },
        "yaml.suggest.parentSkeletonSelectedFirst": {
            "type": "boolean",
            "default": false,
            "description": "If true, the user must select some parent skeleton first before autocompletion starts to suggest the rest of the properties. When yaml object is not empty, autocompletion ignores this setting and returns all properties and skeletons",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "yaml.style.flowMapping": {
            "type": "string",
            "enum": [
                "allow",
                "forbid"
            ],
            "default": "allow",
            "description": "Forbid flow style mappings",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "allow",
            "restricted": false
        },
        "yaml.style.flowSequence": {
            "type": "string",
            "enum": [
                "allow",
                "forbid"
            ],
            "default": "allow",
            "description": "Forbid flow style sequences",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "allow",
            "restricted": false
        },
        "yaml.keyOrdering": {
            "type": "boolean",
            "default": false,
            "description": "Enforces alphabetical ordering of keys in mappings when set to true",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "yaml.extension.recommendations": {
            "type": "boolean",
            "default": "true",
            "description": "Suggest additional extensions based on YAML usage.",
            "scope": 3,
            "source": {
                "id": "redhat.vscode-yaml",
                "displayName": "YAML"
            },
            "defaultDefaultValue": "true",
            "restricted": false
        },
        "rust-analyzer.cargoRunner": {
            "type": [
                "null",
                "string"
            ],
            "default": null,
            "description": "Custom cargo runner extension ID.",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.runnables.extraEnv": {
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "type": [
                                    "null",
                                    "string",
                                    "array"
                                ],
                                "default": null,
                                "markdownDescription": "Platform(s) filter like \"win32\" or [\"linux\", \"win32\"]. See [process.platform](https://nodejs.org/api/process.html#processplatform) values."
                            },
                            "mask": {
                                "type": "string",
                                "description": "Runnable name mask"
                            },
                            "env": {
                                "type": "object",
                                "description": "Variables in form of { \"key\": \"value\"}"
                            }
                        }
                    }
                },
                {
                    "type": "object",
                    "description": "Variables in form of { \"key\": \"value\"}"
                }
            ],
            "default": null,
            "markdownDescription": "Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command.",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.runnables.problemMatcher": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "$rustc"
            ],
            "markdownDescription": "Problem matchers to use for `rust-analyzer.run` command, eg `[\"$rustc\", \"$rust-panic\"]`.",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [
                "$rustc"
            ],
            "restricted": false
        },
        "rust-analyzer.statusBar.clickAction": {
            "type": "string",
            "enum": [
                "stopServer",
                "openLogs"
            ],
            "enumDescriptions": [
                "Stop Server",
                "Open Logs"
            ],
            "default": "openLogs",
            "markdownDescription": "Action to run when clicking the extension status bar item.",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "openLogs",
            "restricted": false
        },
        "rust-analyzer.server.extraEnv": {
            "type": [
                "null",
                "object"
            ],
            "additionalProperties": {
                "type": [
                    "string",
                    "number"
                ]
            },
            "default": null,
            "markdownDescription": "Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging.",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.trace.server": {
            "type": "string",
            "scope": 3,
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "enumDescriptions": [
                "No traces",
                "Error only",
                "Full log"
            ],
            "default": "off",
            "description": "Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users).",
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "rust-analyzer.trace.extension": {
            "description": "Enable logging of VS Code extensions itself.",
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.debug.engine": {
            "type": "string",
            "enum": [
                "auto",
                "vadimcn.vscode-lldb",
                "ms-vscode.cpptools"
            ],
            "default": "auto",
            "description": "Preferred debug engine.",
            "markdownEnumDescriptions": [
                "First try to use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), if it's not installed try to use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).",
                "Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)",
                "Use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "rust-analyzer.debug.sourceFileMap": {
            "type": [
                "object",
                "string"
            ],
            "const": "auto",
            "description": "Optional source file mappings passed to the debug engine.",
            "default": {
                "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {
                "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
            },
            "restricted": false
        },
        "rust-analyzer.debug.openDebugPane": {
            "markdownDescription": "Whether to open up the `Debug Panel` on debugging start.",
            "type": "boolean",
            "default": false,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.debug.engineSettings": {
            "type": "object",
            "default": {},
            "markdownDescription": "Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.restartServerOnConfigChange": {
            "markdownDescription": "Whether to restart the server automatically when certain settings that require a restart are changed.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.typing.continueCommentsOnNewline": {
            "markdownDescription": "Whether to prefix newlines after comments with the corresponding comment prefix.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.diagnostics.previewRustcOutput": {
            "markdownDescription": "Whether to show the main part of the rendered rustc output of a diagnostic message.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.diagnostics.useRustcErrorCode": {
            "markdownDescription": "Whether to show diagnostics using the original rustc error code. If this is false, all rustc diagnostics will have the code 'rustc(Click for full compiler diagnostics)'",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.discoverProjectRunner": {
            "markdownDescription": "Sets the extension responsible for determining which extension the rust-analyzer extension uses to generate `rust-project.json` files. This should should only be used\n if a build system like Buck or Bazel is also in use.",
            "default": null,
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.showUnlinkedFileNotification": {
            "markdownDescription": "Whether to show a notification for unlinked files asking the user to add the corresponding Cargo.toml to the linked projects setting.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.showDependenciesExplorer": {
            "markdownDescription": "Whether to show the dependencies view.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.assist.emitMustUse": {
            "markdownDescription": "Whether to insert #[must_use] when generating `as_` methods\nfor enum variants.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.assist.expressionFillDefault": {
            "markdownDescription": "Placeholder expression to use for missing expressions in assists.",
            "default": "todo",
            "type": "string",
            "enum": [
                "todo",
                "default"
            ],
            "enumDescriptions": [
                "Fill missing expressions with the `todo` macro",
                "Fill missing expressions with reasonable defaults, `new` or `default` constructors."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "todo",
            "restricted": false
        },
        "rust-analyzer.cachePriming.enable": {
            "markdownDescription": "Warm up caches on project load.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.cachePriming.numThreads": {
            "markdownDescription": "How many worker threads to handle priming caches. The default `0` means to pick automatically.",
            "default": 0,
            "type": "number",
            "minimum": 0,
            "maximum": 255,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "rust-analyzer.cargo.autoreload": {
            "markdownDescription": "Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` or `.cargo/config.toml` changes.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.cargo.buildScripts.enable": {
            "markdownDescription": "Run build scripts (`build.rs`) for more precise code analysis.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.cargo.buildScripts.invocationLocation": {
            "markdownDescription": "Specifies the working directory for running build scripts.\n- \"workspace\": run build scripts for a workspace in the workspace's root directory.\n    This is incompatible with `#rust-analyzer.cargo.buildScripts.invocationStrategy#` set to `once`.\n- \"root\": run build scripts in the project's root directory.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.",
            "default": "workspace",
            "type": "string",
            "enum": [
                "workspace",
                "root"
            ],
            "enumDescriptions": [
                "The command will be executed in the corresponding workspace root.",
                "The command will be executed in the project root."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "workspace",
            "restricted": false
        },
        "rust-analyzer.cargo.buildScripts.invocationStrategy": {
            "markdownDescription": "Specifies the invocation strategy to use when running the build scripts command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.cargo.buildScripts.overrideCommand#`\nis set.",
            "default": "per_workspace",
            "type": "string",
            "enum": [
                "per_workspace",
                "once"
            ],
            "enumDescriptions": [
                "The command will be executed for each workspace.",
                "The command will be executed once."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "per_workspace",
            "restricted": false
        },
        "rust-analyzer.cargo.buildScripts.overrideCommand": {
            "markdownDescription": "Override the command rust-analyzer uses to run build scripts and\nbuild procedural macros. The command is required to output json\nand should therefore include `--message-format=json` or a similar\noption.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.buildScripts.invocationStrategy#` and\n`#rust-analyzer.cargo.buildScripts.invocationLocation#`.\n\nBy default, a cargo invocation will be constructed for the configured\ntargets and features, with the following base command line:\n\n```bash\ncargo check --quiet --workspace --message-format=json --all-targets\n```\n.",
            "default": null,
            "type": [
                "null",
                "array"
            ],
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.cargo.buildScripts.useRustcWrapper": {
            "markdownDescription": "Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid checking unnecessary things.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.cargo.cfgs": {
            "markdownDescription": "List of cfg options to enable with the given values.",
            "default": {},
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.cargo.extraArgs": {
            "markdownDescription": "Extra arguments that are passed to every cargo invocation.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.cargo.extraEnv": {
            "markdownDescription": "Extra environment variables that will be set when running cargo, rustc\nor other commands within the workspace. Useful for setting RUSTFLAGS.",
            "default": {},
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.cargo.features": {
            "markdownDescription": "List of features to activate.\n\nSet this to `\"all\"` to pass `--all-features` to cargo.",
            "default": [],
            "anyOf": [
                {
                    "type": "string",
                    "enum": [
                        "all"
                    ],
                    "enumDescriptions": [
                        "Pass `--all-features` to cargo"
                    ]
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.cargo.noDefaultFeatures": {
            "markdownDescription": "Whether to pass `--no-default-features` to cargo.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.cargo.sysroot": {
            "markdownDescription": "Relative path to the sysroot, or \"discover\" to try to automatically find it via\n\"rustc --print sysroot\".\n\nUnsetting this disables sysroot loading.\n\nThis option does not take effect until rust-analyzer is restarted.",
            "default": "discover",
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "discover",
            "restricted": false
        },
        "rust-analyzer.cargo.sysrootSrc": {
            "markdownDescription": "Relative path to the sysroot library sources. If left unset, this will default to\n`{cargo.sysroot}/lib/rustlib/src/rust/library`.\n\nThis option does not take effect until rust-analyzer is restarted.",
            "default": null,
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.cargo.target": {
            "markdownDescription": "Compilation target override (target triple).",
            "default": null,
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.cargo.unsetTest": {
            "markdownDescription": "Unsets the implicit `#[cfg(test)]` for the specified crates.",
            "default": [
                "core"
            ],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [
                "core"
            ],
            "restricted": false
        },
        "rust-analyzer.checkOnSave": {
            "markdownDescription": "Run the check command for diagnostics on save.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.check.allTargets": {
            "markdownDescription": "Check all targets and tests (`--all-targets`).",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.check.command": {
            "markdownDescription": "Cargo command to use for `cargo check`.",
            "default": "check",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "check",
            "restricted": false
        },
        "rust-analyzer.check.extraArgs": {
            "markdownDescription": "Extra arguments for `cargo check`.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.check.extraEnv": {
            "markdownDescription": "Extra environment variables that will be set when running `cargo check`.\nExtends `#rust-analyzer.cargo.extraEnv#`.",
            "default": {},
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.check.features": {
            "markdownDescription": "List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.\n\nSet to `\"all\"` to pass `--all-features` to Cargo.",
            "default": null,
            "anyOf": [
                {
                    "type": "string",
                    "enum": [
                        "all"
                    ],
                    "enumDescriptions": [
                        "Pass `--all-features` to cargo"
                    ]
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "null"
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.check.ignore": {
            "markdownDescription": "List of `cargo check` (or other command specified in `check.command`) diagnostics to ignore.\n\nFor example for `cargo check`: `dead_code`, `unused_imports`, `unused_variables`,...",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.check.invocationLocation": {
            "markdownDescription": "Specifies the working directory for running checks.\n- \"workspace\": run checks for workspaces in the corresponding workspaces' root directories.\n    This falls back to \"root\" if `#rust-analyzer.cargo.check.invocationStrategy#` is set to `once`.\n- \"root\": run checks in the project's root directory.\nThis config only has an effect when `#rust-analyzer.cargo.check.overrideCommand#`\nis set.",
            "default": "workspace",
            "type": "string",
            "enum": [
                "workspace",
                "root"
            ],
            "enumDescriptions": [
                "The command will be executed in the corresponding workspace root.",
                "The command will be executed in the project root."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "workspace",
            "restricted": false
        },
        "rust-analyzer.check.invocationStrategy": {
            "markdownDescription": "Specifies the invocation strategy to use when running the check command.\nIf `per_workspace` is set, the command will be executed for each workspace.\nIf `once` is set, the command will be executed once.\nThis config only has an effect when `#rust-analyzer.cargo.check.overrideCommand#`\nis set.",
            "default": "per_workspace",
            "type": "string",
            "enum": [
                "per_workspace",
                "once"
            ],
            "enumDescriptions": [
                "The command will be executed for each workspace.",
                "The command will be executed once."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "per_workspace",
            "restricted": false
        },
        "rust-analyzer.check.noDefaultFeatures": {
            "markdownDescription": "Whether to pass `--no-default-features` to Cargo. Defaults to\n`#rust-analyzer.cargo.noDefaultFeatures#`.",
            "default": null,
            "type": [
                "null",
                "boolean"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.check.overrideCommand": {
            "markdownDescription": "Override the command rust-analyzer uses instead of `cargo check` for\ndiagnostics on save. The command is required to output json and\nshould therefore include `--message-format=json` or a similar option\n(if your client supports the `colorDiagnosticOutput` experimental\ncapability, you can use `--message-format=json-diagnostic-rendered-ansi`).\n\nIf you're changing this because you're using some tool wrapping\nCargo, you might also want to change\n`#rust-analyzer.cargo.buildScripts.overrideCommand#`.\n\nIf there are multiple linked projects/workspaces, this command is invoked for\neach of them, with the working directory being the workspace root\n(i.e., the folder containing the `Cargo.toml`). This can be overwritten\nby changing `#rust-analyzer.cargo.check.invocationStrategy#` and\n`#rust-analyzer.cargo.check.invocationLocation#`.\n\nAn example command would be:\n\n```bash\ncargo check --workspace --message-format=json --all-targets\n```\n.",
            "default": null,
            "type": [
                "null",
                "array"
            ],
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.check.targets": {
            "markdownDescription": "Check for specific targets. Defaults to `#rust-analyzer.cargo.target#` if empty.\n\nCan be a single target, e.g. `\"x86_64-unknown-linux-gnu\"` or a list of targets, e.g.\n`[\"aarch64-apple-darwin\", \"x86_64-apple-darwin\"]`.\n\nAliased as `\"checkOnSave.targets\"`.",
            "default": null,
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.completion.autoimport.enable": {
            "markdownDescription": "Toggles the additional completions that automatically add imports when completed.\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.completion.autoself.enable": {
            "markdownDescription": "Toggles the additional completions that automatically show method calls and field accesses\nwith `self` prefixed to them when inside a method.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.completion.callable.snippets": {
            "markdownDescription": "Whether to add parenthesis and argument snippets when completing function.",
            "default": "fill_arguments",
            "type": "string",
            "enum": [
                "fill_arguments",
                "add_parentheses",
                "none"
            ],
            "enumDescriptions": [
                "Add call parentheses and pre-fill arguments.",
                "Add call parentheses.",
                "Do no snippet completions for callables."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "fill_arguments",
            "restricted": false
        },
        "rust-analyzer.completion.fullFunctionSignatures.enable": {
            "markdownDescription": "Whether to show full function/method signatures in completion docs.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.completion.limit": {
            "markdownDescription": "Maximum number of completions to return. If `None`, the limit is infinite.",
            "default": null,
            "type": [
                "null",
                "integer"
            ],
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.completion.postfix.enable": {
            "markdownDescription": "Whether to show postfix snippets like `dbg`, `if`, `not`, etc.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.completion.privateEditable.enable": {
            "markdownDescription": "Enables completions of private items and fields that are defined in the current workspace even if they are not visible at the current position.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.completion.snippets.custom": {
            "markdownDescription": "Custom completion snippets.",
            "default": {
                "Arc::new": {
                    "postfix": "arc",
                    "body": "Arc::new(${receiver})",
                    "requires": "std::sync::Arc",
                    "description": "Put the expression into an `Arc`",
                    "scope": "expr"
                },
                "Rc::new": {
                    "postfix": "rc",
                    "body": "Rc::new(${receiver})",
                    "requires": "std::rc::Rc",
                    "description": "Put the expression into an `Rc`",
                    "scope": "expr"
                },
                "Box::pin": {
                    "postfix": "pinbox",
                    "body": "Box::pin(${receiver})",
                    "requires": "std::boxed::Box",
                    "description": "Put the expression into a pinned `Box`",
                    "scope": "expr"
                },
                "Ok": {
                    "postfix": "ok",
                    "body": "Ok(${receiver})",
                    "description": "Wrap the expression in a `Result::Ok`",
                    "scope": "expr"
                },
                "Err": {
                    "postfix": "err",
                    "body": "Err(${receiver})",
                    "description": "Wrap the expression in a `Result::Err`",
                    "scope": "expr"
                },
                "Some": {
                    "postfix": "some",
                    "body": "Some(${receiver})",
                    "description": "Wrap the expression in an `Option::Some`",
                    "scope": "expr"
                }
            },
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {
                "Arc::new": {
                    "postfix": "arc",
                    "body": "Arc::new(${receiver})",
                    "requires": "std::sync::Arc",
                    "description": "Put the expression into an `Arc`",
                    "scope": "expr"
                },
                "Rc::new": {
                    "postfix": "rc",
                    "body": "Rc::new(${receiver})",
                    "requires": "std::rc::Rc",
                    "description": "Put the expression into an `Rc`",
                    "scope": "expr"
                },
                "Box::pin": {
                    "postfix": "pinbox",
                    "body": "Box::pin(${receiver})",
                    "requires": "std::boxed::Box",
                    "description": "Put the expression into a pinned `Box`",
                    "scope": "expr"
                },
                "Ok": {
                    "postfix": "ok",
                    "body": "Ok(${receiver})",
                    "description": "Wrap the expression in a `Result::Ok`",
                    "scope": "expr"
                },
                "Err": {
                    "postfix": "err",
                    "body": "Err(${receiver})",
                    "description": "Wrap the expression in a `Result::Err`",
                    "scope": "expr"
                },
                "Some": {
                    "postfix": "some",
                    "body": "Some(${receiver})",
                    "description": "Wrap the expression in an `Option::Some`",
                    "scope": "expr"
                }
            },
            "restricted": false
        },
        "rust-analyzer.diagnostics.disabled": {
            "markdownDescription": "List of rust-analyzer diagnostics to disable.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.diagnostics.enable": {
            "markdownDescription": "Whether to show native rust-analyzer diagnostics.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.diagnostics.experimental.enable": {
            "markdownDescription": "Whether to show experimental rust-analyzer diagnostics that might\nhave more false positives than usual.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.diagnostics.remapPrefix": {
            "markdownDescription": "Map of prefixes to be substituted when parsing diagnostic file paths.\nThis should be the reverse mapping of what is passed to `rustc` as `--remap-path-prefix`.",
            "default": {},
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.diagnostics.warningsAsHint": {
            "markdownDescription": "List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code\nand will not show up in the `Problems Panel`.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.diagnostics.warningsAsInfo": {
            "markdownDescription": "List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code\nand a blue icon in the `Problems Panel`.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.files.excludeDirs": {
            "markdownDescription": "These directories will be ignored by rust-analyzer. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.files.watcher": {
            "markdownDescription": "Controls file watching implementation.",
            "default": "client",
            "type": "string",
            "enum": [
                "client",
                "server"
            ],
            "enumDescriptions": [
                "Use the client (editor) to watch files for changes",
                "Use server-side file watching"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "client",
            "restricted": false
        },
        "rust-analyzer.highlightRelated.breakPoints.enable": {
            "markdownDescription": "Enables highlighting of related references while the cursor is on `break`, `loop`, `while`, or `for` keywords.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.highlightRelated.closureCaptures.enable": {
            "markdownDescription": "Enables highlighting of all captures of a closure while the cursor is on the `|` or move keyword of a closure.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.highlightRelated.exitPoints.enable": {
            "markdownDescription": "Enables highlighting of all exit points while the cursor is on any `return`, `?`, `fn`, or return type arrow (`->`).",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.highlightRelated.references.enable": {
            "markdownDescription": "Enables highlighting of related references while the cursor is on any identifier.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.highlightRelated.yieldPoints.enable": {
            "markdownDescription": "Enables highlighting of all break points for a loop or block context while the cursor is on any `async` or `await` keywords.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.actions.debug.enable": {
            "markdownDescription": "Whether to show `Debug` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.actions.enable": {
            "markdownDescription": "Whether to show HoverActions in Rust files.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.actions.gotoTypeDef.enable": {
            "markdownDescription": "Whether to show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.actions.implementations.enable": {
            "markdownDescription": "Whether to show `Implementations` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.actions.references.enable": {
            "markdownDescription": "Whether to show `References` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.hover.actions.run.enable": {
            "markdownDescription": "Whether to show `Run` action. Only applies when\n`#rust-analyzer.hover.actions.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.documentation.enable": {
            "markdownDescription": "Whether to show documentation on hover.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.documentation.keywords.enable": {
            "markdownDescription": "Whether to show keyword hover popups. Only applies when\n`#rust-analyzer.hover.documentation.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.links.enable": {
            "markdownDescription": "Use markdown syntax for links on hover.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.memoryLayout.alignment": {
            "markdownDescription": "How to render the align information in a memory layout hover.",
            "default": "hexadecimal",
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "string",
                    "enum": [
                        "both",
                        "decimal",
                        "hexadecimal"
                    ],
                    "enumDescriptions": [
                        "Render as 12 (0xC)",
                        "Render as 12",
                        "Render as 0xC"
                    ]
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "hexadecimal",
            "restricted": false
        },
        "rust-analyzer.hover.memoryLayout.enable": {
            "markdownDescription": "Whether to show memory layout data on hover.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.hover.memoryLayout.niches": {
            "markdownDescription": "How to render the niche information in a memory layout hover.",
            "default": false,
            "type": [
                "null",
                "boolean"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.hover.memoryLayout.offset": {
            "markdownDescription": "How to render the offset information in a memory layout hover.",
            "default": "hexadecimal",
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "string",
                    "enum": [
                        "both",
                        "decimal",
                        "hexadecimal"
                    ],
                    "enumDescriptions": [
                        "Render as 12 (0xC)",
                        "Render as 12",
                        "Render as 0xC"
                    ]
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "hexadecimal",
            "restricted": false
        },
        "rust-analyzer.hover.memoryLayout.size": {
            "markdownDescription": "How to render the size information in a memory layout hover.",
            "default": "both",
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "string",
                    "enum": [
                        "both",
                        "decimal",
                        "hexadecimal"
                    ],
                    "enumDescriptions": [
                        "Render as 12 (0xC)",
                        "Render as 12",
                        "Render as 0xC"
                    ]
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "both",
            "restricted": false
        },
        "rust-analyzer.imports.granularity.enforce": {
            "markdownDescription": "Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.imports.granularity.group": {
            "markdownDescription": "How imports should be grouped into use statements.",
            "default": "crate",
            "type": "string",
            "enum": [
                "preserve",
                "crate",
                "module",
                "item"
            ],
            "enumDescriptions": [
                "Do not change the granularity of any imports and preserve the original structure written by the developer.",
                "Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.",
                "Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.",
                "Flatten imports so that each has its own use statement."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "crate",
            "restricted": false
        },
        "rust-analyzer.imports.group.enable": {
            "markdownDescription": "Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.imports.merge.glob": {
            "markdownDescription": "Whether to allow import insertion to merge new imports into single path glob imports like `use std::fmt::*;`.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.imports.prefer.no.std": {
            "markdownDescription": "Prefer to unconditionally use imports of the core and alloc crate, over the std crate.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.imports.prefix": {
            "markdownDescription": "The path structure for newly inserted paths to use.",
            "default": "plain",
            "type": "string",
            "enum": [
                "plain",
                "self",
                "crate"
            ],
            "enumDescriptions": [
                "Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.",
                "Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.",
                "Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "plain",
            "restricted": false
        },
        "rust-analyzer.inlayHints.bindingModeHints.enable": {
            "markdownDescription": "Whether to show inlay type hints for binding modes.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.inlayHints.chainingHints.enable": {
            "markdownDescription": "Whether to show inlay type hints for method chains.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.inlayHints.closingBraceHints.enable": {
            "markdownDescription": "Whether to show inlay hints after a closing `}` to indicate what item it belongs to.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.inlayHints.closingBraceHints.minLines": {
            "markdownDescription": "Minimum number of lines required before the `}` until the hint is shown (set to 0 or 1\nto always show them).",
            "default": 25,
            "type": "integer",
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": 25,
            "restricted": false
        },
        "rust-analyzer.inlayHints.closureCaptureHints.enable": {
            "markdownDescription": "Whether to show inlay hints for closure captures.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.inlayHints.closureReturnTypeHints.enable": {
            "markdownDescription": "Whether to show inlay type hints for return types of closures.",
            "default": "never",
            "type": "string",
            "enum": [
                "always",
                "never",
                "with_block"
            ],
            "enumDescriptions": [
                "Always show type hints for return types of closures.",
                "Never show type hints for return types of closures.",
                "Only show type hints for return types of closures with blocks."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "rust-analyzer.inlayHints.closureStyle": {
            "markdownDescription": "Closure notation in type and chaining inlay hints.",
            "default": "impl_fn",
            "type": "string",
            "enum": [
                "impl_fn",
                "rust_analyzer",
                "with_id",
                "hide"
            ],
            "enumDescriptions": [
                "`impl_fn`: `impl FnMut(i32, u64) -> i8`",
                "`rust_analyzer`: `|i32, u64| -> i8`",
                "`with_id`: `{closure#14352}`, where that id is the unique number of the closure in r-a internals",
                "`hide`: Shows `...` for every closure type"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "impl_fn",
            "restricted": false
        },
        "rust-analyzer.inlayHints.discriminantHints.enable": {
            "markdownDescription": "Whether to show enum variant discriminant hints.",
            "default": "never",
            "type": "string",
            "enum": [
                "always",
                "never",
                "fieldless"
            ],
            "enumDescriptions": [
                "Always show all discriminant hints.",
                "Never show discriminant hints.",
                "Only show discriminant hints on fieldless enum variants."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": {
            "markdownDescription": "Whether to show inlay hints for type adjustments.",
            "default": "never",
            "type": "string",
            "enum": [
                "always",
                "never",
                "reborrow"
            ],
            "enumDescriptions": [
                "Always show all adjustment hints.",
                "Never show adjustment hints.",
                "Only show auto borrow and dereference adjustment hints."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe": {
            "markdownDescription": "Whether to hide inlay hints for type adjustments outside of `unsafe` blocks.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.inlayHints.expressionAdjustmentHints.mode": {
            "markdownDescription": "Whether to show inlay hints as postfix ops (`.*` instead of `*`, etc).",
            "default": "prefix",
            "type": "string",
            "enum": [
                "prefix",
                "postfix",
                "prefer_prefix",
                "prefer_postfix"
            ],
            "enumDescriptions": [
                "Always show adjustment hints as prefix (`*expr`).",
                "Always show adjustment hints as postfix (`expr.*`).",
                "Show prefix or postfix depending on which uses less parenthesis, preferring prefix.",
                "Show prefix or postfix depending on which uses less parenthesis, preferring postfix."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "prefix",
            "restricted": false
        },
        "rust-analyzer.inlayHints.lifetimeElisionHints.enable": {
            "markdownDescription": "Whether to show inlay type hints for elided lifetimes in function signatures.",
            "default": "never",
            "type": "string",
            "enum": [
                "always",
                "never",
                "skip_trivial"
            ],
            "enumDescriptions": [
                "Always show lifetime elision hints.",
                "Never show lifetime elision hints.",
                "Only show lifetime elision hints if a return type is involved."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": {
            "markdownDescription": "Whether to prefer using parameter names as the name for elided lifetime hints if possible.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.inlayHints.maxLength": {
            "markdownDescription": "Maximum length for inlay hints. Set to null to have an unlimited length.",
            "default": 25,
            "type": [
                "null",
                "integer"
            ],
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": 25,
            "restricted": false
        },
        "rust-analyzer.inlayHints.parameterHints.enable": {
            "markdownDescription": "Whether to show function parameter name inlay hints at the call\nsite.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.inlayHints.reborrowHints.enable": {
            "markdownDescription": "Whether to show inlay hints for compiler inserted reborrows.\nThis setting is deprecated in favor of #rust-analyzer.inlayHints.expressionAdjustmentHints.enable#.",
            "default": "never",
            "type": "string",
            "enum": [
                "always",
                "never",
                "mutable"
            ],
            "enumDescriptions": [
                "Always show reborrow hints.",
                "Never show reborrow hints.",
                "Only show mutable reborrow hints."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "rust-analyzer.inlayHints.renderColons": {
            "markdownDescription": "Whether to render leading colons for type hints, and trailing colons for parameter hints.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.inlayHints.typeHints.enable": {
            "markdownDescription": "Whether to show inlay type hints for variables.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": {
            "markdownDescription": "Whether to hide inlay type hints for `let` statements that initialize to a closure.\nOnly applies to closures with blocks, same as `#rust-analyzer.inlayHints.closureReturnTypeHints.enable#`.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": {
            "markdownDescription": "Whether to hide inlay type hints for constructors.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.interpret.tests": {
            "markdownDescription": "Enables the experimental support for interpreting tests.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.joinLines.joinAssignments": {
            "markdownDescription": "Join lines merges consecutive declaration and initialization of an assignment.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.joinLines.joinElseIf": {
            "markdownDescription": "Join lines inserts else between consecutive ifs.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.joinLines.removeTrailingComma": {
            "markdownDescription": "Join lines removes trailing commas.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.joinLines.unwrapTrivialBlock": {
            "markdownDescription": "Join lines unwraps trivial blocks.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.lens.debug.enable": {
            "markdownDescription": "Whether to show `Debug` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.lens.enable": {
            "markdownDescription": "Whether to show CodeLens in Rust files.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.lens.forceCustomCommands": {
            "markdownDescription": "Internal config: use custom client-side commands even when the\nclient doesn't set the corresponding capability.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.lens.implementations.enable": {
            "markdownDescription": "Whether to show `Implementations` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.lens.location": {
            "markdownDescription": "Where to render annotations.",
            "default": "above_name",
            "type": "string",
            "enum": [
                "above_name",
                "above_whole_item"
            ],
            "enumDescriptions": [
                "Render annotations above the name of the item.",
                "Render annotations above the whole item, including documentation comments and attributes."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "above_name",
            "restricted": false
        },
        "rust-analyzer.lens.references.adt.enable": {
            "markdownDescription": "Whether to show `References` lens for Struct, Enum, and Union.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.lens.references.enumVariant.enable": {
            "markdownDescription": "Whether to show `References` lens for Enum Variants.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.lens.references.method.enable": {
            "markdownDescription": "Whether to show `Method References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.lens.references.trait.enable": {
            "markdownDescription": "Whether to show `References` lens for Trait.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.lens.run.enable": {
            "markdownDescription": "Whether to show `Run` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.linkedProjects": {
            "markdownDescription": "Disable project auto-discovery in favor of explicitly specified set\nof projects.\n\nElements must be paths pointing to `Cargo.toml`,\n`rust-project.json`, or JSON objects in `rust-project.json` format.",
            "default": [],
            "type": "array",
            "items": {
                "type": [
                    "string",
                    "object"
                ]
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.lru.capacity": {
            "markdownDescription": "Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.",
            "default": null,
            "type": [
                "null",
                "integer"
            ],
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.lru.query.capacities": {
            "markdownDescription": "Sets the LRU capacity of the specified queries.",
            "default": {},
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.notifications.cargoTomlNotFound": {
            "markdownDescription": "Whether to show `can't find Cargo.toml` error message.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.numThreads": {
            "markdownDescription": "How many worker threads in the main loop. The default `null` means to pick automatically.",
            "default": null,
            "type": [
                "null",
                "integer"
            ],
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.procMacro.attributes.enable": {
            "markdownDescription": "Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.procMacro.enable": {
            "markdownDescription": "Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.procMacro.ignored": {
            "markdownDescription": "These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.",
            "default": {},
            "type": "object",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "rust-analyzer.procMacro.server": {
            "markdownDescription": "Internal config, path to proc-macro server executable.",
            "default": null,
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.references.excludeImports": {
            "markdownDescription": "Exclude imports from find-all-references.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.runnables.command": {
            "markdownDescription": "Command to be executed instead of 'cargo' for runnables.",
            "default": null,
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.runnables.extraArgs": {
            "markdownDescription": "Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.rust.analyzerTargetDir": {
            "markdownDescription": "Optional path to a rust-analyzer specific target directory.\nThis prevents rust-analyzer's `cargo check` from locking the `Cargo.lock`\nat the expense of duplicating build artifacts.\n\nSet to `true` to use a subdirectory of the existing target directory or\nset to a path relative to the workspace to use that path.",
            "default": null,
            "anyOf": [
                {
                    "type": "null"
                },
                {
                    "type": "boolean"
                },
                {
                    "type": "string"
                }
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.rustc.source": {
            "markdownDescription": "Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.",
            "default": null,
            "type": [
                "null",
                "string"
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.rustfmt.extraArgs": {
            "markdownDescription": "Additional arguments to `rustfmt`.",
            "default": [],
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "rust-analyzer.rustfmt.overrideCommand": {
            "markdownDescription": "Advanced option, fully override the command rust-analyzer uses for\nformatting. This should be the equivalent of `rustfmt` here, and\nnot that of `cargo fmt`. The file contents will be passed on the\nstandard input and the formatted result will be read from the\nstandard output.",
            "default": null,
            "type": [
                "null",
                "array"
            ],
            "items": {
                "type": "string"
            },
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "rust-analyzer.rustfmt.rangeFormatting.enable": {
            "markdownDescription": "Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.doc.comment.inject.enable": {
            "markdownDescription": "Inject additional highlighting into doc comments.\n\nWhen enabled, rust-analyzer will highlight rust source in doc comments as well as intra\ndoc links.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.nonStandardTokens": {
            "markdownDescription": "Whether the server is allowed to emit non-standard tokens and modifiers.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.operator.enable": {
            "markdownDescription": "Use semantic tokens for operators.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for operator tokens when\nthey are tagged with modifiers.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.operator.specialization.enable": {
            "markdownDescription": "Use specialized semantic tokens for operators.\n\nWhen enabled, rust-analyzer will emit special token types for operator tokens instead\nof the generic `operator` token type.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.punctuation.enable": {
            "markdownDescription": "Use semantic tokens for punctuation.\n\nWhen disabled, rust-analyzer will emit semantic tokens only for punctuation tokens when\nthey are tagged with modifiers or have a special role.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang": {
            "markdownDescription": "When enabled, rust-analyzer will emit a punctuation semantic token for the `!` of macro\ncalls.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.punctuation.specialization.enable": {
            "markdownDescription": "Use specialized semantic tokens for punctuation.\n\nWhen enabled, rust-analyzer will emit special token types for punctuation tokens instead\nof the generic `punctuation` token type.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.semanticHighlighting.strings.enable": {
            "markdownDescription": "Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.signatureInfo.detail": {
            "markdownDescription": "Show full signature of the callable. Only shows parameters if disabled.",
            "default": "full",
            "type": "string",
            "enum": [
                "full",
                "parameters"
            ],
            "enumDescriptions": [
                "Show the entire signature.",
                "Show only the parameters."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "full",
            "restricted": false
        },
        "rust-analyzer.signatureInfo.documentation.enable": {
            "markdownDescription": "Show documentation.",
            "default": true,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "rust-analyzer.typing.autoClosingAngleBrackets.enable": {
            "markdownDescription": "Whether to insert closing angle brackets when typing an opening angle bracket of a generic argument list.",
            "default": false,
            "type": "boolean",
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "rust-analyzer.workspace.symbol.search.kind": {
            "markdownDescription": "Workspace symbol search kind.",
            "default": "only_types",
            "type": "string",
            "enum": [
                "only_types",
                "all_symbols"
            ],
            "enumDescriptions": [
                "Search for types only.",
                "Search for all symbols kinds."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "only_types",
            "restricted": false
        },
        "rust-analyzer.workspace.symbol.search.limit": {
            "markdownDescription": "Limits the number of items returned from a workspace symbol search (Defaults to 128).\nSome clients like vs-code issue new searches on result filtering and don't require all results to be returned in the initial search.\nOther clients requires all results upfront and might require a higher limit.",
            "default": 128,
            "type": "integer",
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": 128,
            "restricted": false
        },
        "rust-analyzer.workspace.symbol.search.scope": {
            "markdownDescription": "Workspace symbol search scope.",
            "default": "workspace",
            "type": "string",
            "enum": [
                "workspace",
                "workspace_and_dependencies"
            ],
            "enumDescriptions": [
                "Search in current workspace only.",
                "Search in current workspace and dependencies."
            ],
            "scope": 3,
            "source": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "defaultDefaultValue": "workspace",
            "restricted": false
        },
        "metals.serverVersion": {
            "type": "string",
            "default": "1.0.1",
            "markdownDescription": "The version of the Metals server artifact. Requires reloading the window.  \n\n**VS Code extension version is guaranteed to work only with the default version, change if you know what you're doing**",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": "1.0.1",
            "restricted": false
        },
        "metals.serverProperties": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "-Xmx1G"
            ],
            "markdownDescription": "Optional list of properties to pass along to the Metals server. By default, the environment variable `JAVA_OPTS` and `.jvmopts` file are respected. Each property needs to be a separate item.\n\nExample: `-Dhttps.proxyHost=…`, `-Dhttps.proxyPort=…` or `-Dmetals.statistics=all`",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": [
                "-Xmx1G"
            ],
            "restricted": false
        },
        "metals.coursierMirror": {
            "type": "string",
            "markdownDescription": "Optional alternative repository to maven central if maven central is not available. For example: `https://jcenter.bintray.com`, which will be used to set to property described [here](https://get-coursier.io/blog/#mirrors)",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.ammoniteJvmProperties": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Optional list of JVM properties to pass along to the Ammonite server. Each property needs to be a separate item.\n\nExample: `-Xmx1G` or `-Xms100M`",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": [],
            "restricted": false
        },
        "metals.excludedPackages": {
            "type": "array",
            "default": [],
            "markdownDescription": "List of packages you'd like to be left out of completions, symbol searches, and code actions.\n\nEx. `akka.actor.typed.javadsl` will ensure nothing in the `javadsl` package gets recommended to you.\n\nYou can find the list of default exclusions [here on the Metals website](https://scalameta.org/metals/docs/editors/user-configuration/#excluded-packages).\n\nIf you need to remove one of the defaults, you can simply include it and preface it with `--`.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "metals.showInferredType": {
            "type": "string",
            "default": "false",
            "enum": [
                "false",
                "true",
                "minimal"
            ],
            "markdownDescription": "When this option is set to true inferred type in all possible places will be shown. This includes types for values, definitions, cases, type parameters. With 'minimal' option Metals will not show inferred type for type parameters and more complicated pattern matches.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": "false",
            "restricted": false
        },
        "metals.showImplicitArguments": {
            "type": "boolean",
            "markdownDescription": "When this option is enabled, for each method that has implicit arguments they are displayed as additional decorations.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": false,
            "restricted": false
        },
        "metals.showImplicitConversionsAndClasses": {
            "type": "boolean",
            "markdownDescription": "When this option is enabled, each implicit method and class is displayed as additional decorations at the usage site.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": false,
            "restricted": false
        },
        "metals.sbtScript": {
            "type": "string",
            "markdownDescription": "Optional absolute path to an `sbt` executable to use for running `sbt bloopInstall`.\n\nBy default, Metals uses `java -jar sbt-launch.jar` with an embedded launcher while respecting `.jvmopts` and `.sbtopts`.\n\nUpdate this setting if your `sbt` script requires more customizations like using environment variables.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.millScript": {
            "type": "string",
            "markdownDescription": "Optional absolute path to a `mill` executable to use for running `mill mill.contrib.Bloop/install`.\n\nBy default, Metals uses an embedded `millw` script while respecting `.mill-version` file.\n\nUpdate this setting if your `mill` script requires more customizations.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.mavenScript": {
            "type": "string",
            "markdownDescription": "Optional absolute path to a `mvn` executable to use for running `mvn ch.epfl.scala:maven-bloop_2.10:<bloop_version>:bloopInstall`.\n\nBy default, Metals uses an embedded `mvnw` script.\n\nUpdate this setting if your `mvn` script requires more customizations.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.gradleScript": {
            "type": "string",
            "markdownDescription": "Optional absolute path to a `gradle` executable to use for running `gradle bloopInstall`.\n\nBy default, Metals uses an embedded `gradlew` script.\n\nUpdate this setting if your `gradle` script requires more customizations.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.scalafmtConfigPath": {
            "type": "string",
            "markdownDescription": "Optional custom path to the .scalafmt.conf file.\n\nShould be an absolute path and use forward slashes `/` for file separators (even on Windows).",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.scalafixConfigPath": {
            "type": "string",
            "markdownDescription": "Optional custom path to the .scalafix.conf file.\n\nShould be an absolute path and use forward slashes `/` for file separators (even on Windows).",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.bloopSbtAlreadyInstalled": {
            "type": "boolean",
            "markdownDescription": "If true, Metals will not generate a `project/metals.sbt` file under the assumption that sbt-bloop is already manually installed in the sbt build. Build import will fail with a 'not valid command bloopInstall' error in case Bloop is not manually installed in the build when using this option.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": false,
            "restricted": false
        },
        "metals.customRepositories": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Optional list of custom resolvers passed to Coursier when fetching metals dependencies.\n\nFor documentation on accepted values see the [Coursier documentation](https://get-coursier.io/docs/other-repositories).\n\nThe extension will pass these to Coursier using the COURSIER_REPOSITORIES environment variable after joining the custom repositories with a pipe character (|).",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": [],
            "restricted": false
        },
        "metals.superMethodLensesEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable goto super method code lens.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "metals.enableStripMarginOnTypeFormatting": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled, if you press the return key from the first line of a multiline string containing a pipe, it will automatically add `.stripMargin`.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "metals.enableIndentOnPaste": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When this option is enabled, when user pastes any snippet into a Scala file, Metals will try to adjust the indentation to that of the current cursor.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "metals.enableSemanticHighlighting": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When this option is enabled, Metals will provide semantic tokens for clients that support it. The feature is still experimental and does not work for all sources.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "metals.testUserInterface": {
            "type": "string",
            "default": "Test Explorer",
            "enum": [
                "Test Explorer",
                "Code Lenses"
            ],
            "markdownDescription": "Specifies which UI should be used for tests. `Code lenses` shows virtual text above test class, just like it was previously. `Test explorer` is a new option which shows gutter icons on the left of the file in a less intrusive way. Moreover, this option comes with a new panel called `Testing` which lists all test suites in your codebase and allows you to browse tests and navigate to the file which contains them.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": "Test Explorer",
            "restricted": false
        },
        "metals.fallbackScalaVersion": {
            "type": "string",
            "default": "automatic",
            "enum": [
                "automatic",
                "2.13.11",
                "2.13.10",
                "2.13.9",
                "2.13.8",
                "2.13.7",
                "2.13.6",
                "2.13.5",
                "2.13.4",
                "2.12.18",
                "2.12.17",
                "2.12.16",
                "2.12.15",
                "2.12.14",
                "2.12.13",
                "2.12.12",
                "2.12.11",
                "2.11.12",
                "3.3.0",
                "3.2.2",
                "3.2.1",
                "3.2.0",
                "3.1.3",
                "3.1.2",
                "3.1.1",
                "3.1.0"
            ],
            "markdownDescription": "The Scala compiler version that is used as the default or fallback in case a file doesn't belong to any build target or the specified Scala version isn't supported by Metals.\n\nThis applies to standalone Scala files, worksheets, and Ammonite scripts.\n\n The `automatic` value means that the Scala version for these files will be inferred from the highest supported Scala version in your projects build definition",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": "automatic",
            "restricted": false
        },
        "metals.javaFormat.eclipseConfigPath": {
            "type": "string",
            "markdownDescription": "Optional custom path to the eclipse-formatter.xml file.\n\nShould be an absolute path and use forward slashes `/` for file separators (even on Windows).",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.javaFormat.eclipseProfile": {
            "type": "string",
            "markdownDescription": "Optional Eclipse format profile to use.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.scalaCliLauncher": {
            "type": "string",
            "markdownDescription": "Optional path to Scala CLI launcher to use.",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "default": "",
            "restricted": false
        },
        "metals.suggestLatestUpgrade": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Once in a day, notify if there are new server releases (including snapshots)",
            "scope": 3,
            "source": {
                "id": "scalameta.metals",
                "displayName": "Scala (Metals)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "swift.path": {
            "type": "string",
            "default": "",
            "markdownDescription": "The path of the folder containing the Swift executables. The default is to look in the PATH environment variable.",
            "order": 1,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "swift.buildArguments": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Arguments to pass to `swift build`. Keys and values should be provided as separate entries. If you have created a copy of the build task in `tasks.json` then these build arguments will not be propogated to that task.",
            "order": 2,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "swift.problemMatchCompileErrors": {
            "type": "boolean",
            "default": true,
            "description": "List compile errors in the Problems View.",
            "order": 8,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift.excludePathsFromPackageDependencies": {
            "description": "A list of paths to exclude from the Package Dependencies view.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                ".git",
                ".github"
            ],
            "order": 9,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": [
                ".git",
                ".github"
            ],
            "restricted": false
        },
        "swift.backgroundCompilation": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "**Experimental**: Run `swift build` in the background whenever a file is saved.",
            "order": 10,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "swift.buildPath": {
            "type": "string",
            "default": "",
            "markdownDescription": "Path to the build directory passed to all swift package manager commands.",
            "order": 11,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "swift.sourcekit-lsp.serverPath": {
            "type": "string",
            "markdownDescription": "The path of the `sourcekit-lsp` executable. The default is to look in the path where `swift` is found.",
            "order": 1,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "default": "",
            "restricted": false
        },
        "swift.sourcekit-lsp.serverArguments": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Arguments to pass to Sourcekit-LSP. Argument keys and values should be provided as separate entries in the array e.g. ['--log-level', 'debug']",
            "order": 2,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "swift.sourcekit-lsp.supported-languages": {
            "type": "array",
            "default": [
                "swift",
                "objective-c",
                "objective-cpp",
                "c",
                "cpp"
            ],
            "description": "List of languages supported by SourceKit-LSP. This is used to determine whether SourceKit-LSP should provide language features for a particular file type.",
            "items": {
                "type": "string",
                "enum": [
                    "swift",
                    "objective-c",
                    "objective-cpp",
                    "c",
                    "cpp"
                ]
            },
            "order": 4,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": [
                "swift",
                "objective-c",
                "objective-cpp",
                "c",
                "cpp"
            ],
            "restricted": false
        },
        "swift.sourcekit-lsp.trace.server": {
            "type": "string",
            "default": "off",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "description": "Traces the communication between VS Code and the SourceKit-LSP language server.",
            "order": 5,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "swift.sourcekit-lsp.disable": {
            "type": "boolean",
            "default": false,
            "description": "Disable the running of SourceKit-LSP.",
            "order": 6,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "sourcekit-lsp.serverPath": {
            "type": "string",
            "markdownDescription": "The path of the `sourcekit-lsp` executable. The default is to look in the path where `swift` is found.",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.serverPath#` instead.",
            "order": 1,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "default": "",
            "restricted": false,
            "deprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.serverPath#` instead."
        },
        "sourcekit-lsp.serverArguments": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Arguments to pass to Sourcekit-LSP. Argument keys and values should be provided as separate entries in the array e.g. ['--log-level', 'debug']",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.serverArguments#` instead.",
            "order": 2,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": [],
            "restricted": false,
            "deprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.serverArguments#` instead."
        },
        "sourcekit-lsp.inlayHints.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Render inlay type annotations in the editor. Inlay hints require Swift 5.6.",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#editor.inlayHints.enabled#` instead.",
            "order": 3,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": true,
            "restricted": false,
            "deprecationMessage": "**Deprecated**: Please use `#editor.inlayHints.enabled#` instead."
        },
        "sourcekit-lsp.support-c-cpp": {
            "type": "string",
            "default": "cpptools-inactive",
            "enum": [
                "enable",
                "disable",
                "cpptools-inactive"
            ],
            "enumDescriptions": [
                "Always enable",
                "Always disable",
                "Disable when C/C++ extension is active"
            ],
            "description": "Add LSP functionality for C/C++ files. By default this is set to disable when the C/C++ extension is active.",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.supported-languages#` instead.",
            "order": 5,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "cpptools-inactive",
            "restricted": false,
            "deprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.supported-languages#` instead."
        },
        "sourcekit-lsp.trace.server": {
            "type": "string",
            "default": "off",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "description": "Traces the communication between VS Code and the SourceKit-LSP language server.",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.trace.server#` instead.",
            "order": 6,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "off",
            "restricted": false,
            "deprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.trace.server#` instead."
        },
        "sourcekit-lsp.disable": {
            "type": "boolean",
            "default": false,
            "description": "Disable the running of SourceKit-LSP.",
            "markdownDeprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.disable#` instead.",
            "order": 7,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "**Deprecated**: Please use `#swift.sourcekit-lsp.disable#` instead."
        },
        "swift.coverage.displayReportAfterRun": {
            "type": "boolean",
            "default": true,
            "description": "Should test coverage report be shown after running tests",
            "order": 1,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift.coverage.alwaysShowStatusItem": {
            "type": "boolean",
            "default": true,
            "description": "Always show the test coverage status item. If this is set to true the status item can be clicked on to toggle test coverage display on and off.",
            "order": 2,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift.coverage.colors.lightMode.hit": {
            "type": "string",
            "default": "#c0ffc0",
            "description": "Light mode theme background color for line of code hit during test coverage.",
            "order": 3,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "#c0ffc0",
            "restricted": false
        },
        "swift.coverage.colors.lightMode.miss": {
            "type": "string",
            "default": "#ffc0c0",
            "description": "Light mode theme background color for line of code missed during test coverage.",
            "order": 4,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "#ffc0c0",
            "restricted": false
        },
        "swift.coverage.colors.darkMode.hit": {
            "type": "string",
            "default": "#003000",
            "description": "Dark mode theme background color for line of code hit during test coverage.",
            "order": 5,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "#003000",
            "restricted": false
        },
        "swift.coverage.colors.darkMode.miss": {
            "type": "string",
            "default": "#400000",
            "description": "Dark mode theme background color for line of code missed during test coverage.",
            "order": 6,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "#400000",
            "restricted": false
        },
        "swift.swiftEnvironmentVariables": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            },
            "default": {},
            "markdownDescription": "Additional environment variables to pass to swift operations.",
            "order": 1,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "swift.runtimePath": {
            "type": "string",
            "default": "",
            "description": "The path of the folder containing the Swift runtime libraries.",
            "order": 2,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "swift.SDK": {
            "type": "string",
            "default": "",
            "description": "The path of the SDK to compile against (`--sdk` parameter). The default SDK is determined by the environment on macOS and Windows.",
            "order": 3,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "swift.diagnostics": {
            "type": "boolean",
            "default": false,
            "description": "Output additional diagnostics to the Swift Output View.",
            "order": 100,
            "scope": 3,
            "source": {
                "id": "sswg.swift-lang",
                "displayName": "Swift"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "svelte.enable-ts-plugin": {
            "type": "boolean",
            "default": false,
            "title": "Enable TypeScript Svelte plugin",
            "description": "Enables a TypeScript plugin which provides intellisense for Svelte files inside TS/JS files.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "svelte.ask-to-enable-ts-plugin": {
            "type": "boolean",
            "default": true,
            "title": "Ask to enable TypeScript Svelte plugin",
            "description": "Ask on startup to enable the TypeScript plugin.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.language-server.runtime": {
            "type": "string",
            "title": "Language Server Runtime",
            "description": "- You normally don't need this - Path to the node executable to use to spawn the language server. This is useful when you depend on native modules such as node-sass as without this they will run in the context of vscode, meaning node version mismatch is likely. Minimum required node version is 12.17. This setting can only be changed in user settings for security reasons.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "default": "",
            "restricted": true
        },
        "svelte.language-server.ls-path": {
            "type": "string",
            "title": "Language Server Path",
            "description": "- You normally don't set this - Path to the language server executable. If you installed the \"svelte-language-server\" npm package, it's within there at \"bin/server.js\". Path can be either relative to your workspace root or absolute. Set this only if you want to use a custom version of the language server. This will then also use the workspace version of TypeScript. This setting can only be changed in user settings for security reasons.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "default": "",
            "restricted": true
        },
        "svelte.language-server.port": {
            "type": "number",
            "title": "Language Server Port",
            "description": "- You normally don't set this - At which port to spawn the language server. Can be used for attaching to the process for debugging / profiling. If you experience crashes due to \"port already in use\", try setting the port. -1 = default port is used.",
            "default": -1,
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": -1,
            "restricted": false
        },
        "svelte.language-server.debug": {
            "type": "boolean",
            "title": "Language Server Debug Mode",
            "description": "- You normally don't set this - Enable more verbose logging for the language server useful for debugging language server execution.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "default": false,
            "restricted": false
        },
        "svelte.trace.server": {
            "type": "string",
            "enum": [
                "off",
                "messages",
                "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VS Code and the Svelte Language Server.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "svelte.ui.svelteKitFilesContextMenu.enable": {
            "type": "string",
            "default": "auto",
            "enum": [
                "auto",
                "never",
                "always"
            ],
            "description": "Show a context menu to generate SvelteKit files. \"always\" to always show it. \"never\" to always disable it. \"auto\" to show it when in a SvelteKit project. ",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "svelte.plugin.typescript.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript",
            "description": "Enable the TypeScript plugin",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.diagnostics.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Diagnostics",
            "description": "Enable diagnostic messages for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.hover.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Hover Info",
            "description": "Enable hover info for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.documentSymbols.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Symbols in Outline",
            "description": "Enable document symbols for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.completions.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Completions",
            "description": "Enable completions for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.codeActions.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Code Actions",
            "description": "Enable code actions for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.selectionRange.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Selection Range",
            "description": "Enable selection range for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.signatureHelp.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Signature Help",
            "description": "Enable signature help (parameter hints) for TypeScript",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.typescript.semanticTokens.enable": {
            "type": "boolean",
            "default": true,
            "title": "TypeScript: Semantic Tokens",
            "description": "Enable semantic tokens (semantic highlight) for TypeScript.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS",
            "description": "Enable the CSS plugin",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.globals": {
            "type": "string",
            "default": "",
            "title": "CSS: Global Files",
            "description": "Which css files should be checked for global variables (`--global-var: value;`). These variables are added to the css completions. String of comma-separated file paths or globs relative to workspace root.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "svelte.plugin.css.diagnostics.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Diagnostics",
            "description": "Enable diagnostic messages for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.hover.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Hover Info",
            "description": "Enable hover info for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.completions.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Auto Complete",
            "description": "Enable auto completions for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.completions.emmet": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Include Emmet Completions",
            "description": "Enable emmet auto completions for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.documentColors.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Document Colors",
            "description": "Enable document colors for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.colorPresentations.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Color Picker",
            "description": "Enable color picker for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.documentSymbols.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: Symbols in Outline",
            "description": "Enable document symbols for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.css.selectionRange.enable": {
            "type": "boolean",
            "default": true,
            "title": "CSS: SelectionRange",
            "description": "Enable selection range for CSS",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.enable": {
            "type": "boolean",
            "default": true,
            "title": "HTML",
            "description": "Enable the HTML plugin",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.hover.enable": {
            "type": "boolean",
            "default": true,
            "title": "HTML: Hover Info",
            "description": "Enable hover info for HTML",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.completions.enable": {
            "type": "boolean",
            "default": true,
            "title": "HTML: Auto Complete",
            "description": "Enable auto completions for HTML",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.completions.emmet": {
            "type": "boolean",
            "default": true,
            "title": "HTML: Include Emmet Completions",
            "description": "Enable emmet auto completions for HTML",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.tagComplete.enable": {
            "type": "boolean",
            "default": true,
            "title": "HTML: Tag Auto Closing",
            "description": "Enable HTML tag auto closing",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.documentSymbols.enable": {
            "type": "boolean",
            "default": true,
            "title": "HTML: Symbols in Outline",
            "description": "Enable document symbols for HTML",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.html.linkedEditing.enable": {
            "type": "boolean",
            "default": true,
            "title": "HTML: Linked Editing",
            "description": "Enable Linked Editing for HTML",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte",
            "description": "Enable the Svelte plugin",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.diagnostics.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Diagnostics",
            "description": "Enable diagnostic messages for Svelte",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.compilerWarnings": {
            "type": "object",
            "additionalProperties": {
                "type": "string",
                "enum": [
                    "ignore",
                    "error"
                ]
            },
            "default": {},
            "title": "Svelte: Compiler Warnings Settings",
            "description": "Svelte compiler warning codes to ignore or to treat as errors. Example: { 'css-unused-selector': 'ignore', 'unused-export-let': 'error'}",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "svelte.plugin.svelte.format.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Format",
            "description": "Enable formatting for Svelte (includes css & js). You can set some formatting options through this extension. They will be ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.svelteSortOrder": {
            "type": "string",
            "default": "options-scripts-markup-styles",
            "title": "Svelte Format: Sort Order",
            "description": "Format: join the keys `options`, `scripts`, `markup`, `styles` with a - in the order you want. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": "options-scripts-markup-styles",
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.svelteStrictMode": {
            "type": "boolean",
            "default": false,
            "title": "Svelte Format: Strict Mode",
            "description": "More strict HTML syntax. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.svelteAllowShorthand": {
            "type": "boolean",
            "default": true,
            "title": "Svelte Format: Allow Shorthand",
            "description": "Option to enable/disable component attribute shorthand if attribute name and expression are the same. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.svelteBracketNewLine": {
            "type": "boolean",
            "default": true,
            "title": "Svelte Format: Bracket New Line",
            "description": "Put the `>` of a multiline element on a new line. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.svelteIndentScriptAndStyle": {
            "type": "boolean",
            "default": true,
            "title": "Svelte Format: Indent Script And Style",
            "description": "Whether or not to indent code inside `<script>` and `<style>` tags. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.printWidth": {
            "type": "number",
            "default": 80,
            "title": "Svelte Format: Print Width",
            "description": "Maximum line width after which code is tried to be broken up. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": 80,
            "restricted": false
        },
        "svelte.plugin.svelte.format.config.singleQuote": {
            "type": "boolean",
            "default": false,
            "title": "Svelte Format: Quotes",
            "description": "Use single quotes instead of double quotes, where possible. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "svelte.plugin.svelte.completions.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Completions",
            "description": "Enable auto completions for Svelte",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.hover.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Hover",
            "description": "Enable hover information for Svelte",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.codeActions.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Code Actions",
            "description": "Enable Code Actions for Svelte",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.selectionRange.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Selection Range",
            "description": "Enable selection range for Svelte",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.rename.enable": {
            "type": "boolean",
            "default": true,
            "title": "Svelte: Rename",
            "description": "Enable rename/move Svelte files functionality",
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "svelte.plugin.svelte.defaultScriptLanguage": {
            "type": "string",
            "default": "none",
            "title": "Svelte: Default Script Language",
            "description": "The default language to use when generating new script tags",
            "enum": [
                "none",
                "ts"
            ],
            "scope": 3,
            "source": {
                "id": "svelte.svelte-vscode",
                "displayName": "Svelte for VS Code"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "mdx.experimentalLanguageServer": {
            "type": "boolean",
            "default": false,
            "description": "Enable experimental IntelliSense support for MDX files.",
            "scope": 3,
            "source": {
                "id": "unifiedjs.vscode-mdx",
                "displayName": "MDX"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls all decorations and features (except commands).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "errorLens.enabledInMergeConflict": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls if decorations are shown if the editor has git merge conflict indicators `<<<<<<<` or `=======` or `>>>>>>>`.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "errorLens.fontFamily": {
            "type": "string",
            "default": "",
            "description": "Font family of inline message.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.fontWeight": {
            "type": "string",
            "enum": [
                "100",
                "200",
                "300",
                "400",
                "normal",
                "500",
                "600",
                "700",
                "bold",
                "800",
                "900"
            ],
            "default": "normal",
            "markdownDescription": "Font weight of inline message. `\"normal\"` is alias for 400, `\"bold\"` is alias for 700).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "normal",
            "restricted": false
        },
        "errorLens.fontStyleItalic": {
            "type": "boolean",
            "default": false,
            "description": "When enabled - shows inline message in italic font style.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.fontSize": {
            "type": "string",
            "default": "",
            "markdownDescription": "Font size of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.margin": {
            "type": "string",
            "default": "4ch",
            "markdownDescription": "Distance between the last word on the line and the start of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "4ch",
            "restricted": false
        },
        "errorLens.padding": {
            "type": "string",
            "default": "",
            "markdownDescription": "Padding of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\".",
            "examples": [
                "2px 1ch"
            ],
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.borderRadius": {
            "type": "string",
            "default": "3px",
            "markdownDescription": "Border radius of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\".",
            "examples": [
                "5px",
                "5em 0px",
                "0px 5em 5em 0px"
            ],
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "3px",
            "restricted": false
        },
        "errorLens.enabledDiagnosticLevels": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "error",
                    "warning",
                    "info",
                    "hint"
                ]
            },
            "uniqueItems": true,
            "description": "Customize which diagnostic levels(severity) to highlight.",
            "default": [
                "error",
                "warning",
                "info"
            ],
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [
                "error",
                "warning",
                "info"
            ],
            "restricted": false
        },
        "errorLens.messageTemplate": {
            "type": "string",
            "default": "$message",
            "markdownDescription": "Template used for all inline messages. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "$message",
            "restricted": false
        },
        "errorLens.messageMaxChars": {
            "type": "integer",
            "default": 500,
            "minimum": 0,
            "markdownDescription": "Cut off inline message if it's longer than this value. (Improves performance when the diagnostic message is long). Set to **0** to disable inline message.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": 500,
            "restricted": false
        },
        "errorLens.severityText": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Replaces `$severity` variable in `#errorLens.messageTemplate#`.",
            "default": [
                "ERROR",
                "WARNING",
                "INFO",
                "HINT"
            ],
            "minItems": 4,
            "maxItems": 4,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [
                "ERROR",
                "WARNING",
                "INFO",
                "HINT"
            ],
            "restricted": false
        },
        "errorLens.annotationPrefix": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Specify diagnostic message prefixes (when `#errorLens.addAnnotationTextPrefixes#` is enabled). For example, emoji: ❗ ⚠ ℹ.",
            "markdownDeprecationMessage": "Deprecated in favor of `#errorLens.severityText#` & `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
            "default": [
                "ERROR: ",
                "WARNING: ",
                "INFO: ",
                "HINT: "
            ],
            "maxItems": 4,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [
                "ERROR: ",
                "WARNING: ",
                "INFO: ",
                "HINT: "
            ],
            "restricted": false,
            "deprecationMessage": "Deprecated in favor of `#errorLens.severityText#` & `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92"
        },
        "errorLens.addAnnotationTextPrefixes": {
            "type": "boolean",
            "markdownDescription": "When enabled - prepends diagnostic severity ('ERROR:', 'WARNING:' etc) to the message. (Prefixes can be configured with `annotationPrefix` setting).",
            "markdownDeprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92"
        },
        "errorLens.addNumberOfDiagnostics": {
            "type": "boolean",
            "markdownDescription": "When enabled - prepends number of diagnostics on the line. Like: `[1/2]`.",
            "markdownDeprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92"
        },
        "errorLens.messageEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether inline message is shown or not (Including background highlight).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "errorLens.messageBackgroundMode": {
            "type": "string",
            "default": "line",
            "enum": [
                "line",
                "message",
                "none"
            ],
            "enumDescriptions": [
                "The entire line is highlighted.",
                "Inline message is highlighted.",
                "Message is not highlighted (only has foreground colors)."
            ],
            "description": "Controls how inline message is highlighted in the editor (entire line / only message / none).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "line",
            "restricted": false
        },
        "errorLens.editorHoverPartsEnabled": {
            "type": "object",
            "properties": {
                "messageEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "sourceCodeEnabled": {
                    "type": "boolean",
                    "default": false
                },
                "buttonsEnabled": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false,
            "default": {
                "messageEnabled": false,
                "sourceCodeEnabled": false,
                "buttonsEnabled": false
            },
            "markdownDescription": "Controls which parts of the editor hover tooltip to show.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": {
                "messageEnabled": false,
                "sourceCodeEnabled": false,
                "buttonsEnabled": false
            },
            "restricted": false
        },
        "errorLens.statusBarIconsEnabled": {
            "type": "boolean",
            "markdownDescription": "When enabled - shows highlighted error/warning icons in status bar.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.statusBarIconsPriority": {
            "type": "integer",
            "markdownDescription": "Move status bar icons left or right by adjasting the number priority.",
            "default": -9000,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": -9000,
            "restricted": false
        },
        "errorLens.statusBarIconsAlignment": {
            "type": "string",
            "markdownDescription": "Choose on which side the icons status bar is on: left or right.",
            "enum": [
                "left",
                "right"
            ],
            "default": "left",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "left",
            "restricted": false
        },
        "errorLens.statusBarIconsUseBackground": {
            "type": "boolean",
            "markdownDescription": "When enabled - highlights status bar icons with background, when disabled - with foreground.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "errorLens.statusBarIconsAtZero": {
            "type": "string",
            "markdownDescription": "What to do when there are 0 errors/warnings - hide the item or strip its background color.",
            "enum": [
                "hide",
                "removeBackground"
            ],
            "default": "removeBackground",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "removeBackground",
            "restricted": false
        },
        "errorLens.statusBarMessageEnabled": {
            "type": "boolean",
            "markdownDescription": "When enabled - shows message in status bar.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.statusBarMessagePriority": {
            "type": "integer",
            "markdownDescription": "Move status bar message left or right by adjasting the number priority.",
            "default": -10000,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": -10000,
            "restricted": false
        },
        "errorLens.statusBarMessageAlignment": {
            "type": "string",
            "markdownDescription": "Choose on which side the message status bar is on: left or right.",
            "enum": [
                "left",
                "right"
            ],
            "default": "left",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "left",
            "restricted": false
        },
        "errorLens.statusBarColorsEnabled": {
            "type": "boolean",
            "markdownDescription": "When enabled - use message decoration foreground as color of Status Bar text.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.statusBarMessageType": {
            "type": "string",
            "markdownDescription": "Pick what to show in Status Bar: closest message or only message for the active line.",
            "enum": [
                "closestProblem",
                "closestSeverity",
                "activeLine"
            ],
            "enumDescriptions": [
                "Show closest to the cursor diagnostic.",
                "Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).",
                "Show only diagnostic that is on the same line as the cursor."
            ],
            "default": "activeLine",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "activeLine",
            "restricted": false
        },
        "errorLens.statusBarCommand": {
            "type": "string",
            "markdownDescription": "Pick command that activates on click for Status Bar.",
            "enum": [
                "goToProblem",
                "goToLine",
                "copyMessage"
            ],
            "default": "goToProblem",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "goToProblem",
            "restricted": false
        },
        "errorLens.statusBarMessageTemplate": {
            "type": "string",
            "default": "",
            "markdownDescription": "Template for status bar message. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.replace": {
            "type": "array",
            "default": [],
            "items": {
                "type": "object",
                "properties": {
                    "matcher": {
                        "type": "string",
                        "description": "The RegExp pattern against which to match diagnostic messages"
                    },
                    "message": {
                        "type": "string",
                        "description": "The entire replacement for messages matching matcher. Can reference match groups like $0 (entire expression), $1 (first capture group), etc."
                    }
                },
                "required": [
                    "matcher",
                    "message"
                ]
            },
            "markdownDescription": "Specify message to transform. E.g. if this is configured to [{ matcher: 'foo (.*)', message: 'just $1' }], the message 'foo bar' would be displayed as 'just bar'.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "errorLens.exclude": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Specify messages that should not be highlighted (RegExp). Strings passed to the RegExp constructor: `new RegExp(EXCLUDE_ITEM, 'i');`",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "errorLens.excludeBySource": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Specify source or source(code) pair that should not be highlighted. Examples: `[\"eslint\"]` or `[\"eslint(padded-blocks)\"]`",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "errorLens.excludePatterns": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Exclude files by using glob pattern. Example `[\"**/*.{ts,js}\"]`",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "errorLens.excludeWorkspaces": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Exclude workspaces by path.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "errorLens.disableLineComments": {
            "type": "object",
            "markdownDescription": "Used for `errorLens.disableLine` command that adds a comment disabling linter rule for a line.\nTo force comment on the same line - add `SAME_LINE` to the message: `\"eslint\": \"// eslint-disable-line $code SAME_LINE\"`",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            },
            "default": {
                "eslint": "// eslint-disable-next-line $code",
                "Stylelint": "/* stylelint-disable-next-line $code */"
            },
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": {
                "eslint": "// eslint-disable-next-line $code",
                "Stylelint": "/* stylelint-disable-next-line $code */"
            },
            "restricted": false
        },
        "errorLens.lintFilePaths": {
            "type": "object",
            "default": {
                "eslint": [
                    "**/*.eslintrc.{js,cjs,yaml,yml,json}",
                    "**/*package.json"
                ],
                "Stylelint": [
                    "**/*.stylelintrc",
                    "**/*.stylelintrc.{cjs,js,json,yaml,yml}",
                    "**/*stylelint.config.{cjs,js}",
                    "**/*package.json"
                ]
            },
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "string",
                            "enum": [
                                "none"
                            ]
                        }
                    ]
                }
            },
            "markdownDescription": "Specify where to search for linter rule definitions by diagnostic source ([glob](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) for local linter files). `node_modules` folder is excluded.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": {
                "eslint": [
                    "**/*.eslintrc.{js,cjs,yaml,yml,json}",
                    "**/*package.json"
                ],
                "Stylelint": [
                    "**/*.stylelintrc",
                    "**/*.stylelintrc.{cjs,js,json,yaml,yml}",
                    "**/*stylelint.config.{cjs,js}",
                    "**/*package.json"
                ]
            },
            "restricted": false
        },
        "errorLens.searchForProblemQuery": {
            "type": "string",
            "default": "https://duckduckgo.com/?q=$message",
            "markdownDescription": "Pick query to open in default browser when searching for problem with `errorLens.searchForProblem` command.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "https://duckduckgo.com/?q=$message",
            "restricted": false
        },
        "errorLens.selectProblemType": {
            "type": "string",
            "default": "closestProblem",
            "enum": [
                "closestProblem",
                "closestSeverity",
                "activeLine"
            ],
            "enumDescriptions": [
                "Show closest to the cursor diagnostic.",
                "Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).",
                "Show only diagnostic that is on the same line as the cursor."
            ],
            "markdownDescription": "Which problem to select (closest / active line) when executing `errorLens.selectProblem` command.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "closestProblem",
            "restricted": false
        },
        "errorLens.light": {
            "type": "object",
            "markdownDescription": "Specify color of decorations for when the light color theme is active.",
            "properties": {
                "errorGutterIconPath": {
                    "type": "string",
                    "description": "Absolute path to error gutter icon for light themes.",
                    "default": ""
                },
                "warningGutterIconPath": {
                    "type": "string",
                    "description": "Absolute path to warning gutter icon for light themes.",
                    "default": ""
                },
                "infoGutterIconPath": {
                    "type": "string",
                    "description": "Absolute path to info gutter icon for light themes.",
                    "default": ""
                },
                "hintGutterIconPath": {
                    "type": "string",
                    "description": "Absolute path to hint gutter icon for light themes.",
                    "default": ""
                },
                "errorGutterIconColor": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Error color of simple gutter icons (shapes and letters) for light themes.",
                    "format": "color"
                },
                "warningGutterIconColor": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Warning color of simple gutter icons (shapes and letters) for light themes.",
                    "format": "color"
                },
                "infoGutterIconColor": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Info color of simple gutter icons (shapes and letters) for light themes.",
                    "format": "color"
                },
                "hintGutterIconColor": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Hint color of simple gutter icons (shapes and letters) for light themes.",
                    "format": "color"
                }
            },
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "default": {},
            "restricted": false
        },
        "errorLens.delay": {
            "type": "integer",
            "markdownDescription": "Delay (ms) before showing problem decorations (**0** to disable). Minimum delay of **500** is enforced by the extension. `#errorLens.delayMode#` controls how to handle the delay.",
            "default": 0,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "errorLens.delayMode": {
            "type": "string",
            "default": "old",
            "enum": [
                "old",
                "debounce"
            ],
            "markdownEnumDescriptions": [
                "New problems appear according to `errorLens.delay` setting. Fixed problems disappear faster. A bit buggy.",
                "Decorations for problems are debounced according to `errorLens.delay` setting."
            ],
            "markdownDescription": "Pick which version of the delay to use.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "old",
            "restricted": false
        },
        "errorLens.onSave": {
            "type": "boolean",
            "description": "When enabled - updates decorations only on document save (manual).",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.onSaveTimeout": {
            "type": "number",
            "description": "Time period (ms) that used for showing decorations after the document save.",
            "default": 1000,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "errorLens.enableOnDiffView": {
            "type": "boolean",
            "markdownDescription": "Enable decorations when viewing a diff view in the editor (e.g. Git diff).",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.followCursor": {
            "type": "string",
            "enum": [
                "allLines",
                "allLinesExceptActive",
                "activeLine",
                "closestProblem"
            ],
            "enumDescriptions": [
                "Highlight all problems in file",
                "Highlight all problems in file (except the line at the cursor)",
                "Highlight only the problem at the cursor",
                "Highlight only closest to the cursor problem"
            ],
            "description": "Highlight only portion of the problems.",
            "default": "allLines",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "allLines",
            "restricted": false
        },
        "errorLens.followCursorMore": {
            "type": "number",
            "markdownDescription": "Augments `#errorLens.followCursor#`.\nAdds number of lines to top and bottom when `#errorLens.followCursor#` is set to `activeLine`.\n Adds number of closest problems when `#errorLens.followCursor#` is `closestProblem`",
            "default": 0,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "errorLens.gutterIconsEnabled": {
            "type": "boolean",
            "description": "When enabled - shows gutter icons (In place of the debug breakpoint icon).",
            "default": false,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "errorLens.gutterIconsFollowCursorOverride": {
            "type": "boolean",
            "markdownDescription": "When enabled and `#errorLens.followCursor#` setting is not `allLines`, then gutter icons would be rendered for all problems. But line decorations (background, message) only for active line.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "errorLens.gutterIconSize": {
            "type": "string",
            "markdownDescription": "Change gutter icon size. Examples: `auto`, `contain`, `cover`, `50%`, `150%` ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/background-size)).",
            "examples": [
                "auto",
                "contain",
                "cover",
                "50%",
                "150%"
            ],
            "default": "100%",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "100%",
            "restricted": false
        },
        "errorLens.gutterIconSet": {
            "type": "string",
            "description": "Change gutter icon style.",
            "enum": [
                "default",
                "defaultOutline",
                "borderless",
                "circle",
                "square",
                "squareRounded",
                "letter"
            ],
            "enumDescriptions": [
                "Similar to vscode icons in Problems Panel (old).",
                "Similar to vscode icons in Problems Panel (new).",
                "Similar to vscode icons in Problems Panel, only without a border.",
                "Simple filled circle.",
                "Simple filled square.",
                "Simple filled square with rounded corners.",
                "Simple one letter icon (E,W,I,H)."
            ],
            "default": "default",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "errorLens.errorGutterIconPath": {
            "type": "string",
            "description": "Absolute path to error gutter icon.",
            "default": "",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.warningGutterIconPath": {
            "type": "string",
            "description": "Absolute path to warning gutter icon.",
            "default": "",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.infoGutterIconPath": {
            "type": "string",
            "description": "Absolute path to info gutter icon.",
            "default": "",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.hintGutterIconPath": {
            "type": "string",
            "description": "Absolute path to hint gutter icon.",
            "default": "",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "errorLens.errorGutterIconColor": {
            "type": "string",
            "default": "#e45454",
            "markdownDescription": "Error color of simple gutter icons (shapes and letters).",
            "format": "color",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "#e45454",
            "restricted": false
        },
        "errorLens.warningGutterIconColor": {
            "type": "string",
            "default": "#ff942f",
            "markdownDescription": "Warning color of simple gutter icons (shapes and letters).",
            "format": "color",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "#ff942f",
            "restricted": false
        },
        "errorLens.infoGutterIconColor": {
            "type": "string",
            "default": "#00b7e4",
            "markdownDescription": "Info color of simple gutter icons (shapes and letters).",
            "format": "color",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "#00b7e4",
            "restricted": false
        },
        "errorLens.hintGutterIconColor": {
            "type": "string",
            "default": "#2faf64",
            "markdownDescription": "Hint color of simple gutter icons (shapes and letters).",
            "format": "color",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "#2faf64",
            "restricted": false
        },
        "errorLens.removeLinebreaks": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled - replaces line breaks in inline diagnostic message with whitespaces.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "errorLens.replaceLinebreaksSymbol": {
            "type": "string",
            "default": "⏎",
            "markdownDescription": "Symbol to replace linebreaks. Requires enabling `#errorLens.removeLinebreaks#`.",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": "⏎",
            "restricted": false
        },
        "errorLens.scrollbarHackEnabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled - prevents showing horizontal scrollbar in editor (caused by inline decorations).",
            "scope": 3,
            "source": {
                "id": "usernamehw.errorlens",
                "displayName": "Error Lens"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "lldb.launch.envFile": {
            "order": 10,
            "description": "File to read the environment variables from.",
            "type": "string",
            "scope": 3,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.rpcServer": {
            "description": "Start an RPC server that will accept debug configuration requests.",
            "type": [
                "object",
                "null"
            ],
            "default": null,
            "scope": 3,
            "order": 2,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "swift-coverage.coverageFilePattern": {
            "type": "string",
            "default": "**/.build/*/debug/{coverage,codecov}/*.json",
            "description": "The pattern where to find the llvm-codecov JSON-reports.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": "**/.build/*/debug/{coverage,codecov}/*.json",
            "restricted": false
        },
        "swift-coverage.highlightsCoveredText": {
            "type": "boolean",
            "default": false,
            "description": "Wether code with coverage should have a higlighted background.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "swift-coverage.highlightsNotCoveredText": {
            "type": "boolean",
            "default": true,
            "description": "Wether code with no coverage should have a higlighted background.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift-coverage.coveredTextBackground.dark": {
            "type": "string",
            "default": "rgba(48, 209, 88, 0.25)",
            "description": "The brackground color used to highlight code with coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": "rgba(48, 209, 88, 0.25)",
            "restricted": false
        },
        "swift-coverage.coveredTextBackground.light": {
            "type": "string",
            "default": "rgba(52, 199, 89, 0.25)",
            "description": "The brackground color used to highlight code with coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": "rgba(52, 199, 89, 0.25)",
            "restricted": false
        },
        "swift-coverage.notCoveredTextBackground.dark": {
            "type": "string",
            "default": "rgba(255, 69, 58, 0.25)",
            "description": "The brackground color used to highlight code with no coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": "rgba(255, 69, 58, 0.25)",
            "restricted": false
        },
        "swift-coverage.notCoveredTextBackground.light": {
            "type": "string",
            "default": "rgba(255, 59, 48, 0.25)",
            "description": "The brackground color used to highlight code with no coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": "rgba(255, 59, 48, 0.25)",
            "restricted": false
        },
        "swift-coverage.highlightsCoveredGutter": {
            "type": "boolean",
            "default": true,
            "description": "Wether lines with coverage should have a highlight-gutter.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift-coverage.highlightsNotCoveredGutter": {
            "type": "boolean",
            "default": true,
            "description": "Wether lines with no coverage should have a highlight-gutter.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift-coverage.highlightsMixedGutter": {
            "type": "boolean",
            "default": true,
            "description": "Wether lines with mixed coverage should have a highlight-gutter.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "swift-coverage.coveredGutterIcon.dark": {
            "type": "string",
            "default": null,
            "description": "The path to the gutter-icon used to highlight code with coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "swift-coverage.coveredGutterIcon.light": {
            "type": "string",
            "default": null,
            "description": "The path to the gutter-icon used to highlight code with coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "swift-coverage.notCoveredGutterIcon.dark": {
            "type": "string",
            "default": null,
            "description": "The path to the gutter-icon used to highlight code without coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "swift-coverage.notCoveredGutterIcon.light": {
            "type": "string",
            "default": null,
            "description": "The path to the gutter-icon used to highlight code without coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "swift-coverage.mixedGutterIcon.dark": {
            "type": "string",
            "default": null,
            "description": "The path to the gutter-icon used to highlight code with mixed coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "swift-coverage.mixedGutterIcon.light": {
            "type": "string",
            "default": null,
            "description": "The path to the gutter-icon used to highlight code with mixed coverage.",
            "scope": 3,
            "source": {
                "id": "vknabel.swift-coverage",
                "displayName": "Swift Coverage"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "vim.useCtrlKeys": {
            "type": "boolean",
            "markdownDescription": "Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.leader": {
            "type": "string",
            "markdownDescription": "What key should `<leader>` map to in remappings?",
            "default": "\\",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "\\",
            "restricted": false
        },
        "vim.searchHighlightColor": {
            "type": "string",
            "markdownDescription": "Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.searchHighlightTextColor": {
            "type": "string",
            "markdownDescription": "Foreground color of non-current search matches.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.searchMatchColor": {
            "type": "string",
            "markdownDescription": "Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.searchMatchTextColor": {
            "type": "string",
            "markdownDescription": "Foreground color of the current match.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.substitutionColor": {
            "type": "string",
            "markdownDescription": "Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.substitutionTextColor": {
            "type": "string",
            "markdownDescription": "Foreground color of substituted text when `#editor.inccommand#` is enabled.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.highlightedyank.enable": {
            "type": "boolean",
            "description": "Enable highlighting when yanking.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.highlightedyank.color": {
            "type": "string",
            "description": "Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.",
            "default": "rgba(250, 240, 170, 0.5)",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "rgba(250, 240, 170, 0.5)",
            "restricted": false
        },
        "vim.highlightedyank.textColor": {
            "type": "string",
            "description": "Foreground color of yanked text.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.highlightedyank.duration": {
            "type": "number",
            "description": "Duration in milliseconds of the yank highlight.",
            "default": 200,
            "minimum": 1,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 200,
            "restricted": false
        },
        "vim.useSystemClipboard": {
            "type": "boolean",
            "description": "Use system clipboard for unnamed register.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.overrideCopy": {
            "type": "boolean",
            "description": "Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.timeout": {
            "type": "number",
            "description": "Timeout in milliseconds for remapped commands.",
            "default": 1000,
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "vim.maxmapdepth": {
            "type": "number",
            "description": "Maximum number of times a mapping is done without resulting in a character to be used.",
            "default": 1000,
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "vim.scroll": {
            "type": "number",
            "markdownDescription": "Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.",
            "default": 0,
            "minimum": 0,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "vim.showcmd": {
            "type": "boolean",
            "description": "Show the text of any command you are in the middle of writing.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.showmodename": {
            "type": "boolean",
            "description": "Show the name of the current mode in the statusbar.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.iskeyword": {
            "type": "string",
            "markdownDescription": "Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.ignorecase": {
            "type": "boolean",
            "description": "Ignore case in search patterns.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.smartcase": {
            "type": "boolean",
            "markdownDescription": "Override the `ignorecase` option if the search pattern contains upper case characters.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.matchpairs": {
            "type": "string",
            "markdownDescription": "Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.",
            "default": "(:),{:},[:]",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "(:),{:},[:]",
            "restricted": false
        },
        "vim.camelCaseMotion.enable": {
            "type": "boolean",
            "markdownDescription": "Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.easymotion": {
            "type": "boolean",
            "markdownDescription": "Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.easymotionMarkerBackgroundColor": {
            "type": "string",
            "default": "#0000",
            "description": "Set a custom background color for EasyMotion markers.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#0000",
            "restricted": false
        },
        "vim.easymotionMarkerForegroundColorOneChar": {
            "type": "string",
            "default": "#ff0000",
            "description": "Set a custom color for the text on one character long markers.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#ff0000",
            "restricted": false
        },
        "vim.easymotionMarkerForegroundColorTwoCharFirst": {
            "type": "string",
            "default": "#ffb400",
            "description": "Set a custom color for the first character on two character long markers.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#ffb400",
            "restricted": false
        },
        "vim.easymotionMarkerForegroundColorTwoCharSecond": {
            "type": "string",
            "default": "#b98300",
            "description": "Set a custom color for the second character on two character long markers.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#b98300",
            "restricted": false
        },
        "vim.easymotionIncSearchForegroundColor": {
            "type": "string",
            "default": "#7fbf00",
            "markdownDescription": "Set a custom color for the easymotion search n-character (default `<leader><leader>/`).",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#7fbf00",
            "restricted": false
        },
        "vim.easymotionDimColor": {
            "type": "string",
            "default": "#777777",
            "markdownDescription": "Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#777777",
            "restricted": false
        },
        "vim.easymotionDimBackground": {
            "type": "boolean",
            "description": "Whether to dim other text while markers are visible.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.easymotionMarkerFontWeight": {
            "type": "string",
            "description": "Set the font weight of the marker text.",
            "default": "bold",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "bold",
            "restricted": false
        },
        "vim.easymotionKeys": {
            "type": "string",
            "description": "Set the characters used for jump marker name.",
            "default": "hklyuiopnm,qwertzxcvbasdgjf;",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "hklyuiopnm,qwertzxcvbasdgjf;",
            "restricted": false
        },
        "vim.easymotionJumpToAnywhereRegex": {
            "type": "string",
            "description": "Regex matches for JumpToAnywhere motion.",
            "default": "\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]",
            "restricted": false
        },
        "vim.replaceWithRegister": {
            "type": "boolean",
            "markdownDescription": "Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.smartRelativeLine": {
            "type": "boolean",
            "markdownDescription": "`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.targets.enable": {
            "type": "boolean",
            "markdownDescription": "Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.targets.bracketObjects.enable": {
            "type": "boolean",
            "markdownDescription": "Enable last/next movements for bracket objects.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.targets.smartQuotes.enable": {
            "type": "boolean",
            "markdownDescription": "Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.targets.smartQuotes.breakThroughLines": {
            "type": "boolean",
            "markdownDescription": "Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.targets.smartQuotes.aIncludesSurroundingSpaces": {
            "type": "boolean",
            "markdownDescription": "Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.sneak": {
            "type": "boolean",
            "markdownDescription": "Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.sneakUseIgnorecaseAndSmartcase": {
            "type": "boolean",
            "markdownDescription": "Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.sneakReplacesF": {
            "type": "boolean",
            "markdownDescription": "Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.surround": {
            "type": "boolean",
            "markdownDescription": "Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.argumentObjectSeparators": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Set separators for the argument text object.",
            "default": [
                ","
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": [
                ","
            ],
            "restricted": false
        },
        "vim.argumentObjectOpeningDelimiters": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Set opening delimiters for the argument text object.",
            "default": [
                "(",
                "["
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": [
                "(",
                "["
            ],
            "restricted": false
        },
        "vim.argumentObjectClosingDelimiters": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Set closing delimiters for the argument text object.",
            "default": [
                ")",
                "]"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": [
                ")",
                "]"
            ],
            "restricted": false
        },
        "vim.hlsearch": {
            "type": "boolean",
            "description": "Show all matches of the most recent search pattern.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.inccommand": {
            "type": "string",
            "markdownDescription": "Show the effects of the `:substitute` command as you type.",
            "default": "replace",
            "enum": [
                "",
                "append",
                "replace"
            ],
            "enumDescriptions": [
                "Don't show substitutions",
                "Show substitutions after matched text",
                "Replace matched text with substitutions"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "replace",
            "restricted": false
        },
        "vim.incsearch": {
            "type": "boolean",
            "markdownDescription": "Show where a `/` or `?` search matches as you type it.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.history": {
            "type": "number",
            "description": "How much search or command history should be remembered.",
            "default": 50,
            "minimum": 1,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 50,
            "restricted": false
        },
        "vim.autoindent": {
            "type": "boolean",
            "description": "Indent code automatically.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.joinspaces": {
            "type": "boolean",
            "description": "Add two spaces after '.', '?', and '!' when joining or reformatting.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.startInInsertMode": {
            "type": "boolean",
            "description": "Start in Insert mode.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": false,
            "restricted": false
        },
        "vim.handleKeys": {
            "type": "object",
            "description": "Delegate certain key combinations back to VSCode to be handled natively.",
            "default": {
                "<C-d>": true,
                "<C-s>": false,
                "<C-z>": false
            },
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": {
                "<C-d>": true,
                "<C-s>": false,
                "<C-z>": false
            },
            "restricted": false
        },
        "vim.statusBarColorControl": {
            "type": "boolean",
            "markdownDescription": "Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.statusBarColors.normal": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in Normal mode.",
            "default": "#005f5f",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#005f5f",
            "restricted": false
        },
        "vim.statusBarColors.insert": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in Insert mode.",
            "default": "#5f0000",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#5f0000",
            "restricted": false
        },
        "vim.statusBarColors.visual": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in Visual mode.",
            "default": "#5f00af",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#5f00af",
            "restricted": false
        },
        "vim.statusBarColors.visualline": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in VisualLine mode.",
            "default": "#005f5f",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#005f5f",
            "restricted": false
        },
        "vim.statusBarColors.visualblock": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in VisualBlock mode.",
            "default": "#86592d",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#86592d",
            "restricted": false
        },
        "vim.statusBarColors.replace": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in Replace mode.",
            "default": "#00000",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#00000",
            "restricted": false
        },
        "vim.statusBarColors.commandlineinprogress": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in CommandLineInProgress mode.",
            "default": "#007acc",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#007acc",
            "restricted": false
        },
        "vim.statusBarColors.searchinprogressmode": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in SearchInProgress mode.",
            "default": "#007acc",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#007acc",
            "restricted": false
        },
        "vim.statusBarColors.easymotionmode": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in EasyMotion mode.",
            "default": "#007acc",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#007acc",
            "restricted": false
        },
        "vim.statusBarColors.easymotioninputmode": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in EasyMotionInput mode.",
            "default": "#007acc",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#007acc",
            "restricted": false
        },
        "vim.statusBarColors.surroundinputmode": {
            "type": [
                "string",
                "array"
            ],
            "description": "Status bar color when in SurroundInput mode.",
            "default": "#007acc",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "#007acc",
            "restricted": false
        },
        "vim.visualstar": {
            "type": "boolean",
            "markdownDescription": "In Visual mode, start a search with `*` or `#` using the current selection.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.changeWordIncludesWhitespace": {
            "type": "boolean",
            "description": "Includes trailing whitespace when changing word.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.foldfix": {
            "type": "boolean",
            "description": "Uses a hack to move around folds properly.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.mouseSelectionGoesIntoVisualMode": {
            "type": "boolean",
            "description": "If enabled, dragging with the mouse activates Visual mode.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.disableExtension": {
            "type": "boolean",
            "description": "Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.enableNeovim": {
            "type": "boolean",
            "markdownDescription": "Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.neovimUseConfigFile": {
            "type": "boolean",
            "markdownDescription": "Use a config file for Neovim, specified by `vim.neovimConfigPath`.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.vimrc.enable": {
            "type": "boolean",
            "markdownDescription": "Use key mappings from a `.vimrc` file.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.vimrc.path": {
            "type": "string",
            "markdownDescription": "Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.substituteGlobalFlag": {
            "type": "boolean",
            "markdownDescription": "Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.",
            "default": false,
            "markdownDeprecationMessage": "**Deprecated**: Please use `#vim.gdefault#` instead.",
            "deprecationMessage": "Deprecated: Please use vim.gdefault instead.",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.gdefault": {
            "type": "boolean",
            "markdownDescription": "Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.cursorStylePerMode.normal": {
            "type": "string",
            "description": "Cursor style for Normal mode.",
            "enum": [
                "",
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.cursorStylePerMode.insert": {
            "type": "string",
            "description": "Cursor style for Insert mode.",
            "enum": [
                "",
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.cursorStylePerMode.replace": {
            "type": "string",
            "description": "Cursor style for Replace mode.",
            "enum": [
                "",
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.cursorStylePerMode.visual": {
            "type": "string",
            "description": "Cursor style for Visual mode.",
            "enum": [
                "",
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.cursorStylePerMode.visualline": {
            "type": "string",
            "description": "Cursor style for VisualLine mode.",
            "enum": [
                "",
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.cursorStylePerMode.visualblock": {
            "type": "string",
            "description": "Cursor style for VisualBlock mode.",
            "enum": [
                "",
                "block",
                "block-outline",
                "line",
                "line-thin",
                "underline",
                "underline-thin"
            ],
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "default": "",
            "restricted": false
        },
        "vim.autoSwitchInputMethod.enable": {
            "type": "boolean",
            "description": "If enabled, the input method switches automatically when the mode changes.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.whichwrap": {
            "type": "string",
            "description": "Comma-separated list of motion keys that should wrap to next/previous line.",
            "default": "b,s",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "b,s",
            "restricted": false
        },
        "vim.report": {
            "type": "number",
            "description": "Threshold for reporting number of lines changed.",
            "default": 2,
            "minimum": 1,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 2,
            "restricted": false
        },
        "vim.digraphs": {
            "type": "object",
            "description": "Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.",
            "default": {},
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "vim.wrapscan": {
            "type": "boolean",
            "description": "Searches wrap around the end of the file.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.startofline": {
            "type": "boolean",
            "markdownDescription": "When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.",
            "default": true,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.showMarksInGutter": {
            "type": "boolean",
            "description": "Show the currently set mark(s) in the gutter.",
            "default": false,
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "vim.shell": {
            "type": "string",
            "description": "Path to the shell to use for `!` and `:!` commands.",
            "default": "",
            "scope": 3,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "d.ignoreDebugHints": {
            "type": "boolean",
            "scope": 3,
            "default": false,
            "description": "If true, no hints will be shown when a project may be wrongly configured when trying to start debugging.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "terminal.integrated.defaultProfile.linux": {
            "restricted": true,
            "markdownDescription": "The default terminal profile on Linux.",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "defaultDefaultValue": null,
            "scope": 3
        },
        "terminal.integrated.defaultProfile.osx": {
            "restricted": true,
            "markdownDescription": "The default terminal profile on macOS.",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "enum": [
                null,
                "bash",
                "csh",
                "dash",
                "ksh",
                "sh",
                "tcsh",
                "zsh",
                "JavaScript Debug Terminal"
            ],
            "markdownEnumDescriptions": [
                "Automatically detect the default",
                "$(terminal-bash) bash\n- path: /run/current-system/sw/bin/bash\n- args: ['-l']",
                "$(terminal) csh\n- path: /bin/csh",
                "$(terminal) dash\n- path: /bin/dash",
                "$(terminal) ksh\n- path: /bin/ksh",
                "$(terminal) sh\n- path: /bin/sh",
                "$(terminal) tcsh\n- path: /bin/tcsh",
                "$(terminal) zsh\n- path: /etc/profiles/per-user/winston/bin/zsh\n- args: ['-l']",
                "$($(debug)) JavaScript Debug Terminal\n- extensionIdentifier: ms-vscode.js-debug"
            ],
            "defaultDefaultValue": null,
            "scope": 3
        },
        "terminal.integrated.defaultProfile.windows": {
            "restricted": true,
            "markdownDescription": "The default terminal profile on Windows.",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "defaultDefaultValue": null,
            "scope": 3
        },
        "terminal.explorerKind": {
            "type": "string",
            "enum": [
                "integrated",
                "external",
                "both"
            ],
            "enumDescriptions": [
                "Use VS Code's integrated terminal.",
                "Use the configured external terminal.",
                "Use the other two together."
            ],
            "description": "When opening a file from the Explorer in a terminal, determines what kind of terminal will be launched",
            "default": "integrated",
            "defaultDefaultValue": "integrated",
            "scope": 3,
            "restricted": false
        },
        "terminal.sourceControlRepositoriesKind": {
            "type": "string",
            "enum": [
                "integrated",
                "external",
                "both"
            ],
            "enumDescriptions": [
                "Use VS Code's integrated terminal.",
                "Use the configured external terminal.",
                "Use the other two together."
            ],
            "description": "When opening a repository from the Source Control Repositories view in a terminal, determines what kind of terminal will be launched",
            "default": "integrated",
            "defaultDefaultValue": "integrated",
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.autoLockGroups": {
            "type": "object",
            "description": "If an editor matching one of the listed types is opened as the first in an editor group and more than one group is open, the group is automatically locked. Locked groups will only be used for opening editors when explicitly chosen by a user gesture (for example drag and drop), but not by default. Consequently, the active editor in a locked group is less likely to be replaced accidentally with a different editor.",
            "properties": {
                "default": {
                    "type": "boolean",
                    "default": false,
                    "description": "Text Editor"
                },
                "workbench.editorinputs.searchEditorInput": {
                    "type": "boolean",
                    "default": false,
                    "description": "Search Editor"
                },
                "workbench.editor.chatSession": {
                    "type": "boolean",
                    "default": false,
                    "description": "Chat"
                },
                "imagePreview.previewEditor": {
                    "type": "boolean",
                    "default": false,
                    "description": "Image Preview"
                },
                "vscode.audioPreview": {
                    "type": "boolean",
                    "default": false,
                    "description": "Audio Preview"
                },
                "vscode.videoPreview": {
                    "type": "boolean",
                    "default": false,
                    "description": "Video Preview"
                },
                "jsProfileVisualizer.cpuprofile.table": {
                    "type": "boolean",
                    "default": false,
                    "description": "CPU Profile Table Visualizer"
                },
                "jsProfileVisualizer.heapprofile.table": {
                    "type": "boolean",
                    "default": false,
                    "description": "Heap Profile Table Visualizer"
                },
                "gitlens.rebase": {
                    "type": "boolean",
                    "default": false,
                    "description": "GitLens Interactive Rebase Editor"
                },
                "latex-workshop-pdf-hook": {
                    "type": "boolean",
                    "default": false,
                    "description": "LaTeX Workshop Internal PDF Viewer"
                },
                "jupyter-notebook": {
                    "type": "boolean",
                    "default": false,
                    "description": "Jupyter Notebook"
                },
                "workbench.editors.gettingStartedInput": {
                    "type": "boolean",
                    "default": false,
                    "description": "Welcome Page"
                },
                "terminalEditor": {
                    "type": "boolean",
                    "default": true,
                    "description": "Terminal"
                },
                "workbench.input.interactive": {
                    "type": "boolean",
                    "default": false,
                    "description": "Interactive Window"
                },
                "mainThreadWebview-markdown.preview": {
                    "type": "boolean",
                    "default": false,
                    "description": "Markdown Preview"
                }
            },
            "default": {
                "default": false,
                "workbench.editorinputs.searchEditorInput": false,
                "workbench.editor.chatSession": false,
                "imagePreview.previewEditor": false,
                "vscode.audioPreview": false,
                "vscode.videoPreview": false,
                "jsProfileVisualizer.cpuprofile.table": false,
                "jsProfileVisualizer.heapprofile.table": false,
                "gitlens.rebase": false,
                "latex-workshop-pdf-hook": false,
                "jupyter-notebook": false,
                "workbench.editors.gettingStartedInput": false,
                "terminalEditor": true,
                "workbench.input.interactive": false,
                "mainThreadWebview-markdown.preview": false
            },
            "additionalProperties": false,
            "defaultDefaultValue": {
                "default": false,
                "workbench.editorinputs.searchEditorInput": false,
                "workbench.editor.chatSession": false,
                "imagePreview.previewEditor": false,
                "vscode.audioPreview": false,
                "vscode.videoPreview": false,
                "jsProfileVisualizer.cpuprofile.table": false,
                "jsProfileVisualizer.heapprofile.table": false,
                "gitlens.rebase": false,
                "latex-workshop-pdf-hook": false,
                "jupyter-notebook": false,
                "workbench.editors.gettingStartedInput": false,
                "terminalEditor": true,
                "workbench.input.interactive": false,
                "mainThreadWebview-markdown.preview": false
            },
            "scope": 3,
            "restricted": false
        },
        "workbench.editor.defaultBinaryEditor": {
            "type": "string",
            "default": "",
            "enum": [
                "default",
                "workbench.editorinputs.searchEditorInput",
                "workbench.editor.chatSession",
                "vscode.markdown.preview.editor",
                "imagePreview.previewEditor",
                "vscode.audioPreview",
                "vscode.videoPreview",
                "jsProfileVisualizer.cpuprofile.table",
                "jsProfileVisualizer.heapprofile.table",
                "gitlens.rebase",
                "latex-workshop-pdf-hook",
                "jupyter-notebook",
                "workbench.editors.gettingStartedInput",
                ""
            ],
            "description": "The default editor for files detected as binary. If undefined, the user will be presented with a picker.",
            "defaultDefaultValue": "",
            "scope": 3,
            "restricted": false
        },
        "workbench.editorAssociations": {
            "type": "object",
            "markdownDescription": "Configure [glob patterns](https://aka.ms/vscode-glob-patterns) to editors (for example `\"*.hex\": \"hexEditor.hexedit\"`). These have precedence over the default behavior.",
            "patternProperties": {
                ".*": {
                    "type": "string",
                    "enum": [
                        "default",
                        "workbench.editorinputs.searchEditorInput",
                        "workbench.editor.chatSession",
                        "vscode.markdown.preview.editor",
                        "imagePreview.previewEditor",
                        "vscode.audioPreview",
                        "vscode.videoPreview",
                        "jsProfileVisualizer.cpuprofile.table",
                        "jsProfileVisualizer.heapprofile.table",
                        "gitlens.rebase",
                        "latex-workshop-pdf-hook",
                        "jupyter-notebook",
                        "workbench.editors.gettingStartedInput"
                    ]
                }
            },
            "default": {},
            "scope": 3,
            "restricted": false
        },
        "editor.tabSize": {
            "type": "number",
            "default": 4,
            "minimum": 1,
            "markdownDescription": "The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
            "defaultDefaultValue": 4,
            "scope": 5,
            "restricted": false
        },
        "editor.indentSize": {
            "anyOf": [
                {
                    "type": "string",
                    "enum": [
                        "tabSize"
                    ]
                },
                {
                    "type": "number",
                    "minimum": 1
                }
            ],
            "default": "tabSize",
            "markdownDescription": "The number of spaces used for indentation or `\"tabSize\"` to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
            "defaultDefaultValue": "tabSize",
            "scope": 5,
            "restricted": false
        },
        "editor.insertSpaces": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.detectIndentation": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.trimAutoWhitespace": {
            "type": "boolean",
            "default": true,
            "description": "Remove trailing auto inserted whitespace.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.largeFileOptimizations": {
            "type": "boolean",
            "default": true,
            "description": "Special handling for large files to disable certain memory intensive features.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.wordBasedSuggestions": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether completions should be computed based on words in the document.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.wordBasedSuggestionsMode": {
            "enum": [
                "currentDocument",
                "matchingDocuments",
                "allDocuments"
            ],
            "default": "matchingDocuments",
            "enumDescriptions": [
                "Only suggest words from the active document.",
                "Suggest words from all open documents of the same language.",
                "Suggest words from all open documents."
            ],
            "description": "Controls from which documents word based completions are computed.",
            "defaultDefaultValue": "matchingDocuments",
            "scope": 5,
            "restricted": false
        },
        "editor.semanticHighlighting.enabled": {
            "enum": [
                true,
                false,
                "configuredByTheme"
            ],
            "enumDescriptions": [
                "Semantic highlighting enabled for all color themes.",
                "Semantic highlighting disabled for all color themes.",
                "Semantic highlighting is configured by the current color theme's `semanticHighlighting` setting."
            ],
            "default": "configuredByTheme",
            "description": "Controls whether the semanticHighlighting is shown for the languages that support it.",
            "defaultDefaultValue": "configuredByTheme",
            "scope": 5,
            "restricted": false
        },
        "editor.stablePeek": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Keep peek editors open even when double-clicking their content or when hitting `Escape`.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.maxTokenizationLineLength": {
            "type": "integer",
            "default": 20000,
            "description": "Lines above this length will not be tokenized for performance reasons",
            "defaultDefaultValue": 20000,
            "scope": 5,
            "restricted": false
        },
        "editor.experimental.asyncTokenization": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the tokenization should happen asynchronously on a web worker.",
            "tags": [
                "experimental"
            ],
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.experimental.asyncTokenizationLogging": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether async tokenization should be logged. For debugging only.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.experimental.asyncTokenizationVerification": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether async tokenization should be verified against legacy background tokenization. Might slow down tokenization. For debugging only.",
            "tags": [
                "experimental"
            ],
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.language.brackets": {
            "type": [
                "array",
                "null"
            ],
            "default": null,
            "description": "Defines the bracket symbols that increase or decrease the indentation.",
            "items": {
                "type": "array",
                "items": [
                    {
                        "type": "string",
                        "description": "The opening bracket character or string sequence."
                    },
                    {
                        "type": "string",
                        "description": "The closing bracket character or string sequence."
                    }
                ]
            },
            "defaultDefaultValue": null,
            "scope": 5,
            "restricted": false
        },
        "editor.language.colorizedBracketPairs": {
            "type": [
                "array",
                "null"
            ],
            "default": null,
            "description": "Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.",
            "items": {
                "type": "array",
                "items": [
                    {
                        "type": "string",
                        "description": "The opening bracket character or string sequence."
                    },
                    {
                        "type": "string",
                        "description": "The closing bracket character or string sequence."
                    }
                ]
            },
            "defaultDefaultValue": null,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.maxComputationTime": {
            "type": "number",
            "default": 5000,
            "description": "Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
            "defaultDefaultValue": 5000,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.maxFileSize": {
            "type": "number",
            "default": 50,
            "description": "Maximum file size in MB for which to compute diffs. Use 0 for no limit.",
            "defaultDefaultValue": 50,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.renderSideBySide": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the diff editor shows the diff side by side or inline.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.renderSideBySideInlineBreakpoint": {
            "type": "number",
            "default": 900,
            "description": "If the diff editor width is smaller than this value, the inline view is used.",
            "defaultDefaultValue": 900,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.useInlineViewWhenSpaceIsLimited": {
            "type": "boolean",
            "default": true,
            "description": "If enabled and the editor width is too small, the inline view is used.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.renderMarginRevertIcon": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, the diff editor shows arrows in its glyph margin to revert changes.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.ignoreTrimWhitespace": {
            "type": "boolean",
            "default": true,
            "description": "When enabled, the diff editor ignores changes in leading or trailing whitespace.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.renderIndicators": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the diff editor shows +/- indicators for added/removed changes.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.codeLens": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the editor shows CodeLens.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.wordWrap": {
            "type": "string",
            "enum": [
                "off",
                "on",
                "inherit"
            ],
            "default": "inherit",
            "markdownEnumDescriptions": [
                "Lines will never wrap.",
                "Lines will wrap at the viewport width.",
                "Lines will wrap according to the `#editor.wordWrap#` setting."
            ],
            "defaultDefaultValue": "inherit",
            "scope": 5,
            "restricted": false
        },
        "diffEditor.diffAlgorithm": {
            "type": "string",
            "enum": [
                "legacy",
                "advanced"
            ],
            "default": "advanced",
            "markdownEnumDescriptions": [
                "Uses the legacy diffing algorithm.",
                "Uses the advanced diffing algorithm."
            ],
            "tags": [
                "experimental"
            ],
            "defaultDefaultValue": "advanced",
            "scope": 5,
            "restricted": false
        },
        "diffEditor.hideUnchangedRegions.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Controls whether the diff editor shows unchanged regions.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.hideUnchangedRegions.revealLineCount": {
            "type": "integer",
            "default": 20,
            "markdownDescription": "Controls how many lines are used for unchanged regions.",
            "minimum": 1,
            "defaultDefaultValue": 20,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.hideUnchangedRegions.minimumLineCount": {
            "type": "integer",
            "default": 3,
            "markdownDescription": "Controls how many lines are used as a minimum for unchanged regions.",
            "minimum": 1,
            "defaultDefaultValue": 3,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.hideUnchangedRegions.contextLineCount": {
            "type": "integer",
            "default": 3,
            "markdownDescription": "Controls how many lines are used as context when comparing unchanged regions.",
            "minimum": 1,
            "defaultDefaultValue": 3,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.experimental.showMoves": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Controls whether the diff editor should show detected code moves.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "diffEditor.experimental.showEmptyDecorations": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the diff editor shows empty decorations to see where characters got inserted or deleted.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.acceptSuggestionOnCommitCharacter": {
            "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.acceptSuggestionOnEnter": {
            "markdownEnumDescriptions": [
                "",
                "Only accept a suggestion with `Enter` when it makes a textual change.",
                ""
            ],
            "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
            "type": "string",
            "enum": [
                "on",
                "smart",
                "off"
            ],
            "default": "on",
            "defaultDefaultValue": "on",
            "scope": 5,
            "restricted": false
        },
        "editor.accessibilitySupport": {
            "type": "string",
            "enum": [
                "auto",
                "on",
                "off"
            ],
            "enumDescriptions": [
                "Use platform APIs to detect when a Screen Reader is attached",
                "Optimize for usage with a Screen Reader",
                "Assume a screen reader is not attached"
            ],
            "default": "auto",
            "tags": [
                "accessibility"
            ],
            "description": "Controls if the UI should run in a mode where it is optimized for screen readers.",
            "defaultDefaultValue": "auto",
            "scope": 5,
            "restricted": false
        },
        "editor.accessibilityPageSize": {
            "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
            "tags": [
                "accessibility"
            ],
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 1073741824,
            "defaultDefaultValue": 10,
            "scope": 5,
            "restricted": false
        },
        "editor.autoClosingBrackets": {
            "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose brackets.",
                "Autoclose brackets only when the cursor is to the left of whitespace.",
                ""
            ],
            "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
            "type": "string",
            "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
            ],
            "default": "languageDefined",
            "defaultDefaultValue": "languageDefined",
            "scope": 5,
            "restricted": false
        },
        "editor.autoClosingComments": {
            "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose comments.",
                "Autoclose comments only when the cursor is to the left of whitespace.",
                ""
            ],
            "description": "Controls whether the editor should automatically close comments after the user adds an opening comment.",
            "type": "string",
            "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
            ],
            "default": "languageDefined",
            "defaultDefaultValue": "languageDefined",
            "scope": 5,
            "restricted": false
        },
        "editor.screenReaderAnnounceInlineSuggestion": {
            "description": "Control whether inline suggestions are announced by a screen reader.",
            "tags": [
                "accessibility"
            ],
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.autoClosingDelete": {
            "enumDescriptions": [
                "",
                "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
                ""
            ],
            "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
            "type": "string",
            "enum": [
                "always",
                "auto",
                "never"
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 5,
            "restricted": false
        },
        "editor.autoClosingOvertype": {
            "enumDescriptions": [
                "",
                "Type over closing quotes or brackets only if they were automatically inserted.",
                ""
            ],
            "description": "Controls whether the editor should type over closing quotes or brackets.",
            "type": "string",
            "enum": [
                "always",
                "auto",
                "never"
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 5,
            "restricted": false
        },
        "editor.autoClosingQuotes": {
            "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose quotes.",
                "Autoclose quotes only when the cursor is to the left of whitespace.",
                ""
            ],
            "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
            "type": "string",
            "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
            ],
            "default": "languageDefined",
            "defaultDefaultValue": "languageDefined",
            "scope": 5,
            "restricted": false
        },
        "editor.autoIndent": {
            "enumDescriptions": [
                "The editor will not insert indentation automatically.",
                "The editor will keep the current line's indentation.",
                "The editor will keep the current line's indentation and honor language defined brackets.",
                "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
                "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
            ],
            "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
            "type": "string",
            "enum": [
                "none",
                "keep",
                "brackets",
                "advanced",
                "full"
            ],
            "default": "full",
            "defaultDefaultValue": "full",
            "scope": 5,
            "restricted": false
        },
        "editor.autoSurround": {
            "enumDescriptions": [
                "Use language configurations to determine when to automatically surround selections.",
                "Surround with quotes but not brackets.",
                "Surround with brackets but not quotes.",
                ""
            ],
            "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
            "type": "string",
            "enum": [
                "languageDefined",
                "quotes",
                "brackets",
                "never"
            ],
            "default": "languageDefined",
            "defaultDefaultValue": "languageDefined",
            "scope": 5,
            "restricted": false
        },
        "editor.bracketPairColorization.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.bracketPairColorization.independentColorPoolPerBracketType": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether each bracket type has its own independent color pool.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.guides.bracketPairs": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                "active",
                false
            ],
            "enumDescriptions": [
                "Enables bracket pair guides.",
                "Enables bracket pair guides only for the active bracket pair.",
                "Disables bracket pair guides."
            ],
            "default": false,
            "description": "Controls whether bracket pair guides are enabled or not.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.guides.bracketPairsHorizontal": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                "active",
                false
            ],
            "enumDescriptions": [
                "Enables horizontal guides as addition to vertical bracket pair guides.",
                "Enables horizontal guides only for the active bracket pair.",
                "Disables horizontal bracket pair guides."
            ],
            "default": "active",
            "description": "Controls whether horizontal bracket pair guides are enabled or not.",
            "defaultDefaultValue": "active",
            "scope": 5,
            "restricted": false
        },
        "editor.guides.highlightActiveBracketPair": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the editor should highlight the active bracket pair.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.guides.indentation": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the editor should render indent guides.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.guides.highlightActiveIndentation": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                "always",
                false
            ],
            "enumDescriptions": [
                "Highlights the active indent guide.",
                "Highlights the active indent guide even if bracket guides are highlighted.",
                "Do not highlight the active indent guide."
            ],
            "default": true,
            "description": "Controls whether the editor should highlight the active indent guide.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.codeLens": {
            "description": "Controls whether the editor shows CodeLens.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.codeLensFontFamily": {
            "description": "Controls the font family for CodeLens.",
            "type": "string",
            "default": "",
            "defaultDefaultValue": "",
            "scope": 5,
            "restricted": false
        },
        "editor.codeLensFontSize": {
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "maximum": 100,
            "markdownDescription": "Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.colorDecorators": {
            "description": "Controls whether the editor should render the inline color decorators and color picker.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.colorDecoratorsLimit": {
            "markdownDescription": "Controls the max number of color decorators that can be rendered in an editor at once.",
            "type": "integer",
            "default": 500,
            "minimum": 1,
            "maximum": 1000000,
            "defaultDefaultValue": 500,
            "scope": 5,
            "restricted": false
        },
        "editor.columnSelection": {
            "description": "Enable that the selection with the mouse and keys is doing column selection.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.comments.insertSpace": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether a space character is inserted when commenting.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.comments.ignoreEmptyLines": {
            "type": "boolean",
            "default": true,
            "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.copyWithSyntaxHighlighting": {
            "description": "Controls whether syntax highlighting should be copied into the clipboard.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.cursorBlinking": {
            "description": "Control the cursor animation style.",
            "type": "string",
            "enum": [
                "blink",
                "smooth",
                "phase",
                "expand",
                "solid"
            ],
            "default": "blink",
            "defaultDefaultValue": "blink",
            "scope": 5,
            "restricted": false
        },
        "editor.cursorSmoothCaretAnimation": {
            "enumDescriptions": [
                "Smooth caret animation is disabled.",
                "Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
                "Smooth caret animation is always enabled."
            ],
            "description": "Controls whether the smooth caret animation should be enabled.",
            "type": "string",
            "enum": [
                "off",
                "explicit",
                "on"
            ],
            "default": "off",
            "defaultDefaultValue": "off",
            "scope": 5,
            "restricted": false
        },
        "editor.cursorStyle": {
            "description": "Controls the cursor style.",
            "type": "string",
            "enum": [
                "line",
                "block",
                "underline",
                "line-thin",
                "block-outline",
                "underline-thin"
            ],
            "default": "line",
            "defaultDefaultValue": "line",
            "scope": 5,
            "restricted": false
        },
        "editor.cursorSurroundingLines": {
            "description": "Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "maximum": 1073741824,
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.cursorSurroundingLinesStyle": {
            "enumDescriptions": [
                "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
                "`cursorSurroundingLines` is enforced always."
            ],
            "markdownDescription": "Controls when `#cursorSurroundingLines#` should be enforced.",
            "type": "string",
            "enum": [
                "default",
                "all"
            ],
            "default": "default",
            "defaultDefaultValue": "default",
            "scope": 5,
            "restricted": false
        },
        "editor.cursorWidth": {
            "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "maximum": 1073741824,
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.dragAndDrop": {
            "description": "Controls whether the editor should allow moving selections via drag and drop.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.dropIntoEditor.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether you can drag and drop a file into a text editor by holding down `shift` (instead of opening the file in an editor).",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.dropIntoEditor.showDropSelector": {
            "type": "string",
            "markdownDescription": "Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.",
            "enum": [
                "afterDrop",
                "never"
            ],
            "enumDescriptions": [
                "Show the drop selector widget after a file is dropped into the editor.",
                "Never show the drop selector widget. Instead the default drop provider is always used."
            ],
            "default": "afterDrop",
            "defaultDefaultValue": "afterDrop",
            "scope": 5,
            "restricted": false
        },
        "editor.emptySelectionClipboard": {
            "description": "Controls whether copying without a selection copies the current line.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.experimentalWhitespaceRendering": {
            "enumDescriptions": [
                "Use a new rendering method with svgs.",
                "Use a new rendering method with font characters.",
                "Use the stable rendering method."
            ],
            "description": "Controls whether whitespace is rendered with a new, experimental method.",
            "type": "string",
            "enum": [
                "svg",
                "font",
                "off"
            ],
            "default": "svg",
            "defaultDefaultValue": "svg",
            "scope": 5,
            "restricted": false
        },
        "editor.fastScrollSensitivity": {
            "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
            "type": "number",
            "default": 5,
            "defaultDefaultValue": 5,
            "scope": 5,
            "restricted": false
        },
        "editor.find.cursorMoveOnType": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the cursor should jump to find matches while typing.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.find.seedSearchStringFromSelection": {
            "type": "string",
            "enum": [
                "never",
                "always",
                "selection"
            ],
            "default": "always",
            "enumDescriptions": [
                "Never seed search string from the editor selection.",
                "Always seed search string from the editor selection, including word at cursor position.",
                "Only seed search string from the editor selection."
            ],
            "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
            "defaultDefaultValue": "always",
            "scope": 5,
            "restricted": false
        },
        "editor.find.autoFindInSelection": {
            "type": "string",
            "enum": [
                "never",
                "always",
                "multiline"
            ],
            "default": "never",
            "enumDescriptions": [
                "Never turn on Find in Selection automatically (default).",
                "Always turn on Find in Selection automatically.",
                "Turn on Find in Selection automatically when multiple lines of content are selected."
            ],
            "description": "Controls the condition for turning on Find in Selection automatically.",
            "defaultDefaultValue": "never",
            "scope": 5,
            "restricted": false
        },
        "editor.find.globalFindClipboard": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
            "included": true,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.find.addExtraSpaceOnTop": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.find.loop": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.folding": {
            "description": "Controls whether the editor has code folding enabled.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.foldingStrategy": {
            "enumDescriptions": [
                "Use a language-specific folding strategy if available, else the indentation-based one.",
                "Use the indentation-based folding strategy."
            ],
            "description": "Controls the strategy for computing folding ranges.",
            "type": "string",
            "enum": [
                "auto",
                "indentation"
            ],
            "default": "auto",
            "defaultDefaultValue": "auto",
            "scope": 5,
            "restricted": false
        },
        "editor.foldingHighlight": {
            "description": "Controls whether the editor should highlight folded ranges.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.foldingImportsByDefault": {
            "description": "Controls whether the editor automatically collapses import ranges.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.foldingMaximumRegions": {
            "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
            "type": "integer",
            "default": 5000,
            "minimum": 10,
            "maximum": 65000,
            "defaultDefaultValue": 5000,
            "scope": 5,
            "restricted": false
        },
        "editor.unfoldOnClickAfterEndOfLine": {
            "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.fontFamily": {
            "description": "Controls the font family.",
            "type": "string",
            "default": "Menlo, Monaco, 'Courier New', monospace",
            "defaultDefaultValue": "Menlo, Monaco, 'Courier New', monospace",
            "scope": 5,
            "restricted": false
        },
        "editor.fontLigatures": {
            "anyOf": [
                {
                    "type": "boolean",
                    "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
                },
                {
                    "type": "string",
                    "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
                }
            ],
            "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.fontSize": {
            "type": "number",
            "minimum": 6,
            "maximum": 100,
            "default": 12,
            "description": "Controls the font size in pixels.",
            "defaultDefaultValue": 12,
            "scope": 5,
            "restricted": false
        },
        "editor.fontWeight": {
            "anyOf": [
                {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 1000,
                    "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                },
                {
                    "type": "string",
                    "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                },
                {
                    "enum": [
                        "normal",
                        "bold",
                        "100",
                        "200",
                        "300",
                        "400",
                        "500",
                        "600",
                        "700",
                        "800",
                        "900"
                    ]
                }
            ],
            "default": "normal",
            "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
            "defaultDefaultValue": "normal",
            "scope": 5,
            "restricted": false
        },
        "editor.fontVariations": {
            "anyOf": [
                {
                    "type": "boolean",
                    "description": "Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property."
                },
                {
                    "type": "string",
                    "description": "Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings."
                }
            ],
            "description": "Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.formatOnPaste": {
            "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.formatOnType": {
            "description": "Controls whether the editor should automatically format the line after typing.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.glyphMargin": {
            "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.multiple": {
            "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
            "default": null,
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.multipleDefinitions": {
            "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
            "type": "string",
            "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
            ],
            "default": "peek",
            "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
            ],
            "defaultDefaultValue": "peek",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.multipleTypeDefinitions": {
            "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
            "type": "string",
            "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
            ],
            "default": "peek",
            "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
            ],
            "defaultDefaultValue": "peek",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.multipleDeclarations": {
            "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
            "type": "string",
            "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
            ],
            "default": "peek",
            "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
            ],
            "defaultDefaultValue": "peek",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.multipleImplementations": {
            "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
            "type": "string",
            "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
            ],
            "default": "peek",
            "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
            ],
            "defaultDefaultValue": "peek",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.multipleReferences": {
            "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
            "type": "string",
            "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
            ],
            "default": "peek",
            "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
            ],
            "defaultDefaultValue": "peek",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.alternativeDefinitionCommand": {
            "type": "string",
            "default": "editor.action.goToReferences",
            "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
            ],
            "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
            "defaultDefaultValue": "editor.action.goToReferences",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.alternativeTypeDefinitionCommand": {
            "type": "string",
            "default": "editor.action.goToReferences",
            "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
            ],
            "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
            "defaultDefaultValue": "editor.action.goToReferences",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.alternativeDeclarationCommand": {
            "type": "string",
            "default": "editor.action.goToReferences",
            "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
            ],
            "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
            "defaultDefaultValue": "editor.action.goToReferences",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.alternativeImplementationCommand": {
            "type": "string",
            "default": "",
            "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
            ],
            "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
            "defaultDefaultValue": "",
            "scope": 5,
            "restricted": false
        },
        "editor.gotoLocation.alternativeReferenceCommand": {
            "type": "string",
            "default": "",
            "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
            ],
            "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
            "defaultDefaultValue": "",
            "scope": 5,
            "restricted": false
        },
        "editor.hideCursorInOverviewRuler": {
            "description": "Controls whether the cursor should be hidden in the overview ruler.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.hover.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the hover is shown.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.hover.delay": {
            "type": "number",
            "default": 300,
            "minimum": 0,
            "maximum": 10000,
            "description": "Controls the delay in milliseconds after which the hover is shown.",
            "defaultDefaultValue": 300,
            "scope": 5,
            "restricted": false
        },
        "editor.hover.sticky": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the hover should remain visible when mouse is moved over it.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.hover.hidingDelay": {
            "type": "integer",
            "minimum": 0,
            "default": 300,
            "description": "Controls the delay in milliseconds after thich the hover is hidden. Requires `editor.hover.sticky` to be enabled.",
            "defaultDefaultValue": 300,
            "scope": 5,
            "restricted": false
        },
        "editor.hover.above": {
            "type": "boolean",
            "default": true,
            "description": "Prefer showing hovers above the line, if there's space.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.inlineSuggest.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to automatically show inline suggestions in the editor.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.inlineSuggest.showToolbar": {
            "type": "string",
            "default": "onHover",
            "enum": [
                "always",
                "onHover"
            ],
            "enumDescriptions": [
                "Show the inline suggestion toolbar whenever an inline suggestion is shown.",
                "Show the inline suggestion toolbar when hovering over an inline suggestion."
            ],
            "description": "Controls when to show the inline suggestion toolbar.",
            "defaultDefaultValue": "onHover",
            "scope": 5,
            "restricted": false
        },
        "editor.inlineSuggest.suppressSuggestions": {
            "type": "boolean",
            "default": false,
            "description": "Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.letterSpacing": {
            "description": "Controls the letter spacing in pixels.",
            "type": "number",
            "default": 0,
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.lightbulb.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enables the Code Action lightbulb in the editor.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.lineHeight": {
            "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
            "type": "number",
            "default": 0,
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.lineNumbers": {
            "type": "string",
            "enum": [
                "off",
                "on",
                "relative",
                "interval"
            ],
            "enumDescriptions": [
                "Line numbers are not rendered.",
                "Line numbers are rendered as absolute number.",
                "Line numbers are rendered as distance in lines to cursor position.",
                "Line numbers are rendered every 10 lines."
            ],
            "default": "on",
            "description": "Controls the display of line numbers.",
            "defaultDefaultValue": "on",
            "scope": 5,
            "restricted": false
        },
        "editor.linkedEditing": {
            "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.links": {
            "description": "Controls whether the editor should detect links and make them clickable.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.matchBrackets": {
            "description": "Highlight matching brackets.",
            "type": "string",
            "enum": [
                "always",
                "near",
                "never"
            ],
            "default": "always",
            "defaultDefaultValue": "always",
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the minimap is shown.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.autohide": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether the minimap is hidden automatically.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.size": {
            "type": "string",
            "enum": [
                "proportional",
                "fill",
                "fit"
            ],
            "enumDescriptions": [
                "The minimap has the same size as the editor contents (and might scroll).",
                "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
                "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
            ],
            "default": "proportional",
            "description": "Controls the size of the minimap.",
            "defaultDefaultValue": "proportional",
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.side": {
            "type": "string",
            "enum": [
                "left",
                "right"
            ],
            "default": "right",
            "description": "Controls the side where to render the minimap.",
            "defaultDefaultValue": "right",
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.showSlider": {
            "type": "string",
            "enum": [
                "always",
                "mouseover"
            ],
            "default": "mouseover",
            "description": "Controls when the minimap slider is shown.",
            "defaultDefaultValue": "mouseover",
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.scale": {
            "type": "number",
            "default": 1,
            "minimum": 1,
            "maximum": 3,
            "enum": [
                1,
                2,
                3
            ],
            "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
            "defaultDefaultValue": 1,
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.renderCharacters": {
            "type": "boolean",
            "default": true,
            "description": "Render the actual characters on a line as opposed to color blocks.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.minimap.maxColumn": {
            "type": "number",
            "default": 120,
            "description": "Limit the width of the minimap to render at most a certain number of columns.",
            "defaultDefaultValue": 120,
            "scope": 5,
            "restricted": false
        },
        "editor.mouseWheelScrollSensitivity": {
            "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
            "type": "number",
            "default": 1,
            "defaultDefaultValue": 1,
            "scope": 5,
            "restricted": false
        },
        "editor.mouseWheelZoom": {
            "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.multiCursorMergeOverlapping": {
            "description": "Merge multiple cursors when they are overlapping.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.multiCursorModifier": {
            "markdownEnumDescriptions": [
                "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
                "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
            ],
            "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
            "type": "string",
            "enum": [
                "ctrlCmd",
                "alt"
            ],
            "default": "alt",
            "defaultDefaultValue": "alt",
            "scope": 5,
            "restricted": false
        },
        "editor.multiCursorPaste": {
            "markdownEnumDescriptions": [
                "Each cursor pastes a single line of the text.",
                "Each cursor pastes the full text."
            ],
            "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
            "type": "string",
            "enum": [
                "spread",
                "full"
            ],
            "default": "spread",
            "defaultDefaultValue": "spread",
            "scope": 5,
            "restricted": false
        },
        "editor.multiCursorLimit": {
            "markdownDescription": "Controls the max number of cursors that can be in an active editor at once.",
            "type": "integer",
            "default": 10000,
            "minimum": 1,
            "maximum": 100000,
            "defaultDefaultValue": 10000,
            "scope": 5,
            "restricted": false
        },
        "editor.occurrencesHighlight": {
            "description": "Controls whether the editor should highlight semantic symbol occurrences.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.overviewRulerBorder": {
            "description": "Controls whether a border should be drawn around the overview ruler.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.padding.top": {
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 1000,
            "description": "Controls the amount of space between the top edge of the editor and the first line.",
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.padding.bottom": {
            "type": "number",
            "default": 0,
            "minimum": 0,
            "maximum": 1000,
            "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.pasteAs.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether you can paste content in different ways.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.pasteAs.showPasteSelector": {
            "type": "string",
            "markdownDescription": "Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.",
            "enum": [
                "afterPaste",
                "never"
            ],
            "enumDescriptions": [
                "Show the paste selector widget after content is pasted into the editor.",
                "Never show the paste selector widget. Instead the default pasting behavior is always used."
            ],
            "default": "afterPaste",
            "defaultDefaultValue": "afterPaste",
            "scope": 5,
            "restricted": false
        },
        "editor.parameterHints.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.parameterHints.cycle": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.peekWidgetDefaultFocus": {
            "enumDescriptions": [
                "Focus the tree when opening peek",
                "Focus the editor when opening peek"
            ],
            "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
            "type": "string",
            "enum": [
                "tree",
                "editor"
            ],
            "default": "tree",
            "defaultDefaultValue": "tree",
            "scope": 5,
            "restricted": false
        },
        "editor.definitionLinkOpensInPeek": {
            "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.quickSuggestions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "strings": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "on",
                                "inline",
                                "off"
                            ],
                            "enumDescriptions": [
                                "Quick suggestions show inside the suggest widget",
                                "Quick suggestions show as ghost text",
                                "Quick suggestions are disabled"
                            ]
                        }
                    ],
                    "default": "off",
                    "description": "Enable quick suggestions inside strings."
                },
                "comments": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "on",
                                "inline",
                                "off"
                            ],
                            "enumDescriptions": [
                                "Quick suggestions show inside the suggest widget",
                                "Quick suggestions show as ghost text",
                                "Quick suggestions are disabled"
                            ]
                        }
                    ],
                    "default": "off",
                    "description": "Enable quick suggestions inside comments."
                },
                "other": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "on",
                                "inline",
                                "off"
                            ],
                            "enumDescriptions": [
                                "Quick suggestions show inside the suggest widget",
                                "Quick suggestions show as ghost text",
                                "Quick suggestions are disabled"
                            ]
                        }
                    ],
                    "default": "on",
                    "description": "Enable quick suggestions outside of strings and comments."
                }
            },
            "default": {
                "other": "on",
                "comments": "off",
                "strings": "off"
            },
            "markdownDescription": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
            "defaultDefaultValue": {
                "other": "on",
                "comments": "off",
                "strings": "off"
            },
            "scope": 5,
            "restricted": false
        },
        "editor.quickSuggestionsDelay": {
            "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
            "type": "integer",
            "default": 10,
            "minimum": 0,
            "maximum": 1073741824,
            "defaultDefaultValue": 10,
            "scope": 5,
            "restricted": false
        },
        "editor.renameOnType": {
            "description": "Controls whether the editor auto renames on type.",
            "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false,
            "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
        },
        "editor.renderControlCharacters": {
            "description": "Controls whether the editor should render control characters.",
            "restricted": true,
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5
        },
        "editor.renderFinalNewline": {
            "description": "Render last line number when the file ends with a newline.",
            "type": "string",
            "enum": [
                "off",
                "on",
                "dimmed"
            ],
            "default": "on",
            "defaultDefaultValue": "on",
            "scope": 5,
            "restricted": false
        },
        "editor.renderLineHighlight": {
            "enumDescriptions": [
                "",
                "",
                "",
                "Highlights both the gutter and the current line."
            ],
            "description": "Controls how the editor should render the current line highlight.",
            "type": "string",
            "enum": [
                "none",
                "gutter",
                "line",
                "all"
            ],
            "default": "line",
            "defaultDefaultValue": "line",
            "scope": 5,
            "restricted": false
        },
        "editor.renderLineHighlightOnlyWhenFocus": {
            "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.renderWhitespace": {
            "enumDescriptions": [
                "",
                "Render whitespace characters except for single spaces between words.",
                "Render whitespace characters only on selected text.",
                "Render only trailing whitespace characters.",
                ""
            ],
            "description": "Controls how the editor should render whitespace characters.",
            "type": "string",
            "enum": [
                "none",
                "boundary",
                "selection",
                "trailing",
                "all"
            ],
            "default": "selection",
            "defaultDefaultValue": "selection",
            "scope": 5,
            "restricted": false
        },
        "editor.roundedSelection": {
            "description": "Controls whether selections should have rounded corners.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.rulers": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "number",
                        "description": "Number of monospace characters at which this editor ruler will render."
                    },
                    {
                        "type": [
                            "object"
                        ],
                        "properties": {
                            "column": {
                                "type": "number",
                                "description": "Number of monospace characters at which this editor ruler will render."
                            },
                            "color": {
                                "type": "string",
                                "description": "Color of this editor ruler.",
                                "format": "color-hex"
                            }
                        }
                    }
                ]
            },
            "default": [],
            "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
            "defaultDefaultValue": [],
            "scope": 5,
            "restricted": false
        },
        "editor.scrollbar.vertical": {
            "type": "string",
            "enum": [
                "auto",
                "visible",
                "hidden"
            ],
            "enumDescriptions": [
                "The vertical scrollbar will be visible only when necessary.",
                "The vertical scrollbar will always be visible.",
                "The vertical scrollbar will always be hidden."
            ],
            "default": "auto",
            "description": "Controls the visibility of the vertical scrollbar.",
            "defaultDefaultValue": "auto",
            "scope": 5,
            "restricted": false
        },
        "editor.scrollbar.horizontal": {
            "type": "string",
            "enum": [
                "auto",
                "visible",
                "hidden"
            ],
            "enumDescriptions": [
                "The horizontal scrollbar will be visible only when necessary.",
                "The horizontal scrollbar will always be visible.",
                "The horizontal scrollbar will always be hidden."
            ],
            "default": "auto",
            "description": "Controls the visibility of the horizontal scrollbar.",
            "defaultDefaultValue": "auto",
            "scope": 5,
            "restricted": false
        },
        "editor.scrollbar.verticalScrollbarSize": {
            "type": "number",
            "default": 14,
            "description": "The width of the vertical scrollbar.",
            "defaultDefaultValue": 14,
            "scope": 5,
            "restricted": false
        },
        "editor.scrollbar.horizontalScrollbarSize": {
            "type": "number",
            "default": 12,
            "description": "The height of the horizontal scrollbar.",
            "defaultDefaultValue": 12,
            "scope": 5,
            "restricted": false
        },
        "editor.scrollbar.scrollByPage": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether clicks scroll by page or jump to click position.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.scrollBeyondLastColumn": {
            "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
            "type": "integer",
            "default": 4,
            "minimum": 0,
            "maximum": 1073741824,
            "defaultDefaultValue": 4,
            "scope": 5,
            "restricted": false
        },
        "editor.scrollBeyondLastLine": {
            "description": "Controls whether the editor will scroll beyond the last line.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.scrollPredominantAxis": {
            "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.selectionHighlight": {
            "description": "Controls whether the editor should highlight matches similar to the selection.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.showFoldingControls": {
            "enumDescriptions": [
                "Always show the folding controls.",
                "Never show the folding controls and reduce the gutter size.",
                "Only show the folding controls when the mouse is over the gutter."
            ],
            "description": "Controls when the folding controls on the gutter are shown.",
            "type": "string",
            "enum": [
                "always",
                "never",
                "mouseover"
            ],
            "default": "mouseover",
            "defaultDefaultValue": "mouseover",
            "scope": 5,
            "restricted": false
        },
        "editor.showUnused": {
            "description": "Controls fading out of unused code.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.snippetSuggestions": {
            "enumDescriptions": [
                "Show snippet suggestions on top of other suggestions.",
                "Show snippet suggestions below other suggestions.",
                "Show snippets suggestions with other suggestions.",
                "Do not show snippet suggestions."
            ],
            "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
            "type": "string",
            "enum": [
                "top",
                "bottom",
                "inline",
                "none"
            ],
            "default": "inline",
            "defaultDefaultValue": "inline",
            "scope": 5,
            "restricted": false
        },
        "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
            "description": "Whether leading and trailing whitespace should always be selected.",
            "default": true,
            "type": "boolean",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.smartSelect.selectSubwords": {
            "description": "Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.",
            "default": true,
            "type": "boolean",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.smoothScrolling": {
            "description": "Controls whether the editor will scroll using an animation.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.stickyScroll.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Shows the nested current scopes during the scroll at the top of the editor.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.stickyScroll.maxLineCount": {
            "type": "number",
            "default": 5,
            "minimum": 1,
            "maximum": 10,
            "description": "Defines the maximum number of sticky lines to show.",
            "defaultDefaultValue": 5,
            "scope": 5,
            "restricted": false
        },
        "editor.stickyScroll.defaultModel": {
            "type": "string",
            "enum": [
                "outlineModel",
                "foldingProviderModel",
                "indentationModel"
            ],
            "default": "outlineModel",
            "description": "Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.",
            "defaultDefaultValue": "outlineModel",
            "scope": 5,
            "restricted": false
        },
        "editor.stickyScroll.scrollWithEditor": {
            "type": "boolean",
            "default": true,
            "description": "Enable scrolling of the sticky scroll widget with the editor's horizontal scrollbar.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.stickyTabStops": {
            "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.insertMode": {
            "type": "string",
            "enum": [
                "insert",
                "replace"
            ],
            "enumDescriptions": [
                "Insert suggestion without overwriting text right of the cursor.",
                "Insert suggestion and overwrite text right of the cursor."
            ],
            "default": "insert",
            "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
            "defaultDefaultValue": "insert",
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.filterGraceful": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.localityBonus": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether sorting favors words that appear close to the cursor.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.shareSuggestSelections": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.selectionMode": {
            "type": "string",
            "enum": [
                "always",
                "never",
                "whenTriggerCharacter",
                "whenQuickSuggestion"
            ],
            "enumDescriptions": [
                "Always select a suggestion when automatically triggering IntelliSense.",
                "Never select a suggestion when automatically triggering IntelliSense.",
                "Select a suggestion only when triggering IntelliSense from a trigger character.",
                "Select a suggestion only when triggering IntelliSense as you type."
            ],
            "default": "always",
            "markdownDescription": "Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
            "defaultDefaultValue": "always",
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.snippetsPreventQuickSuggestions": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether an active snippet prevents quick suggestions.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showIcons": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to show or hide icons in suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showStatusBar": {
            "type": "boolean",
            "default": false,
            "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.preview": {
            "type": "boolean",
            "default": false,
            "description": "Controls whether to preview the suggestion outcome in the editor.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showInlineDetails": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether suggest details show inline with the label or only in the details widget.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.maxVisibleSuggestions": {
            "type": "number",
            "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
            "default": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.filteredTypes": {
            "type": "object",
            "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
            "default": {},
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showMethods": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showFunctions": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showConstructors": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showDeprecated": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.matchOnWordStartOnly": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showFields": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showVariables": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showClasses": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showStructs": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showInterfaces": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showModules": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showProperties": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showEvents": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showOperators": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showUnits": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showValues": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showConstants": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showEnums": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showEnumMembers": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showKeywords": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showWords": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showColors": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showFiles": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showReferences": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showCustomcolors": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showFolders": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showTypeParameters": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showSnippets": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showUsers": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggest.showIssues": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggestFontSize": {
            "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "maximum": 1000,
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.suggestLineHeight": {
            "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "maximum": 1000,
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.suggestOnTriggerCharacters": {
            "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.suggestSelection": {
            "markdownEnumDescriptions": [
                "Always select the first suggestion.",
                "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
                "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
            ],
            "description": "Controls how suggestions are pre-selected when showing the suggest list.",
            "type": "string",
            "enum": [
                "first",
                "recentlyUsed",
                "recentlyUsedByPrefix"
            ],
            "default": "first",
            "defaultDefaultValue": "first",
            "scope": 5,
            "restricted": false
        },
        "editor.tabCompletion": {
            "enumDescriptions": [
                "Tab complete will insert the best matching suggestion when pressing tab.",
                "Disable tab completions.",
                "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
            ],
            "description": "Enables tab completions.",
            "type": "string",
            "enum": [
                "on",
                "off",
                "onlySnippets"
            ],
            "default": "off",
            "defaultDefaultValue": "off",
            "scope": 5,
            "restricted": false
        },
        "editor.unicodeHighlight.nonBasicASCII": {
            "restricted": true,
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "inUntrustedWorkspace"
            ],
            "default": "inUntrustedWorkspace",
            "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
            "defaultDefaultValue": "inUntrustedWorkspace",
            "scope": 5
        },
        "editor.unicodeHighlight.invisibleCharacters": {
            "restricted": true,
            "type": "boolean",
            "default": true,
            "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
            "defaultDefaultValue": true,
            "scope": 5
        },
        "editor.unicodeHighlight.ambiguousCharacters": {
            "restricted": true,
            "type": "boolean",
            "default": true,
            "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
            "defaultDefaultValue": true,
            "scope": 5
        },
        "editor.unicodeHighlight.includeComments": {
            "restricted": true,
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "inUntrustedWorkspace"
            ],
            "default": "inUntrustedWorkspace",
            "description": "Controls whether characters in comments should also be subject to Unicode highlighting.",
            "defaultDefaultValue": "inUntrustedWorkspace",
            "scope": 5
        },
        "editor.unicodeHighlight.includeStrings": {
            "restricted": true,
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "inUntrustedWorkspace"
            ],
            "default": true,
            "description": "Controls whether characters in strings should also be subject to Unicode highlighting.",
            "defaultDefaultValue": true,
            "scope": 5
        },
        "editor.unicodeHighlight.allowedCharacters": {
            "restricted": true,
            "type": "object",
            "default": {},
            "description": "Defines allowed characters that are not being highlighted.",
            "additionalProperties": {
                "type": "boolean"
            },
            "defaultDefaultValue": {},
            "scope": 5
        },
        "editor.unicodeHighlight.allowedLocales": {
            "restricted": true,
            "type": "object",
            "additionalProperties": {
                "type": "boolean"
            },
            "default": {
                "_os": true,
                "_vscode": true
            },
            "description": "Unicode characters that are common in allowed locales are not being highlighted.",
            "defaultDefaultValue": {
                "_os": true,
                "_vscode": true
            },
            "scope": 5
        },
        "editor.unusualLineTerminators": {
            "enumDescriptions": [
                "Unusual line terminators are automatically removed.",
                "Unusual line terminators are ignored.",
                "Unusual line terminators prompt to be removed."
            ],
            "description": "Remove unusual line terminators that might cause problems.",
            "type": "string",
            "enum": [
                "auto",
                "off",
                "prompt"
            ],
            "default": "prompt",
            "defaultDefaultValue": "prompt",
            "scope": 5,
            "restricted": false
        },
        "editor.useTabStops": {
            "description": "Inserting and deleting whitespace follows tab stops.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.wordBreak": {
            "markdownEnumDescriptions": [
                "Use the default line break rule.",
                "Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal."
            ],
            "description": "Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
            "type": "string",
            "enum": [
                "normal",
                "keepAll"
            ],
            "default": "normal",
            "defaultDefaultValue": "normal",
            "scope": 5,
            "restricted": false
        },
        "editor.wordSeparators": {
            "description": "Characters that will be used as word separators when doing word related navigations or operations.",
            "type": "string",
            "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
            "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
            "scope": 5,
            "restricted": false
        },
        "editor.wordWrap": {
            "markdownEnumDescriptions": [
                "Lines will never wrap.",
                "Lines will wrap at the viewport width.",
                "Lines will wrap at `#editor.wordWrapColumn#`.",
                "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
            ],
            "description": "Controls how lines should wrap.",
            "type": "string",
            "enum": [
                "off",
                "on",
                "wordWrapColumn",
                "bounded"
            ],
            "default": "off",
            "defaultDefaultValue": "off",
            "scope": 5,
            "restricted": false
        },
        "editor.wordWrapColumn": {
            "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
            "type": "integer",
            "default": 80,
            "minimum": 1,
            "maximum": 1073741824,
            "defaultDefaultValue": 80,
            "scope": 5,
            "restricted": false
        },
        "editor.wrappingIndent": {
            "type": "string",
            "enum": [
                "none",
                "same",
                "indent",
                "deepIndent"
            ],
            "enumDescriptions": [
                "No indentation. Wrapped lines begin at column 1.",
                "Wrapped lines get the same indentation as the parent.",
                "Wrapped lines get +1 indentation toward the parent.",
                "Wrapped lines get +2 indentation toward the parent."
            ],
            "description": "Controls the indentation of wrapped lines.",
            "default": "same",
            "defaultDefaultValue": "same",
            "scope": 5,
            "restricted": false
        },
        "editor.wrappingStrategy": {
            "enumDescriptions": [
                "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
                "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
            ],
            "type": "string",
            "enum": [
                "simple",
                "advanced"
            ],
            "default": "simple",
            "description": "Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
            "defaultDefaultValue": "simple",
            "scope": 5,
            "restricted": false
        },
        "editor.showDeprecated": {
            "description": "Controls strikethrough deprecated variables.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "editor.inlayHints.enabled": {
            "type": "string",
            "default": "on",
            "description": "Enables the inlay hints in the editor.",
            "enum": [
                "on",
                "onUnlessPressed",
                "offUnlessPressed",
                "off"
            ],
            "markdownEnumDescriptions": [
                "Inlay hints are enabled",
                "Inlay hints are showing by default and hide when holding Ctrl+Option",
                "Inlay hints are hidden by default and show when holding Ctrl+Option",
                "Inlay hints are disabled"
            ],
            "defaultDefaultValue": "on",
            "scope": 5,
            "restricted": false
        },
        "editor.inlayHints.fontSize": {
            "type": "number",
            "default": 0,
            "markdownDescription": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
            "defaultDefaultValue": 0,
            "scope": 5,
            "restricted": false
        },
        "editor.inlayHints.fontFamily": {
            "type": "string",
            "default": "",
            "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
            "defaultDefaultValue": "",
            "scope": 5,
            "restricted": false
        },
        "editor.inlayHints.padding": {
            "type": "boolean",
            "default": false,
            "description": "Enables the padding around the inlay hints in the editor.",
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.tabFocusMode": {
            "markdownDescription": "Controls whether the editor receives tabs or defers them to the workbench for navigation.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.defaultColorDecorators": {
            "markdownDescription": "Controls whether inline color decorations should be shown using the default document color provider",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.colorDecoratorsActivatedOn": {
            "enumDescriptions": [
                "Make the color picker appear both on click and hover of the color decorator",
                "Make the color picker appear on hover of the color decorator",
                "Make the color picker appear on click of the color decorator"
            ],
            "description": "Controls the condition to make a color picker appear from a color decorator",
            "type": "string",
            "enum": [
                "clickAndHover",
                "hover",
                "click"
            ],
            "default": "clickAndHover",
            "defaultDefaultValue": "clickAndHover",
            "scope": 5,
            "restricted": false
        },
        "editor.inlineCompletionsAccessibilityVerbose": {
            "description": "Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.",
            "type": "boolean",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 5,
            "restricted": false
        },
        "editor.rename.enablePreview": {
            "scope": 5,
            "description": "Enable/disable the ability to preview changes before renaming",
            "default": true,
            "type": "boolean",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "editor.codeActionWidget.showHeaders": {
            "type": "boolean",
            "scope": 5,
            "description": "Enable/disable showing group headers in the Code Action menu.",
            "default": true,
            "defaultDefaultValue": true,
            "restricted": false
        },
        "editor.codeActionWidget.includeNearbyQuickfixes": {
            "type": "boolean",
            "scope": 5,
            "description": "Enable/disable showing nearest quickfix within a line when not currently on a diagnostic.",
            "default": false,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "editor.experimental.dropIntoEditor.defaultProvider": {
            "type": "object",
            "scope": 5,
            "description": "Configures the default drop provider to use for content of a given mime type.",
            "default": {},
            "additionalProperties": {
                "type": "string"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "breadcrumbs.symbolSortOrder": {
            "description": "Controls how symbols are sorted in the breadcrumbs outline view.",
            "type": "string",
            "default": "position",
            "scope": 5,
            "enum": [
                "position",
                "name",
                "type"
            ],
            "enumDescriptions": [
                "Show symbol outline in file position order.",
                "Show symbol outline in alphabetical order.",
                "Show symbol outline in symbol type order."
            ],
            "defaultDefaultValue": "position",
            "restricted": false
        },
        "breadcrumbs.showFiles": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `file`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showModules": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `module`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showNamespaces": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `namespace`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showPackages": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `package`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showClasses": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `class`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showMethods": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `method`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showProperties": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `property`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showFields": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `field`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showConstructors": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `constructor`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showEnums": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `enum`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showInterfaces": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `interface`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showFunctions": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `function`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showVariables": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `variable`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showConstants": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `constant`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showStrings": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `string`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showNumbers": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `number`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showBooleans": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `boolean`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showArrays": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `array`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showObjects": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `object`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showKeys": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `key`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showNull": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `null`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showEnumMembers": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `enumMember`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showStructs": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `struct`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showEvents": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `event`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showOperators": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `operator`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "breadcrumbs.showTypeParameters": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled breadcrumbs show `typeParameter`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "editor.codeActionsOnSave": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "source.fixAll": {
                            "type": [
                                "string",
                                "boolean"
                            ],
                            "enum": [
                                "always",
                                "explicit",
                                "never",
                                true,
                                false
                            ],
                            "enumDescriptions": [
                                "Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.",
                                "Triggers Code Actions only when explicitly saved",
                                "Never triggers Code Actions on save",
                                "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
                                "Never triggers Code Actions on save. This value will be deprecated in favor of \"never\"."
                            ],
                            "default": true,
                            "description": "Controls whether auto fix action should be run on file save."
                        }
                    },
                    "additionalProperties": {
                        "type": [
                            "string",
                            "boolean"
                        ]
                    }
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ],
            "markdownDescription": "Run CodeActions for the editor on save. CodeActions must be specified and the editor must not be shutting down. Example: `\"source.organizeImports\": \"explicit\" `",
            "type": [
                "object",
                "array"
            ],
            "additionalProperties": {
                "type": [
                    "string",
                    "boolean"
                ],
                "enum": [
                    "always",
                    "explicit",
                    "never",
                    true,
                    false
                ]
            },
            "default": {},
            "scope": 5,
            "defaultDefaultValue": {},
            "restricted": false,
            "properties": {
                "source.fixAll": {
                    "type": [
                        "string",
                        "boolean"
                    ],
                    "enum": [
                        "always",
                        "explicit",
                        "never",
                        true,
                        false
                    ],
                    "enumDescriptions": [
                        "Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.",
                        "Triggers Code Actions only when explicitly saved",
                        "Never triggers Code Actions on save",
                        "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
                        "Never triggers Code Actions on save. This value will be deprecated in favor of \"never\"."
                    ],
                    "default": true,
                    "description": "Controls whether auto fix action should be run on file save."
                },
                "source.organizeImports": {
                    "type": [
                        "string",
                        "boolean"
                    ],
                    "enum": [
                        "always",
                        "explicit",
                        "never",
                        true,
                        false
                    ],
                    "enumDescriptions": [
                        "Triggers Code Actions on explicit saves and auto saves triggered by window or focus changes.",
                        "Triggers Code Actions only when explicitly saved",
                        "Never triggers Code Actions on save",
                        "Triggers Code Actions only when explicitly saved. This value will be deprecated in favor of \"explicit\".",
                        "Never triggers Code Actions on save. This value will be deprecated in favor of \"never\"."
                    ],
                    "default": true,
                    "description": "Controls whether 'Organize Imports' actions should be run on file save."
                }
            }
        },
        "editor.defaultFoldingRangeProvider": {
            "description": "Defines a default folding range provider that takes precedence over all other folding range providers. Must be the identifier of an extension contributing a folding range provider.",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "enum": [
                null,
                "asciidoctor.asciidoctor-vscode",
                "astro-build.astro-vscode",
                "webfreak.code-d",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "ms-vscode.cpptools",
                "vscode.css-language-features",
                "tamasfe.even-better-toml",
                "golang.go",
                "karunamurti.haml",
                "vscode.html-language-features",
                "vscode.json-language-features",
                "sclu1034.justfile",
                "justusadam.language-haskell",
                "James-Yu.latex-workshop",
                "sumneko.lua",
                "vscode.markdown-language-features",
                "scalameta.metals",
                "jnoortheen.nix-ide",
                "vscode.php-language-features",
                "ms-python.python",
                "vscode.references-view",
                "rust-lang.rust-analyzer",
                "vscode.search-result",
                "svelte.svelte-vscode",
                "vknabel.swift-coverage",
                "sswg.swift-lang",
                "vscode.typescript-language-features",
                "denoland.vscode-deno",
                "dbaeumer.vscode-eslint",
                "unifiedjs.vscode-mdx",
                "ms-python.vscode-pylance",
                "redhat.vscode-yaml",
                "kamadorueda.alejandra",
                "aaron-bond.better-comments",
                "Catppuccin.catppuccin-vsc",
                "naumovs.color-highlight",
                "vscode.configuration-editing",
                "vscode.debug-auto-launch",
                "vscode.debug-server-ready",
                "mkhl.direnv",
                "vscode.emmet",
                "usernamehw.errorlens",
                "vscode.extension-editing",
                "vscode.git",
                "vscode.git-base",
                "vscode.github",
                "vscode.github-authentication",
                "GitLab.gitlab-workflow",
                "eamodio.gitlens",
                "vscode.grunt",
                "vscode.gulp",
                "vscode.ipynb",
                "vscode.jake",
                "ms-vscode.js-debug",
                "ms-vscode.js-debug-companion",
                "lunuan.kubernetes-templates",
                "vscode.markdown-math",
                "vscode.media-preview",
                "vscode.merge-conflict",
                "vscode.microsoft-authentication",
                "vscode.npm",
                "esbenp.prettier-vscode",
                "wraith13.save-vscode-schemas",
                "vscode.simple-browser",
                "ms-vscode.test-adapter-converter",
                "Gruntfuggly.todo-tree",
                "vscode.tunnel-forwarding",
                "nvarner.typst-lsp",
                "vscodevim.vim",
                "ms-vscode.vscode-js-profile-table",
                "ms-kubernetes-tools.vscode-kubernetes-tools",
                "vadimcn.vscode-lldb",
                "GitHub.vscode-pull-request-github",
                "bradlc.vscode-tailwindcss",
                "hbenl.vscode-test-explorer",
                "LeonardSSH.vscord",
                "ms-vsliveshare.vsliveshare"
            ],
            "enumItemLabels": [
                "All",
                "AsciiDoc",
                "Astro",
                "D Programming Language (code-d)",
                "GitHub Copilot",
                "GitHub Copilot Chat",
                "C/C++",
                "CSS Language Features",
                "Even Better TOML",
                "Go",
                "Better Haml",
                "HTML Language Features",
                "JSON Language Features",
                "justfile",
                "Haskell Syntax Highlighting",
                "LaTeX Workshop",
                "Lua",
                "Markdown Language Features",
                "Scala (Metals)",
                "Nix IDE",
                "PHP Language Features",
                "Python",
                "Reference Search View",
                "rust-analyzer",
                "Search Result",
                "Svelte for VS Code",
                "Swift Coverage",
                "Swift",
                "TypeScript and JavaScript Language Features",
                "Deno",
                "ESLint",
                "MDX",
                "Pylance",
                "YAML",
                "Alejandra 💅",
                "Better Comments",
                "Catppuccin for VSCode",
                "Color Highlight",
                "Configuration Editing",
                "Node Debug Auto-attach",
                "Server Ready Action",
                "direnv",
                "Emmet",
                "Error Lens",
                "Extension Authoring",
                "Git",
                "Git Base",
                "GitHub",
                "GitHub Authentication",
                "GitLab Workflow",
                "GitLens — Git supercharged",
                "Grunt support for VS Code",
                "Gulp support for VSCode",
                ".ipynb Support",
                "Jake support for VS Code",
                "JavaScript Debugger",
                "JavaScript Debugger Companion Extension",
                "Kubernetes Templates",
                "Markdown Math",
                "Media Preview",
                "Merge Conflict",
                "Microsoft Account",
                "NPM support for VS Code",
                "Prettier - Code formatter",
                "save-vscode-schemas",
                "Simple Browser",
                "Test Adapter Converter",
                "Todo Tree",
                "Local Tunnel Port Forwarding",
                "Typst LSP",
                "Vim",
                "Table Visualizer for JavaScript Profiles",
                "Kubernetes",
                "CodeLLDB",
                "GitHub Pull Requests and Issues",
                "Tailwind CSS IntelliSense",
                "Test Explorer UI",
                "Discord Rich Presence",
                "Live Share"
            ],
            "markdownEnumDescriptions": [
                "All active folding range providers",
                "Provides rich language support for AsciiDoc.",
                "Language support for Astro",
                "auto-complete, snippets, linter and formatter for dlang",
                "Your AI pair programmer",
                "AI chat features powered by Copilot",
                "C/C++ IntelliSense, debugging, and code browsing.",
                "Provides rich language support for CSS, LESS and SCSS files.",
                "Fully-featured TOML support",
                "Rich Go language support for Visual Studio Code",
                "Better Haml syntax highlighting, auto close and suggestions",
                "Provides rich language support for HTML and Handlebar files",
                "Provides rich language support for JSON files.",
                "Provides syntax and recipe launcher for Just scripts.",
                "Syntax support for the Haskell programming language.",
                "Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.",
                "Lua Language Server coded by Lua",
                "Provides rich language support for Markdown.",
                "Scala language server with rich IDE features",
                "Nix language support with formatting and error report.",
                "Provides rich language support for PHP files.",
                "IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), code formatting, refactoring, unit tests, and more.",
                "Reference Search results as separate, stable view in the sidebar",
                "Rust language support for Visual Studio Code",
                "Provides syntax highlighting and language features for tabbed search results.",
                "Svelte language support for VS Code",
                "Display coverage reports next to your code for Swift Package Manager projects.",
                "Swift Language Support for Visual Studio Code.",
                "Provides rich language support for JavaScript and TypeScript.",
                "A language server client for Deno.",
                "Integrates ESLint JavaScript into VS Code.",
                "Language support for MDX",
                "A performant, feature-rich language server for Python in VS Code",
                "YAML Language Support by Red Hat, with built-in Kubernetes syntax support",
                "The Uncompromising Nix Code Formatter",
                "Improve your code commenting by annotating with alert, informational, TODOs, and more!",
                "🦌 Soothing pastel theme for VSCode",
                "Highlight web colors in your editor",
                "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
                "Helper for auto-attach feature when node-debug extensions are not active.",
                "Open URI in browser if server under debugging is ready.",
                "unclutter your .profile",
                "Emmet support for VS Code",
                "Improve highlighting of errors, warnings and other language diagnostics.",
                "Provides linting capabilities for authoring extensions.",
                "Git SCM Integration",
                "Git static contributions and pickers.",
                "GitHub features for VS Code",
                "GitHub Authentication Provider",
                "Official GitLab-maintained extension for Visual Studio Code.",
                "Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more",
                "Extension to add Grunt capabilities to VS Code.",
                "Extension to add Gulp capabilities to VSCode.",
                "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
                "Extension to add Jake capabilities to VS Code.",
                "An extension for debugging Node.js programs and Chrome.",
                "Companion extension to js-debug that provides capability for remote debugging",
                "Kubernetes Templates",
                "Adds math support to Markdown in notebooks.",
                "Provides VS Code's built-in previews for images, audio, and video",
                "Highlighting and commands for inline merge conflicts.",
                "Microsoft authentication provider",
                "Extension to add task support for npm scripts.",
                "Code formatter using prettier",
                "Save VS Code's schemas",
                "A very basic built-in webview for displaying web content.",
                "Converter extension from the Test Adapter UI to native VS Code testing",
                "Show TODO, FIXME, etc. comment tags in a tree view",
                "Allows forwarding local ports to be accessible over the internet.",
                "A language server for Typst",
                "Vim emulation for Visual Studio Code",
                "Text visualizer for profiles taken from the JavaScript debugger",
                "Develop, deploy and debug Kubernetes applications",
                "A native debugger powered by LLDB.  Debug C++, Rust and other compiled languages.",
                "Pull Request and Issue Provider for GitHub",
                "Intelligent Tailwind CSS tooling for VS Code",
                "Run your tests in the Sidebar of Visual Studio Code",
                "Highly customizable Discord Rich Presence extension for Visual Studio Code",
                "Real-time collaborative development from the comfort of your favorite tools."
            ],
            "defaultDefaultValue": null,
            "scope": 5,
            "restricted": false
        },
        "editor.defaultFormatter": {
            "description": "Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.",
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "enum": [
                null,
                "kamadorueda.alejandra",
                "asciidoctor.asciidoctor-vscode",
                "astro-build.astro-vscode",
                "aaron-bond.better-comments",
                "webfreak.code-d",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "ms-vscode.cpptools",
                "vscode.css-language-features",
                "tamasfe.even-better-toml",
                "golang.go",
                "karunamurti.haml",
                "vscode.html-language-features",
                "vscode.json-language-features",
                "sclu1034.justfile",
                "justusadam.language-haskell",
                "James-Yu.latex-workshop",
                "sumneko.lua",
                "vscode.markdown-language-features",
                "scalameta.metals",
                "jnoortheen.nix-ide",
                "vscode.php-language-features",
                "esbenp.prettier-vscode",
                "ms-python.python",
                "vscode.references-view",
                "rust-lang.rust-analyzer",
                "vscode.search-result",
                "svelte.svelte-vscode",
                "vknabel.swift-coverage",
                "sswg.swift-lang",
                "vscode.typescript-language-features",
                "denoland.vscode-deno",
                "dbaeumer.vscode-eslint",
                "unifiedjs.vscode-mdx",
                "ms-python.vscode-pylance",
                "redhat.vscode-yaml",
                "Catppuccin.catppuccin-vsc",
                "naumovs.color-highlight",
                "vscode.configuration-editing",
                "vscode.debug-auto-launch",
                "vscode.debug-server-ready",
                "mkhl.direnv",
                "vscode.emmet",
                "usernamehw.errorlens",
                "vscode.extension-editing",
                "vscode.git",
                "vscode.git-base",
                "vscode.github",
                "vscode.github-authentication",
                "GitLab.gitlab-workflow",
                "eamodio.gitlens",
                "vscode.grunt",
                "vscode.gulp",
                "vscode.ipynb",
                "vscode.jake",
                "ms-vscode.js-debug",
                "ms-vscode.js-debug-companion",
                "lunuan.kubernetes-templates",
                "vscode.markdown-math",
                "vscode.media-preview",
                "vscode.merge-conflict",
                "vscode.microsoft-authentication",
                "vscode.npm",
                "wraith13.save-vscode-schemas",
                "vscode.simple-browser",
                "ms-vscode.test-adapter-converter",
                "Gruntfuggly.todo-tree",
                "vscode.tunnel-forwarding",
                "nvarner.typst-lsp",
                "vscodevim.vim",
                "ms-vscode.vscode-js-profile-table",
                "ms-kubernetes-tools.vscode-kubernetes-tools",
                "vadimcn.vscode-lldb",
                "GitHub.vscode-pull-request-github",
                "bradlc.vscode-tailwindcss",
                "hbenl.vscode-test-explorer",
                "LeonardSSH.vscord",
                "ms-vsliveshare.vsliveshare"
            ],
            "enumItemLabels": [
                "None",
                "Alejandra 💅",
                "AsciiDoc",
                "Astro",
                "Better Comments",
                "D Programming Language (code-d)",
                "GitHub Copilot",
                "GitHub Copilot Chat",
                "C/C++",
                "CSS Language Features",
                "Even Better TOML",
                "Go",
                "Better Haml",
                "HTML Language Features",
                "JSON Language Features",
                "justfile",
                "Haskell Syntax Highlighting",
                "LaTeX Workshop",
                "Lua",
                "Markdown Language Features",
                "Scala (Metals)",
                "Nix IDE",
                "PHP Language Features",
                "Prettier - Code formatter",
                "Python",
                "Reference Search View",
                "rust-analyzer",
                "Search Result",
                "Svelte for VS Code",
                "Swift Coverage",
                "Swift",
                "TypeScript and JavaScript Language Features",
                "Deno",
                "ESLint",
                "MDX",
                "Pylance",
                "YAML",
                "Catppuccin for VSCode",
                "Color Highlight",
                "Configuration Editing",
                "Node Debug Auto-attach",
                "Server Ready Action",
                "direnv",
                "Emmet",
                "Error Lens",
                "Extension Authoring",
                "Git",
                "Git Base",
                "GitHub",
                "GitHub Authentication",
                "GitLab Workflow",
                "GitLens — Git supercharged",
                "Grunt support for VS Code",
                "Gulp support for VSCode",
                ".ipynb Support",
                "Jake support for VS Code",
                "JavaScript Debugger",
                "JavaScript Debugger Companion Extension",
                "Kubernetes Templates",
                "Markdown Math",
                "Media Preview",
                "Merge Conflict",
                "Microsoft Account",
                "NPM support for VS Code",
                "save-vscode-schemas",
                "Simple Browser",
                "Test Adapter Converter",
                "Todo Tree",
                "Local Tunnel Port Forwarding",
                "Typst LSP",
                "Vim",
                "Table Visualizer for JavaScript Profiles",
                "Kubernetes",
                "CodeLLDB",
                "GitHub Pull Requests and Issues",
                "Tailwind CSS IntelliSense",
                "Test Explorer UI",
                "Discord Rich Presence",
                "Live Share"
            ],
            "markdownEnumDescriptions": [
                "None",
                "The Uncompromising Nix Code Formatter",
                "Provides rich language support for AsciiDoc.",
                "Language support for Astro",
                "Improve your code commenting by annotating with alert, informational, TODOs, and more!",
                "auto-complete, snippets, linter and formatter for dlang",
                "Your AI pair programmer",
                "AI chat features powered by Copilot",
                "C/C++ IntelliSense, debugging, and code browsing.",
                "Provides rich language support for CSS, LESS and SCSS files.",
                "Fully-featured TOML support",
                "Rich Go language support for Visual Studio Code",
                "Better Haml syntax highlighting, auto close and suggestions",
                "Provides rich language support for HTML and Handlebar files",
                "Provides rich language support for JSON files.",
                "Provides syntax and recipe launcher for Just scripts.",
                "Syntax support for the Haskell programming language.",
                "Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.",
                "Lua Language Server coded by Lua",
                "Provides rich language support for Markdown.",
                "Scala language server with rich IDE features",
                "Nix language support with formatting and error report.",
                "Provides rich language support for PHP files.",
                "Code formatter using prettier",
                "IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), code formatting, refactoring, unit tests, and more.",
                "Reference Search results as separate, stable view in the sidebar",
                "Rust language support for Visual Studio Code",
                "Provides syntax highlighting and language features for tabbed search results.",
                "Svelte language support for VS Code",
                "Display coverage reports next to your code for Swift Package Manager projects.",
                "Swift Language Support for Visual Studio Code.",
                "Provides rich language support for JavaScript and TypeScript.",
                "A language server client for Deno.",
                "Integrates ESLint JavaScript into VS Code.",
                "Language support for MDX",
                "A performant, feature-rich language server for Python in VS Code",
                "YAML Language Support by Red Hat, with built-in Kubernetes syntax support",
                "🦌 Soothing pastel theme for VSCode",
                "Highlight web colors in your editor",
                "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
                "Helper for auto-attach feature when node-debug extensions are not active.",
                "Open URI in browser if server under debugging is ready.",
                "unclutter your .profile",
                "Emmet support for VS Code",
                "Improve highlighting of errors, warnings and other language diagnostics.",
                "Provides linting capabilities for authoring extensions.",
                "Git SCM Integration",
                "Git static contributions and pickers.",
                "GitHub features for VS Code",
                "GitHub Authentication Provider",
                "Official GitLab-maintained extension for Visual Studio Code.",
                "Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more",
                "Extension to add Grunt capabilities to VS Code.",
                "Extension to add Gulp capabilities to VSCode.",
                "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
                "Extension to add Jake capabilities to VS Code.",
                "An extension for debugging Node.js programs and Chrome.",
                "Companion extension to js-debug that provides capability for remote debugging",
                "Kubernetes Templates",
                "Adds math support to Markdown in notebooks.",
                "Provides VS Code's built-in previews for images, audio, and video",
                "Highlighting and commands for inline merge conflicts.",
                "Microsoft authentication provider",
                "Extension to add task support for npm scripts.",
                "Save VS Code's schemas",
                "A very basic built-in webview for displaying web content.",
                "Converter extension from the Test Adapter UI to native VS Code testing",
                "Show TODO, FIXME, etc. comment tags in a tree view",
                "Allows forwarding local ports to be accessible over the internet.",
                "A language server for Typst",
                "Vim emulation for Visual Studio Code",
                "Text visualizer for profiles taken from the JavaScript debugger",
                "Develop, deploy and debug Kubernetes applications",
                "A native debugger powered by LLDB.  Debug C++, Rust and other compiled languages.",
                "Pull Request and Issue Provider for GitHub",
                "Intelligent Tailwind CSS tooling for VS Code",
                "Run your tests in the Sidebar of Visual Studio Code",
                "Highly customizable Discord Rich Presence extension for Visual Studio Code",
                "Real-time collaborative development from the comfort of your favorite tools."
            ],
            "defaultDefaultValue": null,
            "scope": 5,
            "restricted": false
        },
        "workbench.editor.languageDetection": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the language in a text editor is automatically detected unless the language has been explicitly set by the language picker. This can also be scoped by language so you can specify which languages you do not want to be switched off of. This is useful for languages like Markdown that often contain other languages that might trick language detection into thinking it's the embedded language and not Markdown.",
            "scope": 5,
            "defaultDefaultValue": true,
            "restricted": false
        },
        "workbench.editor.restoreViewState": {
            "type": "boolean",
            "markdownDescription": "Restores the last editor view state (such as scroll position) when re-opening editors after they have been closed. Editor view state is stored per editor group and discarded when a group closes. Use the `#workbench.editor.sharedViewState#` setting to use the last known view state across all editor groups in case no previous view state was found for a editor group.",
            "default": true,
            "scope": 5,
            "defaultDefaultValue": true,
            "restricted": false
        },
        "workbench.localHistory.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether local file history is enabled. When enabled, the file contents of an editor that is saved will be stored to a backup location to be able to restore or review the contents later. Changing this setting has no effect on existing local file history entries.",
            "scope": 4,
            "defaultDefaultValue": true,
            "restricted": false
        },
        "workbench.localHistory.maxFileSize": {
            "type": "number",
            "default": 256,
            "minimum": 1,
            "description": "Controls the maximum size of a file (in KB) to be considered for local file history. Files that are larger will not be added to the local file history. Changing this setting has no effect on existing local file history entries.",
            "scope": 4,
            "defaultDefaultValue": 256,
            "restricted": false
        },
        "workbench.localHistory.maxFileEntries": {
            "type": "number",
            "default": 50,
            "minimum": 0,
            "description": "Controls the maximum number of local file history entries per file. When the number of local file history entries exceeds this number for a file, the oldest entries will be discarded.",
            "scope": 4,
            "defaultDefaultValue": 50,
            "restricted": false
        },
        "workbench.localHistory.exclude": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "boolean"
                }
            },
            "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files from the local file history. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. Changing this setting has no effect on existing local file history entries.",
            "scope": 4,
            "default": {},
            "restricted": false
        },
        "workbench.localHistory.mergeWindow": {
            "type": "number",
            "default": 10,
            "minimum": 1,
            "markdownDescription": "Configure an interval in seconds during which the last entry in local file history is replaced with the entry that is being added. This helps reduce the overall number of entries that are added, for example when auto save is enabled. This setting is only applied to entries that have the same source of origin. Changing this setting has no effect on existing local file history entries.",
            "scope": 4,
            "defaultDefaultValue": 10,
            "restricted": false
        },
        "editor.snippets.codeActions.enabled": {
            "description": "Controls if surround-with-snippets or file template snippets show as Code Actions.",
            "type": "boolean",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 5,
            "restricted": false
        },
        "debug.saveBeforeStart": {
            "description": "Controls what editors to save before starting a debug session.",
            "enum": [
                "allEditorsInActiveGroup",
                "nonUntitledEditorsInActiveGroup",
                "none"
            ],
            "enumDescriptions": [
                "Save all editors in the active group before starting a debug session.",
                "Save all editors in the active group except untitled ones before starting a debug session.",
                "Don't save any editors before starting a debug session."
            ],
            "default": "allEditorsInActiveGroup",
            "scope": 5,
            "defaultDefaultValue": "allEditorsInActiveGroup",
            "restricted": false
        },
        "files.exclude": {
            "type": "object",
            "markdownDescription": "Configure [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders. For example, the File Explorer decides which files and folders to show or hide based on this setting. Refer to the `#search.exclude#` setting to define search-specific excludes. Refer to the `#explorer.excludeGitIgnore#` setting for ignoring files based on your `.gitignore`.",
            "default": {
                "**/.git": true,
                "**/.svn": true,
                "**/.hg": true,
                "**/CVS": true,
                "**/.DS_Store": true,
                "**/Thumbs.db": true
            },
            "scope": 4,
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "enumDescriptions": [
                            "Enable the pattern.",
                            "Disable the pattern."
                        ],
                        "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "when": {
                                "type": "string",
                                "pattern": "\\w*\\$\\(basename\\)\\w*",
                                "default": "$(basename).ext",
                                "markdownDescription": "Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name."
                            }
                        }
                    }
                ]
            },
            "defaultDefaultValue": {
                "**/.git": true,
                "**/.svn": true,
                "**/.hg": true,
                "**/CVS": true,
                "**/.DS_Store": true,
                "**/Thumbs.db": true
            },
            "restricted": false
        },
        "files.encoding": {
            "type": "string",
            "enum": [
                "utf8",
                "utf8bom",
                "utf16le",
                "utf16be",
                "windows1252",
                "iso88591",
                "iso88593",
                "iso885915",
                "macroman",
                "cp437",
                "windows1256",
                "iso88596",
                "windows1257",
                "iso88594",
                "iso885914",
                "windows1250",
                "iso88592",
                "cp852",
                "windows1251",
                "cp866",
                "iso88595",
                "koi8r",
                "koi8u",
                "iso885913",
                "windows1253",
                "iso88597",
                "windows1255",
                "iso88598",
                "iso885910",
                "iso885916",
                "windows1254",
                "iso88599",
                "windows1258",
                "gbk",
                "gb18030",
                "cp950",
                "big5hkscs",
                "shiftjis",
                "eucjp",
                "euckr",
                "windows874",
                "iso885911",
                "koi8ru",
                "koi8t",
                "gb2312",
                "cp865",
                "cp850"
            ],
            "default": "utf8",
            "description": "The default character set encoding to use when reading and writing files. This setting can also be configured per language.",
            "scope": 5,
            "enumDescriptions": [
                "UTF-8",
                "UTF-8 with BOM",
                "UTF-16 LE",
                "UTF-16 BE",
                "Western (Windows 1252)",
                "Western (ISO 8859-1)",
                "Western (ISO 8859-3)",
                "Western (ISO 8859-15)",
                "Western (Mac Roman)",
                "DOS (CP 437)",
                "Arabic (Windows 1256)",
                "Arabic (ISO 8859-6)",
                "Baltic (Windows 1257)",
                "Baltic (ISO 8859-4)",
                "Celtic (ISO 8859-14)",
                "Central European (Windows 1250)",
                "Central European (ISO 8859-2)",
                "Central European (CP 852)",
                "Cyrillic (Windows 1251)",
                "Cyrillic (CP 866)",
                "Cyrillic (ISO 8859-5)",
                "Cyrillic (KOI8-R)",
                "Cyrillic (KOI8-U)",
                "Estonian (ISO 8859-13)",
                "Greek (Windows 1253)",
                "Greek (ISO 8859-7)",
                "Hebrew (Windows 1255)",
                "Hebrew (ISO 8859-8)",
                "Nordic (ISO 8859-10)",
                "Romanian (ISO 8859-16)",
                "Turkish (Windows 1254)",
                "Turkish (ISO 8859-9)",
                "Vietnamese (Windows 1258)",
                "Simplified Chinese (GBK)",
                "Simplified Chinese (GB18030)",
                "Traditional Chinese (Big5)",
                "Traditional Chinese (Big5-HKSCS)",
                "Japanese (Shift JIS)",
                "Japanese (EUC-JP)",
                "Korean (EUC-KR)",
                "Thai (Windows 874)",
                "Latin/Thai (ISO 8859-11)",
                "Cyrillic (KOI8-RU)",
                "Tajik (KOI8-T)",
                "Simplified Chinese (GB 2312)",
                "Nordic DOS (CP 865)",
                "Western European DOS (CP 850)"
            ],
            "enumItemLabels": [
                "UTF-8",
                "UTF-8 with BOM",
                "UTF-16 LE",
                "UTF-16 BE",
                "Western (Windows 1252)",
                "Western (ISO 8859-1)",
                "Western (ISO 8859-3)",
                "Western (ISO 8859-15)",
                "Western (Mac Roman)",
                "DOS (CP 437)",
                "Arabic (Windows 1256)",
                "Arabic (ISO 8859-6)",
                "Baltic (Windows 1257)",
                "Baltic (ISO 8859-4)",
                "Celtic (ISO 8859-14)",
                "Central European (Windows 1250)",
                "Central European (ISO 8859-2)",
                "Central European (CP 852)",
                "Cyrillic (Windows 1251)",
                "Cyrillic (CP 866)",
                "Cyrillic (ISO 8859-5)",
                "Cyrillic (KOI8-R)",
                "Cyrillic (KOI8-U)",
                "Estonian (ISO 8859-13)",
                "Greek (Windows 1253)",
                "Greek (ISO 8859-7)",
                "Hebrew (Windows 1255)",
                "Hebrew (ISO 8859-8)",
                "Nordic (ISO 8859-10)",
                "Romanian (ISO 8859-16)",
                "Turkish (Windows 1254)",
                "Turkish (ISO 8859-9)",
                "Vietnamese (Windows 1258)",
                "Simplified Chinese (GBK)",
                "Simplified Chinese (GB18030)",
                "Traditional Chinese (Big5)",
                "Traditional Chinese (Big5-HKSCS)",
                "Japanese (Shift JIS)",
                "Japanese (EUC-JP)",
                "Korean (EUC-KR)",
                "Thai (Windows 874)",
                "Latin/Thai (ISO 8859-11)",
                "Cyrillic (KOI8-RU)",
                "Tajik (KOI8-T)",
                "Simplified Chinese (GB 2312)",
                "Nordic DOS (CP 865)",
                "Western European DOS (CP 850)"
            ],
            "defaultDefaultValue": "utf8",
            "restricted": false
        },
        "files.autoGuessEncoding": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language. Note, this setting is not respected by text search. Only `#files.encoding#` is respected.",
            "scope": 5,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "files.eol": {
            "type": "string",
            "enum": [
                "\n",
                "\r\n",
                "auto"
            ],
            "enumDescriptions": [
                "LF",
                "CRLF",
                "Uses operating system specific end of line character."
            ],
            "default": "auto",
            "description": "The default end of line character.",
            "scope": 5,
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "files.trimTrailingWhitespace": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, will trim trailing whitespace when saving a file.",
            "scope": 5,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "files.insertFinalNewline": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, insert a final new line at the end of the file when saving it.",
            "scope": 5,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "files.trimFinalNewlines": {
            "type": "boolean",
            "default": false,
            "description": "When enabled, will trim all new lines after the final new line at the end of the file when saving it.",
            "scope": 5,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "files.watcherExclude": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "boolean"
                }
            },
            "default": {
                "**/.git/objects/**": true,
                "**/.git/subtree-cache/**": true,
                "**/node_modules/*/**": true,
                "**/.hg/store/**": true
            },
            "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from file watching. Paths can either be relative to the watched folder or absolute. Glob patterns are matched relative from the watched folder. When you experience the file watcher process consuming a lot of CPU, make sure to exclude large folders that are of less interest (such as build output folders).",
            "scope": 4,
            "defaultDefaultValue": {
                "**/.git/objects/**": true,
                "**/.git/subtree-cache/**": true,
                "**/node_modules/*/**": true,
                "**/.hg/store/**": true
            },
            "restricted": false
        },
        "files.watcherInclude": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Configure extra paths to watch for changes inside the workspace. By default, all workspace folders will be watched recursively, except for folders that are symbolic links. You can explicitly add absolute or relative paths to support watching folders that are symbolic links. Relative paths will be resolved to an absolute path using the currently opened workspace.",
            "scope": 4,
            "defaultDefaultValue": [],
            "restricted": false
        },
        "files.readonlyInclude": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "boolean"
                }
            },
            "default": {},
            "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to mark as read-only. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. You can exclude matching paths via the `#files.readonlyExclude#` setting. Files from readonly file system providers will always be read-only independent of this setting.",
            "scope": 4,
            "defaultDefaultValue": {},
            "restricted": false
        },
        "files.readonlyExclude": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "boolean"
                }
            },
            "default": {},
            "markdownDescription": "Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from being marked as read-only if they match as a result of the `#files.readonlyInclude#` setting. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. Files from readonly file system providers will always be read-only independent of this setting.",
            "scope": 4,
            "defaultDefaultValue": {},
            "restricted": false
        },
        "files.saveConflictResolution": {
            "type": "string",
            "enum": [
                "askUser",
                "overwriteFileOnDisk"
            ],
            "enumDescriptions": [
                "Will refuse to save and ask for resolving the save conflict manually.",
                "Will resolve the save conflict by overwriting the file on disk with the changes in the editor."
            ],
            "description": "A save conflict can occur when a file is saved to disk that was changed by another program in the meantime. To prevent data loss, the user is asked to compare the changes in the editor with the version on disk. This setting should only be changed if you frequently encounter save conflict errors and may result in data loss if used without caution.",
            "default": "askUser",
            "scope": 5,
            "defaultDefaultValue": "askUser",
            "restricted": false
        },
        "editor.formatOnSave": {
            "type": "boolean",
            "description": "Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.",
            "scope": 5,
            "default": false,
            "restricted": false
        },
        "editor.formatOnSaveMode": {
            "type": "string",
            "default": "file",
            "enum": [
                "file",
                "modifications",
                "modificationsIfAvailable"
            ],
            "enumDescriptions": [
                "Format the whole file.",
                "Format modifications (requires source control).",
                "Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted."
            ],
            "markdownDescription": "Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.",
            "scope": 5,
            "defaultDefaultValue": "file",
            "restricted": false
        },
        "explorer.excludeGitIgnore": {
            "type": "boolean",
            "markdownDescription": "Controls whether entries in .gitignore should be parsed and excluded from the Explorer. Similar to `#files.exclude#`.",
            "default": false,
            "scope": 4,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "explorer.fileNesting.enabled": {
            "type": "boolean",
            "scope": 4,
            "markdownDescription": "Controls whether file nesting is enabled in the Explorer. File nesting allows for related files in a directory to be visually grouped together under a single parent file.",
            "default": false,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "explorer.fileNesting.patterns": {
            "type": "object",
            "scope": 4,
            "markdownDescription": "Controls nesting of files in the Explorer. `#explorer.fileNesting.enabled#` must be set for this to take effect. Each __Item__ represents a parent pattern and may contain a single `*` character that matches any string. Each __Value__ represents a comma separated list of the child patterns that should be shown nested under a given parent. Child patterns may contain several special tokens:\n- `${capture}`: Matches the resolved value of the `*` from the parent pattern\n- `${basename}`: Matches the parent file's basename, the `file` in `file.ts`\n- `${extname}`: Matches the parent file's extension, the `ts` in `file.ts`\n- `${dirname}`: Matches the parent file's directory name, the `src` in `src/file.ts`\n- `*`:  Matches any string, may only be used once per child pattern",
            "patternProperties": {
                "^[^*]*\\*?[^*]*$": {
                    "markdownDescription": "Each key pattern may contain a single `*` character which will match any string.",
                    "type": "string",
                    "pattern": "^([^,*]*\\*?[^,*]*)(, ?[^,*]*\\*?[^,*]*)*$"
                }
            },
            "additionalProperties": false,
            "default": {
                "Cargo.toml": "Cargo.lock"
            },
            "defaultDefaultValue": {
                "*.ts": "${capture}.js",
                "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
                "*.jsx": "${capture}.js",
                "*.tsx": "${capture}.ts",
                "tsconfig.json": "tsconfig.*.json",
                "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
            },
            "defaultValueSource": {
                "id": "rust-lang.rust-analyzer",
                "displayName": "rust-analyzer"
            },
            "restricted": false
        },
        "outline.collapseItems": {
            "description": "Controls whether Outline items are collapsed or expanded.",
            "type": "string",
            "scope": 5,
            "enum": [
                "alwaysCollapse",
                "alwaysExpand"
            ],
            "enumDescriptions": [
                "Collapse all items.",
                "Expand all items."
            ],
            "default": "alwaysExpand",
            "defaultDefaultValue": "alwaysExpand",
            "restricted": false
        },
        "outline.showFiles": {
            "type": "boolean",
            "scope": 5,
            "default": true,
            "markdownDescription": "When enabled, Outline shows `file`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showModules": {
            "type": "boolean",
            "scope": 5,
            "default": true,
            "markdownDescription": "When enabled, Outline shows `module`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showNamespaces": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `namespace`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showPackages": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `package`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showClasses": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `class`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showMethods": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `method`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showProperties": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `property`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showFields": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `field`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showConstructors": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `constructor`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showEnums": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `enum`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showInterfaces": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `interface`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showFunctions": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `function`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showVariables": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `variable`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showConstants": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `constant`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showStrings": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `string`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showNumbers": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `number`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showBooleans": {
            "type": "boolean",
            "scope": 5,
            "default": true,
            "markdownDescription": "When enabled, Outline shows `boolean`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showArrays": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `array`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showObjects": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `object`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showKeys": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `key`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showNull": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `null`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showEnumMembers": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `enumMember`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showStructs": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `struct`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showEvents": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `event`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showOperators": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `operator`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "outline.showTypeParameters": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "When enabled, Outline shows `typeParameter`-symbols.",
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scm.diffDecorations": {
            "type": "string",
            "enum": [
                "all",
                "gutter",
                "overview",
                "minimap",
                "none"
            ],
            "enumDescriptions": [
                "Show the diff decorations in all available locations.",
                "Show the diff decorations only in the editor gutter.",
                "Show the diff decorations only in the overview ruler.",
                "Show the diff decorations only in the minimap.",
                "Do not show the diff decorations."
            ],
            "default": "all",
            "description": "Controls diff decorations in the editor.",
            "defaultDefaultValue": "all",
            "scope": 4,
            "restricted": false
        },
        "scm.diffDecorationsGutterWidth": {
            "type": "number",
            "enum": [
                1,
                2,
                3,
                4,
                5
            ],
            "default": 3,
            "description": "Controls the width(px) of diff decorations in gutter (added & modified).",
            "defaultDefaultValue": 3,
            "scope": 4,
            "restricted": false
        },
        "scm.diffDecorationsGutterVisibility": {
            "type": "string",
            "enum": [
                "always",
                "hover"
            ],
            "enumDescriptions": [
                "Show the diff decorator in the gutter at all times.",
                "Show the diff decorator in the gutter only on hover."
            ],
            "description": "Controls the visibility of the Source Control diff decorator in the gutter.",
            "default": "always",
            "defaultDefaultValue": "always",
            "scope": 4,
            "restricted": false
        },
        "scm.diffDecorationsGutterAction": {
            "type": "string",
            "enum": [
                "diff",
                "none"
            ],
            "enumDescriptions": [
                "Show the inline diff Peek view on click.",
                "Do nothing."
            ],
            "description": "Controls the behavior of Source Control diff gutter decorations.",
            "default": "diff",
            "defaultDefaultValue": "diff",
            "scope": 4,
            "restricted": false
        },
        "scm.diffDecorationsGutterPattern": {
            "type": "object",
            "description": "Controls whether a pattern is used for the diff decorations in gutter.",
            "additionalProperties": false,
            "properties": {
                "added": {
                    "type": "boolean",
                    "description": "Use pattern for the diff decorations in gutter for added lines."
                },
                "modified": {
                    "type": "boolean",
                    "description": "Use pattern for the diff decorations in gutter for modified lines."
                }
            },
            "default": {
                "added": false,
                "modified": true
            },
            "defaultDefaultValue": {
                "added": false,
                "modified": true
            },
            "scope": 4,
            "restricted": false
        },
        "scm.diffDecorationsIgnoreTrimWhitespace": {
            "type": "string",
            "enum": [
                "true",
                "false",
                "inherit"
            ],
            "enumDescriptions": [
                "Ignore leading and trailing whitespace.",
                "Do not ignore leading and trailing whitespace.",
                "Inherit from `diffEditor.ignoreTrimWhitespace`."
            ],
            "description": "Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.",
            "default": "false",
            "defaultDefaultValue": "false",
            "scope": 4,
            "restricted": false
        },
        "scm.alwaysShowActions": {
            "type": "boolean",
            "description": "Controls whether inline actions are always visible in the Source Control view.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 4,
            "restricted": false
        },
        "scm.countBadge": {
            "type": "string",
            "enum": [
                "all",
                "focused",
                "off"
            ],
            "enumDescriptions": [
                "Show the sum of all Source Control Provider count badges.",
                "Show the count badge of the focused Source Control Provider.",
                "Disable the Source Control count badge."
            ],
            "description": "Controls the count badge on the Source Control icon on the Activity Bar.",
            "default": "all",
            "defaultDefaultValue": "all",
            "scope": 4,
            "restricted": false
        },
        "scm.providerCountBadge": {
            "type": "string",
            "enum": [
                "hidden",
                "auto",
                "visible"
            ],
            "enumDescriptions": [
                "Hide Source Control Provider count badges.",
                "Only show count badge for Source Control Provider when non-zero.",
                "Show Source Control Provider count badges."
            ],
            "description": "Controls the count badges on Source Control Provider headers. These headers only appear when there is more than one provider.",
            "default": "hidden",
            "defaultDefaultValue": "hidden",
            "scope": 4,
            "restricted": false
        },
        "scm.defaultViewMode": {
            "type": "string",
            "enum": [
                "tree",
                "list"
            ],
            "enumDescriptions": [
                "Show the repository changes as a tree.",
                "Show the repository changes as a list."
            ],
            "description": "Controls the default Source Control repository view mode.",
            "default": "list",
            "defaultDefaultValue": "list",
            "scope": 4,
            "restricted": false
        },
        "scm.defaultViewSortKey": {
            "type": "string",
            "enum": [
                "name",
                "path",
                "status"
            ],
            "enumDescriptions": [
                "Sort the repository changes by file name.",
                "Sort the repository changes by path.",
                "Sort the repository changes by Source Control status."
            ],
            "description": "Controls the default Source Control repository changes sort order when viewed as a list.",
            "default": "path",
            "defaultDefaultValue": "path",
            "scope": 4,
            "restricted": false
        },
        "scm.autoReveal": {
            "type": "boolean",
            "description": "Controls whether the Source Control view should automatically reveal and select files when opening them.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 4,
            "restricted": false
        },
        "scm.inputFontFamily": {
            "type": "string",
            "markdownDescription": "Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.",
            "default": "default",
            "defaultDefaultValue": "default",
            "scope": 4,
            "restricted": false
        },
        "scm.inputFontSize": {
            "type": "number",
            "markdownDescription": "Controls the font size for the input message in pixels.",
            "default": 13,
            "defaultDefaultValue": 13,
            "scope": 4,
            "restricted": false
        },
        "scm.alwaysShowRepositories": {
            "type": "boolean",
            "markdownDescription": "Controls whether repositories should always be visible in the Source Control view.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 4,
            "restricted": false
        },
        "scm.repositories.sortOrder": {
            "type": "string",
            "enum": [
                "discovery time",
                "name",
                "path"
            ],
            "enumDescriptions": [
                "Repositories in the Source Control Repositories view are sorted by discovery time. Repositories in the Source Control view are sorted in the order that they were selected.",
                "Repositories in the Source Control Repositories and Source Control views are sorted by repository name.",
                "Repositories in the Source Control Repositories and Source Control views are sorted by repository path."
            ],
            "description": "Controls the sort order of the repositories in the source control repositories view.",
            "default": "discovery time",
            "defaultDefaultValue": "discovery time",
            "scope": 4,
            "restricted": false
        },
        "scm.repositories.visible": {
            "type": "number",
            "description": "Controls how many repositories are visible in the Source Control Repositories section. Set to 0, to be able to manually resize the view.",
            "default": 10,
            "defaultDefaultValue": 10,
            "scope": 4,
            "restricted": false
        },
        "scm.showActionButton": {
            "type": "boolean",
            "markdownDescription": "Controls whether an action button can be shown in the Source Control view.",
            "default": true,
            "defaultDefaultValue": true,
            "scope": 4,
            "restricted": false
        },
        "scm.experimental.showSyncView": {
            "type": "boolean",
            "description": "Controls whether the Source Control Sync view is shown.",
            "default": false,
            "defaultDefaultValue": false,
            "scope": 4,
            "restricted": false
        },
        "workbench.startupEditor": {
            "scope": 4,
            "type": "string",
            "enum": [
                "none",
                "welcomePage",
                "readme",
                "newUntitledFile",
                "welcomePageInEmptyWorkbench"
            ],
            "enumDescriptions": [
                "Start without an editor.",
                "Open the Welcome page, with content to aid in getting started with VS Code and extensions.",
                "Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.",
                "Open a new untitled text file (only applies when opening an empty window).",
                "Open the Welcome page when opening an empty workbench."
            ],
            "default": "welcomePage",
            "description": "Controls which editor is shown at startup, if none are restored from the previous session.",
            "defaultDefaultValue": "welcomePage",
            "restricted": false
        },
        "search.exclude": {
            "type": "object",
            "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `#files.exclude#` setting.",
            "default": {
                "**/node_modules": true,
                "**/bower_components": true,
                "**/*.code-search": true
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "when": {
                                "type": "string",
                                "pattern": "\\w*\\$\\(basename\\)\\w*",
                                "default": "$(basename).ext",
                                "markdownDescription": "Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name."
                            }
                        }
                    }
                ]
            },
            "scope": 4,
            "defaultDefaultValue": {
                "**/node_modules": true,
                "**/bower_components": true,
                "**/*.code-search": true
            },
            "restricted": false
        },
        "search.useIgnoreFiles": {
            "type": "boolean",
            "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files when searching for files.",
            "default": true,
            "scope": 4,
            "defaultDefaultValue": true,
            "restricted": false
        },
        "search.useGlobalIgnoreFiles": {
            "type": "boolean",
            "markdownDescription": "Controls whether to use your global gitignore file (e.g., from `$HOME/.config/git/ignore`) when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
            "default": false,
            "scope": 4,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "search.useParentIgnoreFiles": {
            "type": "boolean",
            "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
            "default": false,
            "scope": 4,
            "defaultDefaultValue": false,
            "restricted": false
        },
        "terminal.integrated.tabs.defaultColor": {
            "description": "A theme color ID to associate with terminal icons by default.",
            "type": [
                "string",
                "null"
            ],
            "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
            ],
            "default": null,
            "scope": 4,
            "defaultDefaultValue": null,
            "restricted": false
        },
        "terminal.integrated.tabs.defaultIcon": {
            "description": "A codicon ID to associate with terminal icons by default.",
            "type": "string",
            "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "git-pull-request-label",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "bracket",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "git-pull-request-milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "git-pull-request-reviewer",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "git-pull-request-assignee",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "heart-filled",
                "map",
                "map-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "send",
                "sparkle",
                "insert",
                "mic",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
            ],
            "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(git-pull-request-label)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(bracket)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(git-pull-request-milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(git-pull-request-reviewer)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(git-pull-request-assignee)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(heart-filled)",
                "$(map)",
                "$(map-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(send)",
                "$(sparkle)",
                "$(insert)",
                "$(mic)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
            ],
            "default": "terminal",
            "scope": 4,
            "defaultDefaultValue": "terminal",
            "restricted": false
        },
        "terminal.integrated.cwd": {
            "restricted": true,
            "description": "An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
            "type": "string",
            "default": "",
            "scope": 4
        },
        "css.customData": {
            "type": "array",
            "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
            "default": [],
            "items": {
                "type": "string"
            },
            "scope": 4,
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "css.completion.triggerPropertyValueCompletion": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.completion.completePropertyWithSemicolon": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Insert semicolon at end of line when completing CSS properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.validate": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Enables or disables all validations.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.hover.documentation": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show tag and attribute documentation in CSS hovers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.hover.references": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show references to MDN in CSS hovers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.lint.compatibleVendorPrefixes": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.vendorPrefix": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "When using a vendor-specific prefix, also include the standard property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "css.lint.duplicateProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Do not use duplicate style definitions.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.emptyRules": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Do not use empty rulesets.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "css.lint.importStatement": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Import statements do not load in parallel.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.boxModel": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.universalSelector": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "The universal selector (`*`) is known to be slow.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.zeroUnits": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "No unit for zero needed.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.fontFaceProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "css.lint.hexColorLength": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "description": "Hex colors must consist of three or six hex numbers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "css.lint.argumentsInColorFunction": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "description": "Invalid number of parameters.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "css.lint.unknownProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Unknown property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "css.lint.validProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "scope": 4,
            "default": [],
            "description": "A list of properties that are not validated against the `unknownProperties` rule.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "css.lint.ieHack": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "IE hacks are only necessary when supporting IE7 and older.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.unknownVendorSpecificProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Unknown vendor specific property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.propertyIgnoredDueToDisplay": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "css.lint.important": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.float": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.idSelector": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "css.lint.unknownAtRules": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Unknown at-rule.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "css.format.newlineBetweenSelectors": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Separate selectors with a new line.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.format.newlineBetweenRules": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Separate rulesets by a blank line.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.format.spaceAroundSelectorSeparator": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "css.format.braceStyle": {
            "type": "string",
            "scope": 4,
            "default": "collapse",
            "enum": [
                "collapse",
                "expand"
            ],
            "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "collapse",
            "restricted": false
        },
        "css.format.preserveNewLines": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Whether existing line breaks before elements should be preserved.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "css.format.maxPreserveNewLines": {
            "type": [
                "number",
                "null"
            ],
            "scope": 4,
            "default": null,
            "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#css.format.preserveNewLines#` is enabled.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "scss.completion.triggerPropertyValueCompletion": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.completion.completePropertyWithSemicolon": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Insert semicolon at end of line when completing CSS properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.validate": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Enables or disables all validations.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.hover.documentation": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show tag and attribute documentation in SCSS hovers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.hover.references": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show references to MDN in SCSS hovers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.lint.compatibleVendorPrefixes": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.vendorPrefix": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "When using a vendor-specific prefix, also include the standard property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "scss.lint.duplicateProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Do not use duplicate style definitions.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.emptyRules": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Do not use empty rulesets.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "scss.lint.importStatement": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Import statements do not load in parallel.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.boxModel": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.universalSelector": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "The universal selector (`*`) is known to be slow.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.zeroUnits": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "No unit for zero needed.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.fontFaceProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "scss.lint.hexColorLength": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "description": "Hex colors must consist of three or six hex numbers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "scss.lint.argumentsInColorFunction": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "description": "Invalid number of parameters.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "scss.lint.unknownProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Unknown property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "scss.lint.validProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "scope": 4,
            "default": [],
            "description": "A list of properties that are not validated against the `unknownProperties` rule.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "scss.lint.ieHack": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "IE hacks are only necessary when supporting IE7 and older.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.unknownVendorSpecificProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Unknown vendor specific property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.propertyIgnoredDueToDisplay": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "scss.lint.important": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.float": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.idSelector": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "scss.lint.unknownAtRules": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Unknown at-rule.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "scss.format.newlineBetweenSelectors": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Separate selectors with a new line.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.format.newlineBetweenRules": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Separate rulesets by a blank line.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.format.spaceAroundSelectorSeparator": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "scss.format.braceStyle": {
            "type": "string",
            "scope": 4,
            "default": "collapse",
            "enum": [
                "collapse",
                "expand"
            ],
            "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "collapse",
            "restricted": false
        },
        "scss.format.preserveNewLines": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Whether existing line breaks before elements should be preserved.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "scss.format.maxPreserveNewLines": {
            "type": [
                "number",
                "null"
            ],
            "scope": 4,
            "default": null,
            "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#scss.format.preserveNewLines#` is enabled.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "less.completion.triggerPropertyValueCompletion": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.completion.completePropertyWithSemicolon": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Insert semicolon at end of line when completing CSS properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.validate": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Enables or disables all validations.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.hover.documentation": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show tag and attribute documentation in LESS hovers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.hover.references": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show references to MDN in LESS hovers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.lint.compatibleVendorPrefixes": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.vendorPrefix": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "When using a vendor-specific prefix, also include the standard property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "less.lint.duplicateProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Do not use duplicate style definitions.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.emptyRules": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Do not use empty rulesets.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "less.lint.importStatement": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Import statements do not load in parallel.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.boxModel": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.universalSelector": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "The universal selector (`*`) is known to be slow.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.zeroUnits": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "No unit for zero needed.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.fontFaceProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "less.lint.hexColorLength": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "description": "Hex colors must consist of three or six hex numbers.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "less.lint.argumentsInColorFunction": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "description": "Invalid number of parameters.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "less.lint.unknownProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Unknown property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "less.lint.validProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "scope": 4,
            "default": [],
            "description": "A list of properties that are not validated against the `unknownProperties` rule.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "less.lint.ieHack": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "IE hacks are only necessary when supporting IE7 and older.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.unknownVendorSpecificProperties": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Unknown vendor specific property.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.propertyIgnoredDueToDisplay": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "less.lint.important": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.float": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.idSelector": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "ignore",
            "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "less.lint.unknownAtRules": {
            "type": "string",
            "scope": 4,
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "description": "Unknown at-rule.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "less.format.newlineBetweenSelectors": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Separate selectors with a new line.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.format.newlineBetweenRules": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Separate rulesets by a blank line.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.format.spaceAroundSelectorSeparator": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "less.format.braceStyle": {
            "type": "string",
            "scope": 4,
            "default": "collapse",
            "enum": [
                "collapse",
                "expand"
            ],
            "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": "collapse",
            "restricted": false
        },
        "less.format.preserveNewLines": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "markdownDescription": "Whether existing line breaks before elements should be preserved.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "less.format.maxPreserveNewLines": {
            "type": [
                "number",
                "null"
            ],
            "scope": 4,
            "default": null,
            "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#less.format.preserveNewLines#` is enabled.",
            "source": {
                "id": "vscode.css-language-features",
                "displayName": "CSS Language Features"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "emmet.showAbbreviationSuggestions": {
            "type": "boolean",
            "default": true,
            "scope": 5,
            "markdownDescription": "Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`.",
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "emmet.triggerExpansionOnTab": {
            "type": "boolean",
            "default": false,
            "scope": 5,
            "markdownDescription": "When enabled, Emmet abbreviations are expanded when pressing TAB, even when completions do not show up. When disabled, completions that show up can still be accepted by pressing TAB.",
            "source": {
                "id": "vscode.emmet",
                "displayName": "Emmet"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.enabled": {
            "type": "boolean",
            "scope": 4,
            "description": "Whether git is enabled.",
            "default": true,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.autofetch": {
            "type": [
                "boolean",
                "string"
            ],
            "enum": [
                true,
                false,
                "all"
            ],
            "scope": 4,
            "markdownDescription": "When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.",
            "default": false,
            "tags": [
                "usesOnlineServices"
            ],
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.autofetchPeriod": {
            "type": "number",
            "scope": 4,
            "markdownDescription": "Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.",
            "default": 180,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 180,
            "restricted": false
        },
        "git.defaultBranchName": {
            "type": "string",
            "markdownDescription": "The name of the default branch (ex: main, trunk, development) when initializing a new git repository. When set to empty, the default branch name configured in git will be used. **Note:** Requires git version `2.28.0` or later.",
            "default": "main",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "main",
            "restricted": false
        },
        "git.branchPrefix": {
            "type": "string",
            "description": "Prefix used when creating a new branch.",
            "default": "",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "git.branchProtection": {
            "type": "array",
            "markdownDescription": "List of protected branches. By default, a prompt is shown before changes are committed to a protected branch. The prompt can be controlled using the `#git.branchProtectionPrompt#`  setting.",
            "items": {
                "type": "string"
            },
            "default": [],
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "git.branchProtectionPrompt": {
            "type": "string",
            "description": "Controls whether a prompt is being shown before changes are committed to a protected branch.",
            "enum": [
                "alwaysCommit",
                "alwaysCommitToNewBranch",
                "alwaysPrompt"
            ],
            "enumDescriptions": [
                "Always commit changes to the protected branch.",
                "Always commit changes to a new branch.",
                "Always prompt before changes are committed to a protected branch."
            ],
            "default": "alwaysPrompt",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "alwaysPrompt",
            "restricted": false
        },
        "git.branchRandomName.enable": {
            "type": "boolean",
            "description": "Controls whether a random name is generated when creating a new branch.",
            "default": false,
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.branchRandomName.dictionary": {
            "type": "array",
            "markdownDescription": "List of dictionaries used for the randomly generated branch name. Each value represents the dictionary used to generate the segment of the branch name. Supported dictionaries: `adjectives`, `animals`, `colors` and `numbers`.",
            "items": {
                "type": "string",
                "enum": [
                    "adjectives",
                    "animals",
                    "colors",
                    "numbers"
                ],
                "enumDescriptions": [
                    "A random adjective",
                    "A random animal name",
                    "A random color name",
                    "A random number between 100 and 999"
                ]
            },
            "minItems": 1,
            "maxItems": 5,
            "default": [
                "adjectives",
                "animals"
            ],
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [
                "adjectives",
                "animals"
            ],
            "restricted": false
        },
        "git.countBadge": {
            "type": "string",
            "enum": [
                "all",
                "tracked",
                "off"
            ],
            "enumDescriptions": [
                "Count all changes.",
                "Count only tracked changes.",
                "Turn off counter."
            ],
            "description": "Controls the Git count badge.",
            "default": "all",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "all",
            "restricted": false
        },
        "git.verboseCommit": {
            "type": "boolean",
            "scope": 4,
            "markdownDescription": "Enable verbose output when `#git.useEditorAsCommitInput#` is enabled.",
            "default": false,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.enableSmartCommit": {
            "type": "boolean",
            "scope": 4,
            "description": "Commit all changes when there are no staged changes.",
            "default": false,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.smartCommitChanges": {
            "type": "string",
            "enum": [
                "all",
                "tracked"
            ],
            "enumDescriptions": [
                "Automatically stage all changes.",
                "Automatically stage tracked changes only."
            ],
            "scope": 4,
            "description": "Control which changes are automatically staged by Smart Commit.",
            "default": "all",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "all",
            "restricted": false
        },
        "git.suggestSmartCommit": {
            "type": "boolean",
            "scope": 4,
            "description": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
            "default": true,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.enableCommitSigning": {
            "type": "boolean",
            "scope": 4,
            "description": "Enables commit signing with GPG or X.509.",
            "default": false,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.confirmEmptyCommits": {
            "type": "boolean",
            "scope": 4,
            "description": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
            "default": true,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.enableStatusBarSync": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether the Git Sync command appears in the status bar.",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.followTagsWhenSync": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Push all annotated tags when running the sync command.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.promptToSaveFilesBeforeStash": {
            "type": "string",
            "enum": [
                "always",
                "staged",
                "never"
            ],
            "enumDescriptions": [
                "Check for any unsaved files.",
                "Check only for unsaved staged files.",
                "Disable this check."
            ],
            "scope": 4,
            "default": "always",
            "description": "Controls whether Git should check for unsaved files before stashing changes.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "always",
            "restricted": false
        },
        "git.promptToSaveFilesBeforeCommit": {
            "type": "string",
            "enum": [
                "always",
                "staged",
                "never"
            ],
            "enumDescriptions": [
                "Check for any unsaved files.",
                "Check only for unsaved staged files.",
                "Disable this check."
            ],
            "scope": 4,
            "default": "always",
            "description": "Controls whether Git should check for unsaved files before committing.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "always",
            "restricted": false
        },
        "git.postCommitCommand": {
            "type": "string",
            "enum": [
                "none",
                "push",
                "sync"
            ],
            "enumDescriptions": [
                "Don't run any command after a commit.",
                "Run 'git push' after a successful commit.",
                "Run 'git pull' and 'git push' after a successful commit."
            ],
            "markdownDescription": "Run a git command after a successful commit.",
            "scope": 4,
            "default": "none",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "git.rememberPostCommitCommand": {
            "type": "boolean",
            "description": "Remember the last git command that ran after a commit.",
            "scope": 4,
            "default": false,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.detectSubmodules": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether to automatically detect git submodules.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.detectSubmodulesLimit": {
            "type": "number",
            "scope": 4,
            "default": 10,
            "description": "Controls the limit of git submodules detected.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 10,
            "restricted": false
        },
        "git.alwaysShowStagedChangesResourceGroup": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Always show the Staged Changes resource group.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.alwaysSignOff": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Controls the signoff flag for all commits.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.ignoreSubmodules": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Ignore modifications to submodules in the file tree.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.scanRepositories": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "scope": 4,
            "description": "List of paths to search for git repositories in.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "git.showProgress": {
            "type": "boolean",
            "description": "Controls whether git actions should show progress.",
            "default": true,
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.rebaseWhenSync": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Force git to use rebase when running the sync command.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.pullBeforeCheckout": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Controls whether a branch that does not have outgoing commits is fast-forwarded before it is checked out.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.fetchOnPull": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.pruneOnFetch": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Prune when fetching.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.pullTags": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Fetch all tags when pulling.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.autoStash": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Stash any changes before pulling and restore them after successful pull.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.closeDiffOnOperation": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.openDiffOnClick": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.supportCancellation": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.untrackedChanges": {
            "type": "string",
            "enum": [
                "mixed",
                "separate",
                "hidden"
            ],
            "enumDescriptions": [
                "All changes, tracked and untracked, appear together and behave equally.",
                "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
                "Untracked changes are hidden and excluded from several actions."
            ],
            "default": "mixed",
            "description": "Controls how untracked changes behave.",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "mixed",
            "restricted": false
        },
        "git.requireGitUserConfig": {
            "type": "boolean",
            "description": "Controls whether to require explicit Git user configuration or allow Git to guess if missing.",
            "default": true,
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.showCommitInput": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether to show the commit input in the Git source control panel.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.useCommitInputAsStashMessage": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Controls whether to use the message from the commit input box as the default stash message.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "git.showActionButton": {
            "type": "object",
            "additionalProperties": false,
            "description": "Controls whether an action button is shown in the Source Control view.",
            "properties": {
                "commit": {
                    "type": "boolean",
                    "description": "Show an action button to commit changes when the local branch has modified files ready to be committed."
                },
                "publish": {
                    "type": "boolean",
                    "description": "Show an action button to publish the local branch when it does not have a tracking remote branch."
                },
                "sync": {
                    "type": "boolean",
                    "description": "Show an action button to synchronize changes when the local branch is either ahead or behind the remote branch."
                }
            },
            "default": {
                "commit": true,
                "publish": true,
                "sync": true
            },
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": {
                "commit": true,
                "publish": true,
                "sync": true
            },
            "restricted": false
        },
        "git.statusLimit": {
            "type": "number",
            "scope": 4,
            "default": 10000,
            "description": "Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 10000,
            "restricted": false
        },
        "git.repositoryScanIgnoredFolders": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "node_modules"
            ],
            "scope": 4,
            "markdownDescription": "List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": [
                "node_modules"
            ],
            "restricted": false
        },
        "git.repositoryScanMaxDepth": {
            "type": "number",
            "scope": 4,
            "default": 1,
            "markdownDescription": "Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit.",
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 1,
            "restricted": false
        },
        "git.optimisticUpdate": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether to optimistically update the state of the Source Control view after running git commands.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "git.openRepositoryInParentFolders": {
            "type": "string",
            "enum": [
                "always",
                "never",
                "prompt"
            ],
            "enumDescriptions": [
                "Always open a repository in parent folders of workspaces or open files.",
                "Never open a repository in parent folders of workspaces or open files.",
                "Prompt before opening a repository the parent folders of workspaces or open files."
            ],
            "default": "prompt",
            "markdownDescription": "Control whether a repository in parent folders of workspaces or open files should be opened.",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "git.similarityThreshold": {
            "type": "number",
            "default": 50,
            "minimum": 0,
            "maximum": 100,
            "markdownDescription": "Controls the threshold of the similarity index (i.e. amount of additions/deletions compared to the file's size) for changes in a pair of added/deleted files to be considered a rename. **Note:** Requires git version `2.18.0` or later.",
            "scope": 4,
            "source": {
                "id": "vscode.git",
                "displayName": "Git"
            },
            "defaultDefaultValue": 50,
            "restricted": false
        },
        "github.branchProtection": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether to query repository rules for GitHub repositories",
            "source": {
                "id": "vscode.github",
                "displayName": "GitHub"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "github.gitAuthentication": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether to enable automatic GitHub authentication for git commands within VS Code.",
            "source": {
                "id": "vscode.github",
                "displayName": "GitHub"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.completion.attributeDefaultValue": {
            "type": "string",
            "scope": 4,
            "enum": [
                "doublequotes",
                "singlequotes",
                "empty"
            ],
            "enumDescriptions": [
                "Attribute value is set to \"\".",
                "Attribute value is set to ''.",
                "Attribute value is not set."
            ],
            "default": "doublequotes",
            "markdownDescription": "Controls the default value for attributes when completion is accepted.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "doublequotes",
            "restricted": false
        },
        "html.customData": {
            "type": "array",
            "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
            "default": [],
            "items": {
                "type": "string"
            },
            "scope": 4,
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "html.format.wrapLineLength": {
            "type": "integer",
            "scope": 4,
            "default": 120,
            "description": "Maximum amount of characters per line (0 = disable).",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": 120,
            "restricted": false
        },
        "html.format.unformatted": {
            "type": [
                "string",
                "null"
            ],
            "scope": 4,
            "default": "wbr",
            "markdownDescription": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "wbr",
            "restricted": false
        },
        "html.format.contentUnformatted": {
            "type": [
                "string",
                "null"
            ],
            "scope": 4,
            "default": "pre,code,textarea",
            "markdownDescription": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "pre,code,textarea",
            "restricted": false
        },
        "html.format.indentInnerHtml": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "markdownDescription": "Indent `<head>` and `<body>` sections.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "html.format.preserveNewLines": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.format.maxPreserveNewLines": {
            "type": [
                "number",
                "null"
            ],
            "scope": 4,
            "default": null,
            "markdownDescription": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "html.format.indentHandlebars": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "markdownDescription": "Format and indent `{{#foo}}` and `{{/foo}}`.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "html.format.extraLiners": {
            "type": [
                "string",
                "null"
            ],
            "scope": 4,
            "default": "head, body, /html",
            "markdownDescription": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "head, body, /html",
            "restricted": false
        },
        "html.format.wrapAttributes": {
            "type": "string",
            "scope": 4,
            "default": "auto",
            "enum": [
                "auto",
                "force",
                "force-aligned",
                "force-expand-multiline",
                "aligned-multiple",
                "preserve",
                "preserve-aligned"
            ],
            "enumDescriptions": [
                "Wrap attributes only when line length is exceeded.",
                "Wrap each attribute except first.",
                "Wrap each attribute except first and keep aligned.",
                "Wrap each attribute.",
                "Wrap when line length is exceeded, align attributes vertically.",
                "Preserve wrapping of attributes.",
                "Preserve wrapping of attributes but align."
            ],
            "description": "Wrap attributes.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "html.format.wrapAttributesIndentSize": {
            "type": [
                "number",
                "null"
            ],
            "scope": 4,
            "default": null,
            "markdownDescription": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to `aligned`.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "html.format.templating": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Honor django, erb, handlebars and php templating language tags.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "html.format.unformattedContentDelimiter": {
            "type": "string",
            "scope": 4,
            "default": "",
            "markdownDescription": "Keep text content together between this string.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "html.suggest.html5": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.validate.scripts": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether the built-in HTML language support validates embedded scripts.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.validate.styles": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Controls whether the built-in HTML language support validates embedded styles.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.autoCreateQuotes": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.autoClosingTags": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Enable/disable autoclosing of HTML tags.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.hover.documentation": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show tag and attribute documentation in hover.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.hover.references": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Show references to MDN in hover.",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "html.mirrorCursorOnMatchingTag": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Enable/disable mirroring cursor on matching HTML tag.",
            "deprecationMessage": "Deprecated in favor of `editor.linkedEditing`",
            "source": {
                "id": "vscode.html-language-features",
                "displayName": "HTML Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "ipynb.pasteImagesAsAttachments.enabled": {
            "type": "boolean",
            "scope": 4,
            "markdownDescription": "Enable/disable pasting of images into Markdown cells in ipynb notebook files. Pasted images are inserted as attachments to the cell.",
            "default": true,
            "source": {
                "id": "vscode.ipynb",
                "displayName": ".ipynb Support"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "json.schemas": {
            "type": "array",
            "scope": 4,
            "description": "Associate schemas to JSON files in the current project.",
            "items": {
                "type": "object",
                "default": {
                    "fileMatch": [
                        "/myfile"
                    ],
                    "url": "schemaURL"
                },
                "properties": {
                    "url": {
                        "type": "string",
                        "default": "/user.schema.json",
                        "description": "A URL or absolute file path to a schema. Can be a relative path in workspace and workspace folder settings."
                    },
                    "fileMatch": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "MyFile.json",
                            "description": "A file pattern that can contain '*' and '**' to match against when resolving JSON files to schemas. When beginning with '!', it defines an exclusion pattern."
                        },
                        "minItems": 1,
                        "description": "An array of file patterns to match against when resolving JSON files to schemas. `*` and '**' can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern."
                    },
                    "schema": {
                        "$ref": "http://json-schema.org/draft-07/schema#",
                        "description": "The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."
                    }
                }
            },
            "source": {
                "id": "vscode.json-language-features",
                "displayName": "JSON Language Features"
            },
            "default": [],
            "restricted": false
        },
        "markdown.styles": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": [],
            "restricted": true
        },
        "markdown.preview.breaks": {
            "type": "boolean",
            "default": false,
            "description": "Sets how line-breaks are rendered in the Markdown preview. Setting it to 'true' creates a <br> for newlines inside paragraphs.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "markdown.preview.linkify": {
            "type": "boolean",
            "default": true,
            "description": "Convert URL-like text to links in the Markdown preview.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.preview.typographer": {
            "type": "boolean",
            "default": false,
            "description": "Enable some language-neutral replacement and quotes beautification in the Markdown preview.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "markdown.preview.fontFamily": {
            "type": "string",
            "default": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
            "description": "Controls the font family used in the Markdown preview.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
            "restricted": false
        },
        "markdown.preview.fontSize": {
            "type": "number",
            "default": 14,
            "description": "Controls the font size in pixels used in the Markdown preview.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": 14,
            "restricted": false
        },
        "markdown.preview.lineHeight": {
            "type": "number",
            "default": 1.6,
            "description": "Controls the line height used in the Markdown preview. This number is relative to the font size.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": 1.6,
            "restricted": false
        },
        "markdown.preview.scrollPreviewWithEditor": {
            "type": "boolean",
            "default": true,
            "description": "When a Markdown editor is scrolled, update the view of the preview.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.preview.markEditorSelection": {
            "type": "boolean",
            "default": true,
            "description": "Mark the current editor selection in the Markdown preview.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.preview.scrollEditorWithPreview": {
            "type": "boolean",
            "default": true,
            "description": "When a Markdown preview is scrolled, update the view of the editor.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.preview.doubleClickToSwitchToEditor": {
            "type": "boolean",
            "default": true,
            "description": "Double-click in the Markdown preview to switch to the editor.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.preview.openMarkdownLinks": {
            "type": "string",
            "default": "inPreview",
            "description": "Controls how links to other Markdown files in the Markdown preview should be opened.",
            "scope": 4,
            "enum": [
                "inPreview",
                "inEditor"
            ],
            "enumDescriptions": [
                "Try to open links in the Markdown preview.",
                "Try to open links in the editor."
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "inPreview",
            "restricted": false
        },
        "markdown.links.openLocation": {
            "type": "string",
            "default": "currentGroup",
            "description": "Controls where links in Markdown files should be opened.",
            "scope": 4,
            "enum": [
                "currentGroup",
                "beside"
            ],
            "enumDescriptions": [
                "Open links in the active editor group.",
                "Open links beside the active editor."
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "currentGroup",
            "restricted": false
        },
        "markdown.suggest.paths.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable path suggestions while writing links in Markdown files.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.suggest.paths.includeWorkspaceHeaderCompletions": {
            "type": "string",
            "default": "onDoubleHash",
            "scope": 4,
            "markdownDescription": "Enable suggestions for headers in other Markdown files in the current workspace. Accepting one of these suggestions inserts the full path to header in that file, for example: `[link text](/path/to/file.md#header)`.",
            "enum": [
                "never",
                "onDoubleHash",
                "onSingleOrDoubleHash"
            ],
            "markdownEnumDescriptions": [
                "Disable workspace header suggestions.",
                "Enable workspace header suggestions after typing `##` in a path, for example: `[link text](##`.",
                "Enable workspace header suggestions after typing either `##` or `#` in a path, for example: `[link text](#` or `[link text](##`."
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "onDoubleHash",
            "restricted": false
        },
        "markdown.editor.drop.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable dropping files into a Markdown editor while holding Shift. Requires enabling `#editor.dropIntoEditor.enabled#`.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.editor.filePaste.enabled": {
            "type": "boolean",
            "scope": 4,
            "markdownDescription": "Enable pasting files into a Markdown editor to create Markdown links. Requires enabling `#editor.pasteAs.enabled#`.",
            "default": true,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "markdown.editor.pasteUrlAsFormattedLink.enabled": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Controls how a Markdown link is created when a URL is pasted into the Markdown editor. Requires enabling `#editor.pasteAs.enabled#`.",
            "default": "never",
            "enum": [
                "always",
                "smart",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Always creates a Markdown link when a URL is pasted into the Markdown editor.",
                "Smartly avoids creating a Markdown link in specific cases, such as within code brackets or inside an existing Markdown link.",
                "Never creates a Markdown link when a URL is pasted into the Markdown editor."
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "markdown.validate.enabled": {
            "type": "boolean",
            "scope": 4,
            "description": "Enable all error reporting in Markdown files.",
            "default": false,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "markdown.validate.referenceLinks.enabled": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Validate reference links in Markdown files, for example: `[link][ref]`. Requires enabling `#markdown.validate.enabled#`.",
            "default": "warning",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "markdown.validate.fragmentLinks.enabled": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Validate fragment links to headers in the current Markdown file, for example: `[link](#header)`. Requires enabling `#markdown.validate.enabled#`.",
            "default": "warning",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "markdown.validate.fileLinks.enabled": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Validate links to other files in Markdown files, for example `[link](/path/to/file.md)`. This checks that the target files exists. Requires enabling `#markdown.validate.enabled#`.",
            "default": "warning",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "markdown.validate.fileLinks.markdownFragmentLinks": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Validate the fragment part of links to headers in other files in Markdown files, for example: `[link](/path/to/file.md#header)`. Inherits the setting value from `#markdown.validate.fragmentLinks.enabled#` by default.",
            "default": "inherit",
            "enum": [
                "inherit",
                "ignore",
                "warning",
                "error"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "inherit",
            "restricted": false
        },
        "markdown.validate.ignoredLinks": {
            "type": "array",
            "scope": 4,
            "markdownDescription": "Configure links that should not be validated. For example adding `/about` would not validate the link `[about](/about)`, while the glob `/assets/**/*.svg` would let you skip validation for any link to `.svg` files under the `assets` directory.",
            "items": {
                "type": "string"
            },
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "default": [],
            "restricted": false
        },
        "markdown.validate.unusedLinkDefinitions.enabled": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Validate link definitions that are unused in the current file.",
            "default": "hint",
            "enum": [
                "ignore",
                "hint",
                "warning",
                "error"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "hint",
            "restricted": false
        },
        "markdown.validate.duplicateLinkDefinitions.enabled": {
            "type": "string",
            "scope": 4,
            "markdownDescription": "Validate duplicated definitions in the current file.",
            "default": "warning",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "markdown.occurrencesHighlight.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable highlighting link occurrences in the current document.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-language-features",
                "displayName": "Markdown Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "markdown.math.macros": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "description": "A collection of custom macros. Each macro is a key-value pair where the key is a new command name and the value is the expansion of the macro.",
            "scope": 4,
            "source": {
                "id": "vscode.markdown-math",
                "displayName": "Markdown Math"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "npm.autoDetect": {
            "type": "string",
            "enum": [
                "off",
                "on"
            ],
            "default": "on",
            "scope": 4,
            "description": "Controls whether npm scripts should be automatically detected.",
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": "on",
            "restricted": false
        },
        "npm.runSilent": {
            "type": "boolean",
            "default": false,
            "scope": 4,
            "markdownDescription": "Run npm commands with the `--silent` option.",
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "npm.packageManager": {
            "scope": 4,
            "type": "string",
            "enum": [
                "auto",
                "npm",
                "yarn",
                "pnpm"
            ],
            "enumDescriptions": [
                "Auto-detect which package manager to use for running scripts based on lock files and installed package managers.",
                "Use npm as the package manager for running scripts.",
                "Use yarn as the package manager for running scripts.",
                "Use pnpm as the package manager for running scripts."
            ],
            "default": "auto",
            "description": "The package manager used to run scripts.",
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "npm.exclude": {
            "type": [
                "string",
                "array"
            ],
            "items": {
                "type": "string"
            },
            "description": "Configure glob patterns for folders that should be excluded from automatic script detection.",
            "scope": 4,
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "default": "",
            "restricted": false
        },
        "npm.enableScriptExplorer": {
            "type": "boolean",
            "default": false,
            "scope": 4,
            "deprecationMessage": "The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.",
            "description": "Enable an explorer view for npm scripts when there is no top-level 'package.json' file.",
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "npm.enableRunFromFolder": {
            "type": "boolean",
            "default": false,
            "scope": 4,
            "description": "Enable running npm scripts contained in a folder from the Explorer context menu.",
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "npm.scriptExplorerExclude": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",
            "scope": 4,
            "default": [],
            "source": {
                "id": "vscode.npm",
                "displayName": "NPM support for VS Code"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "typescript.experimental.aiCodeActions": {
            "type": "object",
            "default": {},
            "description": "Enable/disable AI-assisted code actions. Requires an extension providing AI chat functionality.",
            "scope": 4,
            "properties": {
                "classIncorrectlyImplementsInterface": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Class Incorrectly Implements Interface quickfix. Requires an extension providing AI chat functionality."
                },
                "classDoesntImplementInheritedAbstractMember": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Class Doesn't Implement Inherited Abstract Member quickfix. Requires an extension providing AI chat functionality."
                },
                "missingFunctionDeclaration": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Missing Function Declaration quickfix. Requires an extension providing AI chat functionality."
                },
                "inferAndAddTypes": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Infer and Add Types refactor. Requires an extension providing AI chat functionality."
                },
                "addNameToNamelessParameter": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Add Name to Nameless Parameter quickfix. Requires an extension providing AI chat functionality."
                },
                "extractConstant": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Extract Constant refactor. Requires an extension providing AI chat functionality."
                },
                "extractFunction": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Extract Function refactor. Requires an extension providing AI chat functionality."
                },
                "extractType": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Extract Type refactor. Requires an extension providing AI chat functionality."
                },
                "extractInterface": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable/disable AI assistance for Extract Interface refactor. Requires an extension providing AI chat functionality."
                }
            },
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "javascript.suggest.completeFunctionCalls": {
            "type": "boolean",
            "default": false,
            "description": "Complete functions with their parameter signature.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.suggest.completeFunctionCalls": {
            "type": "boolean",
            "default": false,
            "description": "Complete functions with their parameter signature.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.suggest.includeAutomaticOptionalChainCompletions": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.includeAutomaticOptionalChainCompletions": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.inlayHints.parameterNames.enabled": {
            "type": "string",
            "enum": [
                "none",
                "literals",
                "all"
            ],
            "enumDescriptions": [
                "Disable parameter name hints.",
                "Enable parameter name hints only for literal arguments.",
                "Enable parameter name hints for literal and non-literal arguments."
            ],
            "default": "none",
            "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.inlayHints.parameterTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.inlayHints.variableTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Suppress type hints on variables whose name is identical to the type name. Requires using TypeScript 4.8+ in the workspace.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.inlayHints.propertyDeclarationTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.inlayHints.functionLikeReturnTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.inlayHints.enumMemberValues.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.inlayHints.parameterNames.enabled": {
            "type": "string",
            "enum": [
                "none",
                "literals",
                "all"
            ],
            "enumDescriptions": [
                "Disable parameter name hints.",
                "Enable parameter name hints only for literal arguments.",
                "Enable parameter name hints for literal and non-literal arguments."
            ],
            "default": "none",
            "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.inlayHints.parameterTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.inlayHints.variableTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Suppress type hints on variables whose name is identical to the type name. Requires using TypeScript 4.8+ in the workspace.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.inlayHints.propertyDeclarationTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.inlayHints.functionLikeReturnTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.inlayHints.enumMemberValues.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.suggest.includeCompletionsForImportStatements": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable auto-import-style completions on partially-typed import statements.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.includeCompletionsForImportStatements": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable auto-import-style completions on partially-typed import statements.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterCommaDelimiter": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after a comma delimiter.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterConstructor": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after the constructor keyword.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterSemicolonInForStatements": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after a semicolon in a for statement.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after a binary operator.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after keywords in a control flow statement.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after function keyword for anonymous functions.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceBeforeFunctionParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling before function argument parentheses.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing non-empty parenthesis.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing non-empty brackets.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after opening and before closing non-empty braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after opening and before closing empty braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing template string braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing JSX expression braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.insertSpaceAfterTypeAssertion": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after type assertions in TypeScript.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.placeOpenBraceOnNewLineForFunctions": {
            "type": "boolean",
            "default": false,
            "description": "Defines whether an open brace is put onto a new line for functions or not.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.placeOpenBraceOnNewLineForControlBlocks": {
            "type": "boolean",
            "default": false,
            "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "typescript.format.semicolons": {
            "type": "string",
            "default": "ignore",
            "description": "Defines handling of optional semicolons.",
            "scope": 4,
            "enum": [
                "ignore",
                "insert",
                "remove"
            ],
            "enumDescriptions": [
                "Don't insert or remove any semicolons.",
                "Insert semicolons at statement ends.",
                "Remove unnecessary semicolons."
            ],
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "typescript.format.indentSwitchCase": {
            "type": "boolean",
            "default": true,
            "description": "Indent case clauses in switch statements. Requires using TypeScript 5.1+ in the workspace.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterCommaDelimiter": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after a comma delimiter.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterConstructor": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after the constructor keyword.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterSemicolonInForStatements": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after a semicolon in a for statement.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after a binary operator.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after keywords in a control flow statement.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after function keyword for anonymous functions.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceBeforeFunctionParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling before function argument parentheses.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing non-empty parenthesis.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing non-empty brackets.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after opening and before closing non-empty braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "Defines space handling after opening and before closing empty braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing template string braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
            "type": "boolean",
            "default": false,
            "description": "Defines space handling after opening and before closing JSX expression braces.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.placeOpenBraceOnNewLineForFunctions": {
            "type": "boolean",
            "default": false,
            "description": "Defines whether an open brace is put onto a new line for functions or not.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.placeOpenBraceOnNewLineForControlBlocks": {
            "type": "boolean",
            "default": false,
            "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "javascript.format.semicolons": {
            "type": "string",
            "default": "ignore",
            "description": "Defines handling of optional semicolons.",
            "scope": 4,
            "enum": [
                "ignore",
                "insert",
                "remove"
            ],
            "enumDescriptions": [
                "Don't insert or remove any semicolons.",
                "Insert semicolons at statement ends.",
                "Remove unnecessary semicolons."
            ],
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "javascript.suggest.names": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggest.paths": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable suggestions for paths in import statements and require calls.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.paths": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable suggestions for paths in import statements and require calls.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggest.autoImports": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable auto import suggestions.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.autoImports": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable auto import suggestions.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggest.completeJSDocs": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable suggestion to complete JSDoc comments.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.completeJSDocs": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable suggestion to complete JSDoc comments.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggest.jsdoc.generateReturns": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable/disable generating `@returns` annotations for JSDoc templates.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.jsdoc.generateReturns": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable/disable generating `@returns` annotations for JSDoc templates.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggestionActions.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggestionActions.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.preferences.quoteStyle": {
            "type": "string",
            "enum": [
                "auto",
                "single",
                "double"
            ],
            "default": "auto",
            "markdownDescription": "Preferred quote style to use for Quick Fixes.",
            "markdownEnumDescriptions": [
                "Infer quote type from existing code",
                "Always use single quotes: `'`",
                "Always use double quotes: `\"`"
            ],
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.preferences.quoteStyle": {
            "type": "string",
            "enum": [
                "auto",
                "single",
                "double"
            ],
            "default": "auto",
            "markdownDescription": "Preferred quote style to use for Quick Fixes.",
            "markdownEnumDescriptions": [
                "Infer quote type from existing code",
                "Always use single quotes: `'`",
                "Always use double quotes: `\"`"
            ],
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "javascript.preferences.importModuleSpecifier": {
            "type": "string",
            "enum": [
                "shortest",
                "relative",
                "non-relative",
                "project-relative"
            ],
            "markdownEnumDescriptions": [
                "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
                "Prefers a relative path to the imported file location.",
                "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
                "Prefers a non-relative import only if the relative import path would leave the package or project directory."
            ],
            "default": "shortest",
            "description": "Preferred path style for auto imports.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "shortest",
            "restricted": false
        },
        "typescript.preferences.importModuleSpecifier": {
            "type": "string",
            "enum": [
                "shortest",
                "relative",
                "non-relative",
                "project-relative"
            ],
            "markdownEnumDescriptions": [
                "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
                "Prefers a relative path to the imported file location.",
                "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
                "Prefers a non-relative import only if the relative import path would leave the package or project directory."
            ],
            "default": "shortest",
            "description": "Preferred path style for auto imports.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "shortest",
            "restricted": false
        },
        "javascript.preferences.importModuleSpecifierEnding": {
            "type": "string",
            "enum": [
                "auto",
                "minimal",
                "index",
                "js"
            ],
            "enumItemLabels": [
                null,
                null,
                null,
                ".js / .ts"
            ],
            "markdownEnumDescriptions": [
                "Use project settings to select a default.",
                "Shorten `./component/index.js` to `./component`.",
                "Shorten `./component/index.js` to `./component/index`.",
                "Do not shorten path endings; include the `.js` or `.ts` extension."
            ],
            "default": "auto",
            "description": "Preferred path ending for auto imports.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.preferences.importModuleSpecifierEnding": {
            "type": "string",
            "enum": [
                "auto",
                "minimal",
                "index",
                "js"
            ],
            "enumItemLabels": [
                null,
                null,
                null,
                ".js / .ts"
            ],
            "markdownEnumDescriptions": [
                "Use project settings to select a default.",
                "Shorten `./component/index.js` to `./component`.",
                "Shorten `./component/index.js` to `./component/index`.",
                "Do not shorten path endings; include the `.js` or `.ts` extension."
            ],
            "default": "auto",
            "description": "Preferred path ending for auto imports.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "javascript.preferences.jsxAttributeCompletionStyle": {
            "type": "string",
            "enum": [
                "auto",
                "braces",
                "none"
            ],
            "markdownEnumDescriptions": [
                "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `javascript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
                "Insert `={}` after attribute names.",
                "Only insert attribute names."
            ],
            "default": "auto",
            "description": "Preferred style for JSX attribute completions.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.preferences.jsxAttributeCompletionStyle": {
            "type": "string",
            "enum": [
                "auto",
                "braces",
                "none"
            ],
            "markdownEnumDescriptions": [
                "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `typescript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
                "Insert `={}` after attribute names.",
                "Only insert attribute names."
            ],
            "default": "auto",
            "description": "Preferred style for JSX attribute completions.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "typescript.preferences.autoImportFileExcludePatterns": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics. Requires using TypeScript 4.8 or newer in the workspace.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "default": [],
            "restricted": false
        },
        "javascript.preferences.autoImportFileExcludePatterns": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "Specify glob patterns of files to exclude from auto imports. Relative paths are resolved relative to the workspace root. Patterns are evaluated using tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude) semantics. Requires using TypeScript 4.8 or newer in the workspace.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "default": [],
            "restricted": false
        },
        "javascript.preferences.renameShorthandProperties": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
            "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.preferences.renameShorthandProperties": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
            "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.preferences.useAliasesForRenames": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.preferences.useAliasesForRenames": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.preferences.renameMatchingJsxTags": {
            "type": "boolean",
            "default": true,
            "description": "When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.preferences.renameMatchingJsxTags": {
            "type": "boolean",
            "default": true,
            "description": "When on a JSX tag, try to rename the matching tag instead of renaming the symbol. Requires using TypeScript 5.1+ in the workspace.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.updateImportsOnFileMove.enabled": {
            "type": "string",
            "enum": [
                "prompt",
                "always",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Prompt on each rename.",
                "Always update paths automatically.",
                "Never rename paths and don't prompt."
            ],
            "default": "prompt",
            "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "javascript.updateImportsOnFileMove.enabled": {
            "type": "string",
            "enum": [
                "prompt",
                "always",
                "never"
            ],
            "markdownEnumDescriptions": [
                "Prompt on each rename.",
                "Always update paths automatically.",
                "Never rename paths and don't prompt."
            ],
            "default": "prompt",
            "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "typescript.autoClosingTags": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable automatic closing of JSX tags.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.autoClosingTags": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable automatic closing of JSX tags.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggest.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled/disable autocomplete suggestions.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enabled/disable autocomplete suggestions.",
            "scope": 5,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "javascript.suggest.classMemberSnippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable snippet completions for class members.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.classMemberSnippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable snippet completions for class members.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "typescript.suggest.objectLiteralMethodSnippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable/disable snippet completions for methods in object literals. Requires using TypeScript 4.7+ in the workspace.",
            "scope": 4,
            "source": {
                "id": "vscode.typescript-language-features",
                "displayName": "TypeScript and JavaScript Language Features"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.editor.enableDrop": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable drag and drop to insert images. Hold down Shift key to drop file into the text editor.",
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.preview.asciidoctorAttributes": {
            "type": "object",
            "default": {},
            "markdownDescription": "Sets Asciidoctor attributes used in the preview. Attributes need to be written as an object of type {string: string}.",
            "order": 1,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "asciidoc.preview.refreshInterval": {
            "type": "number",
            "default": 2000,
            "markdownDescription": "Interval in milliseconds between two consecutive updates of the preview. The value 0 means it will only update the preview on save.",
            "order": 2,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": 2000,
            "restricted": false
        },
        "asciidoc.preview.preservePreviewWhenHidden": {
            "type": "boolean",
            "default": false,
            "description": "Whether to keep the AsciiDoc preview in memory even when it's hidden (such as when switching tabs). If enabled, the preview will reload more quickly when restored from the background at the expense of increased memory usage. This setting only affects a hidden/background AsciiDoc preview; closing the preview will always discard it entirely, regardless of this setting.",
            "order": 3,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "asciidoc.preview.style": {
            "type": "string",
            "default": "",
            "markdownDescription": "An URL or a local path to CSS style sheets to use from the preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the AsciiDoc file. All `\\` need to be written as `\\\\`.",
            "order": 4,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "asciidoc.preview.useEditorStyle": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Uses VS Code editor style instead of the default Asciidoctor style.",
            "order": 5,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.preview.fontFamily": {
            "type": "string",
            "default": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif",
            "markdownDescription": "Controls the font family used in the preview.",
            "order": 6,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif",
            "restricted": false
        },
        "asciidoc.preview.fontSize": {
            "type": "number",
            "default": 14,
            "markdownDescription": "Controls the font size in pixels used in the preview.",
            "order": 7,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": 14,
            "restricted": false
        },
        "asciidoc.preview.lineHeight": {
            "type": "number",
            "default": 1.6,
            "markdownDescription": "Controls the line height used in the preview. This number is relative to the font size.",
            "order": 8,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": 1.6,
            "restricted": false
        },
        "asciidoc.preview.scrollPreviewWithEditor": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When the editor is scrolled, updates the view of the preview.",
            "order": 9,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.preview.scrollEditorWithPreview": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "When the preview is scrolled, updates the view of the editor.",
            "order": 10,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.preview.markEditorSelection": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Marks the current editor selection in the preview.",
            "order": 11,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.preview.doubleClickToSwitchToEditor": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Double click in the preview to switch to the editor.",
            "order": 12,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "asciidoc.preview.openLinksToAsciidocFiles": {
            "type": "string",
            "default": "inPreview",
            "markdownDescription": "Controls how links to other AsciiDoc files in the preview should be opened.",
            "enum": [
                "inPreview",
                "inEditor"
            ],
            "enumDescriptions": [
                "Try to open links in the editor",
                "Try to open links in the preview"
            ],
            "order": 13,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "inPreview",
            "restricted": false
        },
        "asciidoc.preview.openAsciiDocLinks": {
            "type": "string",
            "default": "inPreview",
            "markdownDescription": "**Deprecated**: How should clicking on links to AsciiDoc files be handled in the preview.",
            "markdownDeprecationMessage": "This setting has been replaced by `#asciidoc.preview.openLinksToAsciidocFiles#` and no longer has any effect.",
            "enum": [
                "inPreview",
                "inEditor"
            ],
            "enumDescriptions": [
                "Try to open links in the preview",
                "Try to open links in the editor"
            ],
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "inPreview",
            "restricted": false,
            "deprecationMessage": "This setting has been replaced by `#asciidoc.preview.openLinksToAsciidocFiles#` and no longer has any effect."
        },
        "asciidoc.preview.templates": {
            "type": "array",
            "default": "",
            "markdownDescription": "List of local paths to custom templates to use from the preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the AsciiDoc file. All `\\` need to be written as `\\\\`.",
            "items": {
                "type": "string"
            },
            "uniqueItems": false,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "asciidoc.use_kroki": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "**Deprecated:** Enables Kroki integration to generate diagrams.",
            "markdownDeprecationMessage": "This setting has been replaced by `#asciidoc.extensions.enableKroki#` and no longer has any effect.",
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "This setting has been replaced by `#asciidoc.extensions.enableKroki#` and no longer has any effect."
        },
        "asciidoc.useWorkspaceRoot": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "**Deprecated:** When in a workspace, uses the workspace root path as the base directory.",
            "markdownDeprecationMessage": "This setting has been replaced by `#asciidoc.useWorkspaceRootAsBaseDirectory#` and no longer has any effect.",
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "This setting has been replaced by `#asciidoc.useWorkspaceRootAsBaseDirectory#` and no longer has any effect."
        },
        "asciidoc.wkhtmltopdf_path": {
            "type": "string",
            "default": "",
            "markdownDescription": "**Deprecated**: Full path for the `wkhtmltopdf` binary/executable.",
            "markdownDeprecationMessage": "This setting has been replaced by `#asciidoc.pdf.wkhtmltopdfCommandPath#` + `#asciidoc.pdf.wkhtmltopdfCommandArgs#` and no longer has any effect.",
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "",
            "restricted": false,
            "deprecationMessage": "This setting has been replaced by `#asciidoc.pdf.wkhtmltopdfCommandPath#` + `#asciidoc.pdf.wkhtmltopdfCommandArgs#` and no longer has any effect."
        },
        "asciidoc.asciidoctorpdf_command": {
            "type": "string",
            "default": "asciidoctor-pdf",
            "markdownDescription": "**Deprecated**: Full path for the `asciidoctor-pdf` binary/executable.",
            "markdownDeprecationMessage": "This setting has been replaced by `#asciidoc.pdf.asciidoctorPdfCommandPath#` + `#asciidoc.pdf.asciidoctorPdfCommandArgs#` and no longer has any effect.",
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "asciidoctor-pdf",
            "restricted": false,
            "deprecationMessage": "This setting has been replaced by `#asciidoc.pdf.asciidoctorPdfCommandPath#` + `#asciidoc.pdf.asciidoctorPdfCommandArgs#` and no longer has any effect."
        },
        "asciidoc.use_asciidoctorpdf": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "**Deprecated**: Use `asciidoctor-pdf` instead of the integrated renderer.",
            "markdownDeprecationMessage": "This setting has been replaced by `#asciidoc.pdf.engine#` and no longer has any effect.",
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "This setting has been replaced by `#asciidoc.pdf.engine#` and no longer has any effect."
        },
        "asciidoc.pdf.engine": {
            "type": "string",
            "default": "asciidoctor-pdf",
            "markdownDescription": "Controls the PDF engine used to export as PDF.",
            "enum": [
                "asciidoctor-pdf",
                "wkhtmltopdf"
            ],
            "enumDescriptions": [
                "asciidoctor-pdf CLI",
                "wkhtmltopdf CLI"
            ],
            "order": 1,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "asciidoctor-pdf",
            "restricted": false
        },
        "asciidoc.pdf.asciidoctorPdfCommandPath": {
            "type": "string",
            "default": "",
            "markdownDescription": "External `asciidoctor-pdf` command to execute. It accepts a full path to the binary, for instance: `/path/to/asciidoctor-pdf`. If the value is empty, use `asciidoctor-pdf` or, if not available, `bundle exec asciidoctor-pdf` (from the extension global storage).",
            "order": 2,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "asciidoc.pdf.asciidoctorPdfCommandArgs": {
            "type": "array",
            "markdownDescription": "List of arguments, for instance: `-a`, `pdf-themesdir=resources/themes`, `-a`, `pdf-theme=basic`. Please note that the argument key and value should be added separately (i.e., two items). By default, it passes the following arguments: `--quiet` and `--base-dir` with the full directory path to the AsciiDoc document.",
            "items": {
                "type": "string"
            },
            "uniqueItems": false,
            "order": 3,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "default": [],
            "restricted": false
        },
        "asciidoc.pdf.wkhtmltopdfCommandPath": {
            "type": "string",
            "markdownDescription": "External `wkhtmltopdf` command to execute. It accepts a full path to the binary, for instance: `/path/to/wkhtmltopdf`. If the value is empty, use either `wkhtmltopdf` on Linux/macOS or `wkhtmltopdf.exe` on Windows.",
            "order": 4,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "default": "",
            "restricted": false
        },
        "asciidoc.pdf.wkhtmltopdfCommandArgs": {
            "type": "array",
            "markdownDescription": "List of arguments, for instance: `--orientation`, `Landscape`. Please note that the argument key and value should be added separately (i.e., two items). By default, it passes the following arguments: `--enable-local-file-access`, `--encoding`, `utf-8`, `--javascript-delay`, `1000`, `--footer-center` (if enabled) and `cover` (if it has a cover page).",
            "items": {
                "type": "string"
            },
            "uniqueItems": false,
            "order": 5,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "default": [],
            "restricted": false
        },
        "asciidoc.extensions.enableKroki": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enables Kroki extension to generate diagrams.",
            "order": 1,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "asciidoc.useWorkspaceRootAsBaseDirectory": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When in a workspace, uses the workspace root path as the base directory. It applies in the preview and when exporting to PDF.",
            "order": 1,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "asciidoc.debug.enableErrorDiagnostics": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "**Deprecated**: Provides error diagnostics.",
            "order": 2,
            "scope": 4,
            "source": {
                "id": "asciidoctor.asciidoctor-vscode",
                "displayName": "AsciiDoc"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.suggestions": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable autocomplete suggestions.",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.hovers": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable hovers.",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.codeActions": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable code actions.",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.colorDecorators": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.validate": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "tailwindCSS.lint.cssConflict": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "Class names on the same HTML element which apply the same CSS property or properties",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "tailwindCSS.lint.invalidApply": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "markdownDescription": "Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "tailwindCSS.lint.invalidScreen": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "markdownDescription": "Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "tailwindCSS.lint.invalidVariant": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "markdownDescription": "Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "tailwindCSS.lint.invalidConfigPath": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "markdownDescription": "Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "tailwindCSS.lint.invalidTailwindDirective": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "error",
            "markdownDescription": "Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "error",
            "restricted": false
        },
        "tailwindCSS.lint.recommendedVariantOrder": {
            "type": "string",
            "enum": [
                "ignore",
                "warning",
                "error"
            ],
            "default": "warning",
            "markdownDescription": "Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "defaultDefaultValue": "warning",
            "restricted": false
        },
        "tailwindCSS.experimental.classRegex": {
            "type": "array",
            "scope": 5,
            "source": {
                "id": "bradlc.vscode-tailwindcss",
                "displayName": "Tailwind CSS IntelliSense"
            },
            "default": [],
            "restricted": false
        },
        "eslint.enable": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "description": "Controls whether eslint is enabled or not.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "eslint.packageManager": {
            "scope": 4,
            "type": "string",
            "enum": [
                "npm",
                "yarn",
                "pnpm"
            ],
            "default": "npm",
            "description": "The package manager you use to install node modules.",
            "deprecationMessage": "The setting is deprecated. The Package Manager is automatically detected now.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": "npm",
            "restricted": false
        },
        "eslint.problems.shortenToSingleLine": {
            "type": "boolean",
            "default": false,
            "description": "Shortens the text spans of underlined problems to their first related line.",
            "scope": 4,
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.nodeEnv": {
            "scope": 4,
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "The value of `NODE_ENV` to use when running eslint tasks.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "eslint.options": {
            "scope": 4,
            "type": "object",
            "default": {},
            "markdownDescription": "The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class).",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "eslint.run": {
            "scope": 4,
            "type": "string",
            "enum": [
                "onSave",
                "onType"
            ],
            "default": "onType",
            "description": "Run the linter on save (onSave) or on type (onType)",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": "onType",
            "restricted": false
        },
        "eslint.autoFixOnSave": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Turns auto fix on save on or off.",
            "deprecationMessage": "The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.quiet": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Turns on quiet mode, which ignores warnings.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.onIgnoredFiles": {
            "scope": 4,
            "type": "string",
            "enum": [
                "warn",
                "off"
            ],
            "default": "off",
            "description": "Whether ESLint should issue a warning on ignored files.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "eslint.useESLintClass": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.experimental.useFlatConfig": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Enables support of experimental Flat Config (aka eslint.config.js, supported by ESLint version 8.21 or later).",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.workingDirectories": {
            "scope": 4,
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "string",
                                "enum": [
                                    "auto",
                                    "location"
                                ],
                                "default": "location"
                            }
                        },
                        "required": [
                            "mode"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "directory": {
                                "type": "string",
                                "description": "The working directory to use if a file's path starts with this directory."
                            },
                            "changeProcessCWD": {
                                "type": "boolean",
                                "description": "Whether the process's cwd should be changed as well."
                            }
                        },
                        "deprecationMessage": "Use the new !cwd form.",
                        "required": [
                            "directory"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "directory": {
                                "type": "string",
                                "description": "The working directory to use if a file's path starts with this directory."
                            },
                            "!cwd": {
                                "type": "boolean",
                                "description": "Set to true if ESLint shouldn't change the working directory."
                            }
                        },
                        "required": [
                            "directory"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "pattern": {
                                "type": "string",
                                "description": "A glob pattern to match a working directory."
                            },
                            "!cwd": {
                                "type": "boolean",
                                "description": "Set to true if ESLint shouldn't change the working directory."
                            }
                        },
                        "required": [
                            "pattern"
                        ]
                    }
                ]
            },
            "markdownDescription": "Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "default": [],
            "restricted": false
        },
        "eslint.validate": {
            "scope": 4,
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "language": {
                                "type": "string",
                                "description": "The language id to be validated by ESLint."
                            },
                            "autoFix": {
                                "type": "boolean",
                                "description": "Whether auto fixes are provided for the language."
                            }
                        },
                        "deprecationMessage": "Auto Fix is enabled by default. Use the single string form."
                    }
                ]
            },
            "description": "An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "default": [],
            "restricted": false
        },
        "eslint.ignoreUntitled": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "If true, untitled files won't be validated by ESLint.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.probe": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "javascript",
                "javascriptreact",
                "typescript",
                "typescriptreact",
                "html",
                "vue",
                "markdown"
            ],
            "description": "An array of language ids for which the extension should probe if support is installed.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": [
                "javascript",
                "javascriptreact",
                "typescript",
                "typescriptreact",
                "html",
                "vue",
                "markdown"
            ],
            "restricted": false
        },
        "eslint.provideLintTask": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "deprecationMessage": "This option is deprecated. Use eslint.lintTask.enable instead.",
            "description": "Controls whether a task for linting the whole workspace will be available.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.lintTask.enable": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Controls whether a task for linting the whole workspace will be available.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.lintTask.options": {
            "scope": 4,
            "type": "string",
            "default": ".",
            "markdownDescription": "Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface).",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": ".",
            "restricted": false
        },
        "eslint.codeAction.disableRuleComment": {
            "scope": 4,
            "type": "object",
            "default": {
                "enable": true,
                "location": "separateLine",
                "commentStyle": "line"
            },
            "properties": {
                "enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show the disable code actions."
                },
                "location": {
                    "type": "string",
                    "enum": [
                        "separateLine",
                        "sameLine"
                    ],
                    "default": "separateLine",
                    "description": "Configure the disable rule code action to insert the comment on the same line or a new line."
                },
                "commentStyle": {
                    "type": "string",
                    "enum": [
                        "line",
                        "block"
                    ],
                    "default": "line",
                    "definition": "The comment style to use when disabling a rule on a specific line."
                }
            },
            "additionalProperties": false,
            "markdownDescription": "Show disable lint rule in the quick fix menu.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": {
                "enable": true,
                "location": "separateLine",
                "commentStyle": "line"
            },
            "restricted": false
        },
        "eslint.codeAction.showDocumentation": {
            "scope": 4,
            "type": "object",
            "default": {
                "enable": true
            },
            "properties": {
                "enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show the documentation code actions."
                }
            },
            "additionalProperties": false,
            "markdownDescription": "Show open lint rule documentation web page in the quick fix menu.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": {
                "enable": true
            },
            "restricted": false
        },
        "eslint.codeActionsOnSave.mode": {
            "scope": 4,
            "type": "string",
            "enum": [
                "all",
                "problems"
            ],
            "enumDescriptions": [
                "Fixes all possible problems in the file. This option might take some time.",
                "Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."
            ],
            "default": "all",
            "markdownDescription": "Specifies the code action mode. Possible values are 'all' and 'problems'.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": "all",
            "restricted": false
        },
        "eslint.codeActionsOnSave.rules": {
            "scope": 4,
            "anyOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "null"
                }
            ],
            "default": null,
            "markdownDescription": "The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "eslint.format.enable": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Enables ESLint as a formatter.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "eslint.rules.customizations": {
            "items": {
                "properties": {
                    "severity": {
                        "enum": [
                            "downgrade",
                            "error",
                            "info",
                            "default",
                            "upgrade",
                            "warn",
                            "off"
                        ],
                        "type": "string"
                    },
                    "rule": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "scope": 4,
            "type": "array",
            "description": "Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "default": [],
            "restricted": false
        },
        "eslint.notebooks.rules.customizations": {
            "items": {
                "properties": {
                    "severity": {
                        "enum": [
                            "downgrade",
                            "error",
                            "info",
                            "default",
                            "upgrade",
                            "warn",
                            "off"
                        ],
                        "type": "string"
                    },
                    "rule": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "scope": 4,
            "type": "array",
            "description": "A special rules customization section for text cells in notebook documents.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "default": [],
            "restricted": false
        },
        "eslint.timeBudget.onValidation": {
            "scope": 4,
            "type": "object",
            "properties": {
                "warn": {
                    "type": "number",
                    "default": 4000,
                    "minimum": 0,
                    "markdownDescription": "The time budget in milliseconds to spend on validation before showing a warning."
                },
                "error": {
                    "type": "number",
                    "default": 8000,
                    "minimum": 0,
                    "markdownDescription": "The time budget in milliseconds to spend on validation before showing an error."
                }
            },
            "default": {
                "warn": 4000,
                "error": 8000
            },
            "markdownDescription": "The time budget in milliseconds to spend on validation before showing a warning or error.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": {
                "warn": 4000,
                "error": 8000
            },
            "restricted": false
        },
        "eslint.timeBudget.onFixes": {
            "scope": 4,
            "type": "object",
            "properties": {
                "warn": {
                    "type": "number",
                    "default": 3000,
                    "minimum": 0,
                    "markdownDescription": "The time budget in milliseconds to spend on computing fixes before showing a warning."
                },
                "error": {
                    "type": "number",
                    "default": 6000,
                    "minimum": 0,
                    "markdownDescription": "The time budget in milliseconds to spend on computing fixes before showing an error."
                }
            },
            "default": {
                "warn": 3000,
                "error": 6000
            },
            "markdownDescription": "The time budget in milliseconds to spend on computing fixes before showing a warning or error.",
            "source": {
                "id": "dbaeumer.vscode-eslint",
                "displayName": "ESLint"
            },
            "defaultDefaultValue": {
                "warn": 3000,
                "error": 6000
            },
            "restricted": false
        },
        "deno.enable": {
            "type": "boolean",
            "default": null,
            "markdownDescription": "Controls if the Deno Language Server is enabled. When enabled, the extension will disable the built-in VSCode JavaScript and TypeScript language services, and will use the Deno Language Server instead.\n\nIf omitted, your preference will be inferred as true if there is a `deno.json[c]` at your workspace root and false if not.\n\nIf you want to enable only part of your workspace folder, consider using `deno.enablePaths` setting instead.\n\n**Not recommended to be enabled globally.**",
            "scope": 4,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "deno.cacheOnSave": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Controls if the extension should cache the active document's dependencies on save.",
            "scope": 4,
            "examples": [
                true,
                false
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.disablePaths": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "Disables the Deno Language Server for specific paths. This will leave the built in TypeScript/JavaScript language server enabled for those paths. Takes priority over `deno.enablePaths`.\n\n**Not recommended to be enabled in user settings.**",
            "scope": 4,
            "examples": [
                [
                    "./worker"
                ]
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "deno.enablePaths": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "Enables the Deno Language Server for specific paths, instead of for the whole workspace folder. This will disable the built in TypeScript/JavaScript language server for those paths.\n\nWhen a value is set, the value of `\"deno.enable\"` is ignored.\n\nThe workspace folder is used as the base for the supplied paths. If for example you have all your Deno code in `worker` path in your workspace, you can add an item with the value of `./worker`, and the Deno will only provide diagnostics for the files within `worker` or any of its sub paths.\n\n**Not recommended to be enabled in user settings.**",
            "scope": 4,
            "examples": [
                [
                    "./worker"
                ]
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "deno.codeLens.test": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enables or disables the display of code lenses that allow running of individual tests in the code.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.codeLens.testArgs": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "--allow-all",
                "--no-check"
            ],
            "markdownDescription": "Additional arguments to use with the run test code lens.  Defaults to `[ \"--allow-all\", \"--no-check\" ]`.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": [
                "--allow-all",
                "--no-check"
            ],
            "restricted": false
        },
        "deno.documentPreloadLimit": {
            "type": "number",
            "markdownDescription": "Maximum number of file system entries to traverse when finding scripts to preload into TypeScript on startup. Set this to 0 to disable document preloading.",
            "default": 1000,
            "scope": 4,
            "examples": [
                0,
                100,
                1000
            ],
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "deno.inlayHints.parameterNames.enabled": {
            "type": "string",
            "enum": [
                "none",
                "literals",
                "all"
            ],
            "enumDescriptions": [
                "Disable inlay hints for parameters.",
                "Display inlay hints for literal arguments.",
                "Display inlay hints for all literal and non-literal arguments."
            ],
            "default": "none",
            "markdownDescription": "Enable/disable inlay hints for parameter names.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": "none",
            "restricted": false
        },
        "deno.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Do not display an inlay hint when the argument name matches the parameter.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.inlayHints.parameterTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit parameter types.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.inlayHints.variableTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit variable types.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Suppress type hints where the variable name matches the implicit type.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "deno.inlayHints.propertyDeclarationTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit property declarations.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.inlayHints.functionLikeReturnTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for implicit function return types.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.inlayHints.enumMemberValues.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for enum values.",
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "deno.maxTsServerMemory": {
            "type": "number",
            "markdownDescription": "Maximum amount of memory the TypeScript isolate can use. Defaults to 3072 (3GB).",
            "default": 3072,
            "scope": 4,
            "source": {
                "id": "denoland.vscode-deno",
                "displayName": "Deno"
            },
            "defaultDefaultValue": 3072,
            "restricted": false
        },
        "gitlens.codeLens.scopes": {
            "type": "array",
            "default": [
                "document",
                "containers"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "document",
                    "containers",
                    "blocks"
                ],
                "enumDescriptions": [
                    "Adds CodeLens at the top of the document",
                    "Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)",
                    "Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"
                ]
            },
            "minItems": 0,
            "maxItems": 3,
            "uniqueItems": true,
            "markdownDescription": "Specifies where Git CodeLens will be shown in the document",
            "scope": 5,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": [
                "document",
                "containers"
            ],
            "restricted": false
        },
        "gitlens.codeLens.symbolScopes": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`",
            "scope": 5,
            "order": 50,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "default": [],
            "restricted": false
        },
        "gitlens.worktrees.promptForLocation": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Specifies whether to prompt for a path when creating new worktrees",
            "scope": 4,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gitlens.worktrees.defaultLocation": {
            "type": "string",
            "default": null,
            "markdownDescription": "Specifies the default path in which new worktrees will be created",
            "scope": 4,
            "order": 11,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.worktrees.openAfterCreate": {
            "type": "string",
            "default": "prompt",
            "enum": [
                "always",
                "alwaysNewWindow",
                "onlyWhenEmpty",
                "never",
                "prompt"
            ],
            "enumDescriptions": [
                "Always open the new worktree in the current window",
                "Always open the new worktree in a new window",
                "Only open the new worktree in the current window when no folder is opened",
                "Never open the new worktree",
                "Always prompt to open the new worktree"
            ],
            "markdownDescription": "Specifies how and when to open a worktree after it is created",
            "scope": 4,
            "order": 12,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": "prompt",
            "restricted": false
        },
        "gitlens.remotes": {
            "type": [
                "array",
                "null"
            ],
            "default": null,
            "items": {
                "type": "object",
                "required": [
                    "type"
                ],
                "oneOf": [
                    {
                        "required": [
                            "domain"
                        ]
                    },
                    {
                        "required": [
                            "regex"
                        ]
                    }
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "Custom",
                            "AzureDevOps",
                            "Bitbucket",
                            "BitbucketServer",
                            "Gerrit",
                            "GoogleSource",
                            "Gitea",
                            "GitHub",
                            "GitLab"
                        ],
                        "description": "Specifies the type of the custom remote service"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Specifies the domain name used to match this custom configuration to a Git remote"
                    },
                    "regex": {
                        "type": "string",
                        "description": "Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\""
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies an optional friendly name for the custom remote service"
                    },
                    "protocol": {
                        "type": "string",
                        "default": "https",
                        "description": "Specifies an optional URL protocol for the custom remote service"
                    },
                    "ignoreSSLErrors": {
                        "type": "boolean",
                        "default": false,
                        "description": "Specifies whether to ignore invalid SSL certificate errors when connecting to the remote service"
                    },
                    "urls": {
                        "type": "object",
                        "required": [
                            "repository",
                            "branches",
                            "branch",
                            "commit",
                            "file",
                            "fileInCommit",
                            "fileInBranch",
                            "fileLine",
                            "fileRange"
                        ],
                        "properties": {
                            "repository": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a repository URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path"
                            },
                            "branches": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a branches URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"
                            },
                            "branch": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a branch URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"
                            },
                            "commit": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a commit URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA"
                            },
                            "file": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information"
                            },
                            "fileInBranch": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a branch file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information"
                            },
                            "fileInCommit": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a commit file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information"
                            },
                            "fileLine": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a line in a file URL for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line"
                            },
                            "fileRange": {
                                "type": "string",
                                "markdownDescription": "Specifies the format of a range in a file URL for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line"
                            }
                        },
                        "additionalProperties": false
                    }
                }
            },
            "uniqueItems": true,
            "markdownDescription": "Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services",
            "scope": 4,
            "order": 30,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.detectNestedRepositories": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to attempt to detect nested repositories when opening files",
            "scope": 4,
            "order": 0,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.advanced.repositorySearchDepth": {
            "type": "number",
            "default": null,
            "markdownDescription": "Specifies how many folders deep to search for repositories. Defaults to `#git.repositoryScanMaxDepth#`",
            "scope": 4,
            "order": 10,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "gitlens.blame.ignoreWhitespace": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Specifies whether to ignore whitespace when comparing revisions during blame operations",
            "scope": 4,
            "order": 40,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "gitlens.advanced.blame.customArguments": {
            "type": [
                "array",
                "null"
            ],
            "default": null,
            "items": {
                "type": "string"
            },
            "markdownDescription": "Specifies additional arguments to pass to the `git blame` command",
            "scope": 4,
            "order": 41,
            "source": {
                "id": "eamodio.gitlens",
                "displayName": "GitLens — Git supercharged"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "prettier.enable": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether Prettier is enabled or not.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "prettier.requireConfig": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.resolveGlobalModules": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "prettier.withNodeModules": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "This extension will process files in `node_modules`.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "prettier.packageManager": {
            "scope": 4,
            "type": "string",
            "enum": [
                "npm",
                "yarn",
                "pnpm"
            ],
            "default": "npm",
            "deprecationMessage": "Package manager is now automatically detected by VS Code. This setting is no longer used.",
            "markdownDescription": "The package manager you use to install node modules.",
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "npm",
            "restricted": false
        },
        "prettier.useEditorConfig": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": true,
            "restricted": true
        },
        "prettier.ignorePath": {
            "type": "string",
            "default": ".prettierignore",
            "markdownDescription": "Path to a `.prettierignore` file.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": ".prettierignore",
            "restricted": true
        },
        "prettier.prettierPath": {
            "type": "string",
            "markdownDescription": "Path to the `prettier` module, eg: `./node_modules/prettier`.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "default": "",
            "restricted": true
        },
        "prettier.configPath": {
            "type": "string",
            "markdownDescription": "Path to the prettier configuration file.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "default": "",
            "restricted": true
        },
        "prettier.enableDebugLogs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable debug logs for troubleshooting.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.printWidth": {
            "type": "integer",
            "default": 80,
            "markdownDescription": "Fit code within this line limit.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": 80,
            "restricted": false
        },
        "prettier.tabWidth": {
            "type": "integer",
            "default": 2,
            "markdownDescription": "Number of spaces it should use per tab.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": 2,
            "restricted": false
        },
        "prettier.singleQuote": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Use single instead of double quotes.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.trailingComma": {
            "type": "string",
            "enum": [
                "none",
                "es5",
                "all"
            ],
            "default": "es5",
            "markdownDescription": "Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "es5",
            "restricted": false
        },
        "prettier.bracketSpacing": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls the printing of spaces inside object literals.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "prettier.singleAttributePerLine": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enforces single attribute per line in HTML, JSX, Vue and Angular.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.bracketSameLine": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.jsxBracketSameLine": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).",
            "deprecationMessage": "This option has been deprecated in v2.4.0, use `bracketSameLine` instead.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.semi": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Whether to add a semicolon at the end of every line.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "prettier.requirePragma": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.insertPragma": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.useTabs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Indent lines with tabs.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.proseWrap": {
            "type": "string",
            "enum": [
                "preserve",
                "always",
                "never"
            ],
            "default": "preserve",
            "markdownDescription": "(Markdown) wrap prose over multiple lines.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "preserve",
            "restricted": false
        },
        "prettier.arrowParens": {
            "type": "string",
            "enum": [
                "avoid",
                "always"
            ],
            "default": "always",
            "markdownDescription": "Include parentheses around a sole arrow function parameter.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "always",
            "restricted": false
        },
        "prettier.jsxSingleQuote": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Use single quotes instead of double quotes in JSX.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.htmlWhitespaceSensitivity": {
            "type": "string",
            "enum": [
                "css",
                "strict",
                "ignore"
            ],
            "default": "css",
            "markdownDescription": "Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "css",
            "restricted": false
        },
        "prettier.vueIndentScriptAndStyle": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "prettier.endOfLine": {
            "type": "string",
            "enum": [
                "auto",
                "lf",
                "crlf",
                "cr"
            ],
            "default": "lf",
            "markdownDescription": "Specify the end of line used by prettier.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "lf",
            "restricted": false
        },
        "prettier.quoteProps": {
            "type": "string",
            "enum": [
                "as-needed",
                "consistent",
                "preserve"
            ],
            "default": "as-needed",
            "markdownDescription": "Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "as-needed",
            "restricted": false
        },
        "prettier.embeddedLanguageFormatting": {
            "type": "string",
            "enum": [
                "auto",
                "off"
            ],
            "default": "auto",
            "markdownDescription": "Control whether Prettier formats quoted code embedded in the file.",
            "scope": 4,
            "source": {
                "id": "esbenp.prettier-vscode",
                "displayName": "Prettier - Code formatter"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "github.copilot.editor.enableAutoCompletions": {
            "type": "boolean",
            "scope": 5,
            "default": true,
            "description": "Automatically show inline completions",
            "source": {
                "id": "GitHub.copilot",
                "displayName": "GitHub Copilot"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "githubPullRequests.queries": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The label to display for the query in the Pull Requests tree"
                    },
                    "query": {
                        "type": "string",
                        "description": "The query used for searching pull requests."
                    }
                }
            },
            "scope": 4,
            "markdownDescription": "Specifies what queries should be used in the GitHub Pull Requests tree. All queries are made against **the currently opened repos**. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.",
            "default": [
                {
                    "label": "Waiting For My Review",
                    "query": "is:open review-requested:${user}"
                },
                {
                    "label": "Assigned To Me",
                    "query": "is:open assignee:${user}"
                },
                {
                    "label": "Created By Me",
                    "query": "is:open author:${user}"
                }
            ],
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [
                {
                    "label": "Waiting For My Review",
                    "query": "is:open review-requested:${user}"
                },
                {
                    "label": "Assigned To Me",
                    "query": "is:open assignee:${user}"
                },
                {
                    "label": "Created By Me",
                    "query": "is:open author:${user}"
                }
            ],
            "restricted": false
        },
        "githubIssues.queries": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The label to display for the query in the Issues tree."
                    },
                    "query": {
                        "type": "string",
                        "markdownDescription": "The search query using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The variable `${user}` can be used to specify the logged in user within a search. `${owner}` and `${repository}` can be used to specify the repository by using `repo:${owner}/${repository}`."
                    }
                }
            },
            "scope": 4,
            "markdownDescription": "Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The \"default\" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.",
            "default": [
                {
                    "label": "My Issues",
                    "query": "default"
                },
                {
                    "label": "Created Issues",
                    "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
                },
                {
                    "label": "Recent Issues",
                    "query": "state:open repo:${owner}/${repository} sort:updated-desc"
                }
            ],
            "source": {
                "id": "GitHub.vscode-pull-request-github",
                "displayName": "GitHub Pull Requests and Issues"
            },
            "defaultDefaultValue": [
                {
                    "label": "My Issues",
                    "query": "default"
                },
                {
                    "label": "Created Issues",
                    "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
                },
                {
                    "label": "Recent Issues",
                    "query": "state:open repo:${owner}/${repository} sort:updated-desc"
                }
            ],
            "restricted": false
        },
        "go.buildOnSave": {
            "type": "string",
            "enum": [
                "package",
                "workspace",
                "off"
            ],
            "default": "package",
            "description": "Compiles code on file save using 'go build' or 'go test -c'. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Enable the Go language server (`#go.useLanguageServer#`) to diagnose compile errors.",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "package",
            "restricted": false,
            "deprecationMessage": "Enable the Go language server (`#go.useLanguageServer#`) to diagnose compile errors."
        },
        "go.buildFlags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Flags to `go build`/`go test` used during build-on-save or running tests. (e.g. [\"-ldflags='-s'\"]) This is propagated to the language server if `gopls.build.buildFlags` is not specified.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "go.buildTags": {
            "type": "string",
            "default": "",
            "description": "The Go build tags to use for all commands, that support a `-tags '...'` argument. When running tests, go.testTags will be used instead if it was set. This is propagated to the language server if `gopls.build.buildFlags` is not specified.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "go.testTags": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "description": "The Go build tags to use for when running tests. If null, then buildTags will be used.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "go.disableConcurrentTests": {
            "type": "boolean",
            "default": false,
            "description": "If true, tests will not run concurrently. When a new test run is started, the previous will be cancelled.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.installDependenciesWhenBuilding": {
            "type": "boolean",
            "default": false,
            "description": "If true, then `-i` flag will be passed to `go build` everytime the code is compiled. Since Go 1.10, setting this may be unnecessary unless you are in GOPATH mode and do not use the language server.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.lintOnSave": {
            "type": "string",
            "enum": [
                "file",
                "package",
                "workspace",
                "off"
            ],
            "enumDescriptions": [
                "lint the current file on file saving",
                "lint the current package on file saving",
                "lint all the packages in the current workspace root folder on file saving",
                "do not run lint automatically"
            ],
            "default": "package",
            "description": "Lints code on file save using the configured Lint tool. Options are 'file', 'package', 'workspace' or 'off'.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "package",
            "restricted": false
        },
        "go.lintTool": {
            "type": "string",
            "default": "staticcheck",
            "description": "Specifies Lint tool name.",
            "scope": 4,
            "enum": [
                "staticcheck",
                "golint",
                "golangci-lint",
                "revive"
            ],
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "staticcheck",
            "restricted": false
        },
        "go.lintFlags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Flags to pass to Lint tool (e.g. [\"-min_confidence=.8\"])",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "go.vetOnSave": {
            "type": "string",
            "enum": [
                "package",
                "workspace",
                "off"
            ],
            "enumDescriptions": [
                "vet the current package on file saving",
                "vet all the packages in the current workspace root folder on file saving",
                "do not run vet automatically"
            ],
            "default": "package",
            "description": "Vets code on file save using 'go tool vet'. Not applicable when using the language server's diagnostics. See 'go.languageServerExperimentalFeatures.diagnostics' setting.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "package",
            "restricted": false
        },
        "go.vetFlags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Flags to pass to `go tool vet` (e.g. [\"-all\", \"-shadow\"])",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "go.formatTool": {
            "type": "string",
            "default": "default",
            "markdownDescription": "When the language server is enabled and one of `default`/`gofmt`/`goimports`/`gofumpt` is chosen, the language server will handle formatting. If `custom` tool is selected, the extension will use the `customFormatter` tool in the `#go.alternateTools#` section.",
            "scope": 4,
            "enum": [
                "default",
                "gofmt",
                "goimports",
                "goformat",
                "gofumpt",
                "custom"
            ],
            "markdownEnumDescriptions": [
                "If the language server is enabled, format via the language server, which already supports gofmt, goimports, goreturns, and gofumpt. Otherwise, goimports.",
                "Formats the file according to the standard Go style. (not applicable when the language server is enabled)",
                "Organizes imports and formats the file with gofmt. (not applicable when the language server is enabled)",
                "Configurable gofmt, see https://github.com/mbenkmann/goformat.",
                "Stricter version of gofmt, see https://github.com/mvdan/gofumpt. . Use `#gopls.format.gofumpt#` instead)",
                "Formats using the custom tool specified as `customFormatter` in the `#go.alternateTools#` setting. The tool should take the input as STDIN and output the formatted code as STDOUT."
            ],
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "go.formatFlags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Flags to pass to format tool (e.g. [\"-s\"]). Not applicable when using the language server.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "go.inferGopath": {
            "type": "boolean",
            "default": false,
            "description": "Infer GOPATH from the workspace root. This is ignored when using Go Modules.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": true
        },
        "go.testOnSave": {
            "type": "boolean",
            "default": false,
            "description": "Run 'go test' on save for current package. It is not advised to set this to `true` when you have Auto Save enabled.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.coverOnSave": {
            "type": "boolean",
            "default": false,
            "description": "If true, runs 'go test -coverprofile' on save and shows test coverage.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.coverMode": {
            "type": "string",
            "enum": [
                "default",
                "set",
                "count",
                "atomic"
            ],
            "default": "default",
            "description": "When generating code coverage, the value for -covermode. 'default' is the default value chosen by the 'go test' command.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "go.coverShowCounts": {
            "type": "boolean",
            "default": false,
            "description": "When generating code coverage, should counts be shown as --374--",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.coverageOptions": {
            "type": "string",
            "enum": [
                "showCoveredCodeOnly",
                "showUncoveredCodeOnly",
                "showBothCoveredAndUncoveredCode"
            ],
            "default": "showBothCoveredAndUncoveredCode",
            "description": "Use these options to control whether only covered or only uncovered code or both should be highlighted after running test coverage",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "showBothCoveredAndUncoveredCode",
            "restricted": false
        },
        "go.coverageDecorator": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "highlight",
                        "gutter"
                    ]
                },
                "coveredHighlightColor": {
                    "type": "string",
                    "description": "Color in the rgba format to use to highlight covered code."
                },
                "uncoveredHighlightColor": {
                    "type": "string",
                    "description": "Color in the rgba format to use to highlight uncovered code."
                },
                "coveredBorderColor": {
                    "type": "string",
                    "description": "Color to use for the border of covered code."
                },
                "uncoveredBorderColor": {
                    "type": "string",
                    "description": "Color to use for the border of uncovered code."
                },
                "coveredGutterStyle": {
                    "type": "string",
                    "enum": [
                        "blockblue",
                        "blockred",
                        "blockgreen",
                        "blockyellow",
                        "slashred",
                        "slashgreen",
                        "slashblue",
                        "slashyellow",
                        "verticalred",
                        "verticalgreen",
                        "verticalblue",
                        "verticalyellow"
                    ],
                    "description": "Gutter style to indicate covered code."
                },
                "uncoveredGutterStyle": {
                    "type": "string",
                    "enum": [
                        "blockblue",
                        "blockred",
                        "blockgreen",
                        "blockyellow",
                        "slashred",
                        "slashgreen",
                        "slashblue",
                        "slashyellow",
                        "verticalred",
                        "verticalgreen",
                        "verticalblue",
                        "verticalyellow"
                    ],
                    "description": "Gutter style to indicate covered code."
                }
            },
            "additionalProperties": false,
            "default": {
                "type": "highlight",
                "coveredHighlightColor": "rgba(64,128,128,0.5)",
                "uncoveredHighlightColor": "rgba(128,64,64,0.25)",
                "coveredBorderColor": "rgba(64,128,128,0.5)",
                "uncoveredBorderColor": "rgba(128,64,64,0.25)",
                "coveredGutterStyle": "blockblue",
                "uncoveredGutterStyle": "slashyellow"
            },
            "description": "This option lets you choose the way to display code coverage. Choose either to highlight the complete line or to show a decorator in the gutter. You can customize the colors and borders for the former and the style for the latter.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "type": "highlight",
                "coveredHighlightColor": "rgba(64,128,128,0.5)",
                "uncoveredHighlightColor": "rgba(128,64,64,0.25)",
                "coveredBorderColor": "rgba(64,128,128,0.5)",
                "uncoveredBorderColor": "rgba(128,64,64,0.25)",
                "coveredGutterStyle": "blockblue",
                "uncoveredGutterStyle": "slashyellow"
            },
            "restricted": false
        },
        "go.testTimeout": {
            "type": "string",
            "default": "30s",
            "description": "Specifies the timeout for go test in ParseDuration format.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "30s",
            "restricted": false
        },
        "go.testEnvVars": {
            "type": "object",
            "default": {},
            "description": "Environment variables that will be passed to the process that runs the Go tests",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "go.testEnvFile": {
            "type": "string",
            "default": null,
            "description": "Absolute path to a file containing environment variables definitions. File contents should be of the form key=value.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "go.testFlags": {
            "type": [
                "array",
                "null"
            ],
            "items": {
                "type": "string"
            },
            "default": null,
            "description": "Flags to pass to `go test`. If null, then buildFlags will be used. This is not propagated to the language server.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "go.testExplorer.packageDisplayMode": {
            "type": "string",
            "enum": [
                "flat",
                "nested"
            ],
            "default": "flat",
            "description": "Present packages in the test explorer flat or nested.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "flat",
            "restricted": false
        },
        "go.testExplorer.alwaysRunBenchmarks": {
            "type": "boolean",
            "default": false,
            "description": "Run benchmarks when running all tests in a file or folder.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.testExplorer.concatenateMessages": {
            "type": "boolean",
            "default": true,
            "description": "Concatenate all test log messages for a given location into a single message.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "go.testExplorer.showDynamicSubtestsInEditor": {
            "type": "boolean",
            "default": false,
            "description": "Set the source location of dynamically discovered subtests to the location of the containing function. As a result, dynamically discovered subtests will be added to the gutter test widget of the containing function.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.generateTestsFlags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Additional command line flags to pass to `gotests` for generating tests.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "go.toolsEnvVars": {
            "type": "object",
            "default": {},
            "description": "Environment variables that will be passed to the tools that run the Go tools (e.g. CGO_CFLAGS) and debuggee process launched by Delve. Format as string key:value pairs. When debugging, merged with `envFile` and `env` values with precedence `env` > `envFile` > `go.toolsEnvVars`.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {},
            "restricted": true
        },
        "go.gocodeFlags": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "-builtin",
                "-ignore-case",
                "-unimported-packages"
            ],
            "description": "Additional flags to pass to gocode. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "`gocode` is deprecated by the Go language server. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [
                "-builtin",
                "-ignore-case",
                "-unimported-packages"
            ],
            "restricted": false,
            "deprecationMessage": "`gocode` is deprecated by the Go language server. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.gocodeAutoBuild": {
            "type": "boolean",
            "default": false,
            "description": "Enable gocode's autobuild feature. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "`gocode` is deprecated by the Go language server. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "`gocode` is deprecated by the Go language server. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.gocodePackageLookupMode": {
            "type": "string",
            "enum": [
                "go",
                "gb",
                "bzl"
            ],
            "default": "go",
            "description": "Used to determine the Go package lookup rules for completions by gocode. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "`gocode` is deprecated by the Go language server. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "go",
            "restricted": false,
            "deprecationMessage": "`gocode` is deprecated by the Go language server. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.useCodeSnippetsOnFunctionSuggest": {
            "type": "boolean",
            "default": false,
            "description": "Complete functions with their parameter signature, including the variable type. Not propagated to the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Code completion without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`) and use [`gopls's `ui.completion.usePlaceholders` setting](https://github.com/golang/vscode-go/wiki/settings#uicompletionuseplaceholders) instead.",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Code completion without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`) and use [`gopls's `ui.completion.usePlaceholders` setting](https://github.com/golang/vscode-go/wiki/settings#uicompletionuseplaceholders) instead."
        },
        "go.useCodeSnippetsOnFunctionSuggestWithoutType": {
            "type": "boolean",
            "default": false,
            "description": "Complete functions with their parameter signature, excluding the variable types. Use `gopls.usePlaceholders` when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Code completion without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`) and use [`gopls's `ui.completion.usePlaceholders` setting](https://github.com/golang/vscode-go/wiki/settings#uicompletionuseplaceholders) instead.",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Code completion without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`) and use [`gopls's `ui.completion.usePlaceholders` setting](https://github.com/golang/vscode-go/wiki/settings#uicompletionuseplaceholders) instead."
        },
        "go.autocompleteUnimportedPackages": {
            "type": "boolean",
            "default": false,
            "description": "Include unimported packages in auto-complete suggestions. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Code completion without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Code completion without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.docsTool": {
            "type": "string",
            "default": "godoc",
            "description": "Pick 'godoc' or 'gogetdoc' to get documentation. Not applicable when using the language server.",
            "scope": 4,
            "enum": [
                "godoc",
                "gogetdoc",
                "guru"
            ],
            "markdownDeprecationMessage": "Documentation support without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "godoc",
            "restricted": false,
            "deprecationMessage": "Documentation support without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.toolsManagement.autoUpdate": {
            "type": "boolean",
            "default": false,
            "description": "Automatically update the tools used by the extension, without prompting the user.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "go.gotoSymbol.includeImports": {
            "type": "boolean",
            "default": false,
            "description": "If false, the import statements will be excluded while using the Go to Symbol in File feature. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Code navigation without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Code navigation without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.gotoSymbol.includeGoroot": {
            "type": "boolean",
            "default": false,
            "description": "If false, the standard library located at $GOROOT will be excluded while using the Go to Symbol in File feature. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Code navigation without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": false,
            "restricted": false,
            "deprecationMessage": "Code navigation without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.enableCodeLens": {
            "type": "object",
            "properties": {
                "runtest": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, enables code lens for running and debugging tests"
                }
            },
            "additionalProperties": false,
            "default": {
                "runtest": true
            },
            "description": "Feature level setting to enable/disable code lens for references and run/debug tests",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "runtest": true
            },
            "restricted": false
        },
        "go.addTags": {
            "type": "object",
            "properties": {
                "promptForTags": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, Go: Add Tags command will prompt the user to provide tags, options, transform values instead of using the configured values"
                },
                "tags": {
                    "type": "string",
                    "default": "json",
                    "description": "Comma separated tags to be used by Go: Add Tags command"
                },
                "options": {
                    "type": "string",
                    "default": "json=omitempty",
                    "description": "Comma separated tag=options pairs to be used by Go: Add Tags command"
                },
                "transform": {
                    "type": "string",
                    "enum": [
                        "snakecase",
                        "camelcase",
                        "lispcase",
                        "pascalcase",
                        "keep"
                    ],
                    "default": "snakecase",
                    "description": "Transformation rule used by Go: Add Tags command to add tags"
                },
                "template": {
                    "type": "string",
                    "default": "",
                    "description": "Custom format used by Go: Add Tags command for the tag value to be applied"
                }
            },
            "additionalProperties": false,
            "default": {
                "tags": "json",
                "options": "json=omitempty",
                "promptForTags": false,
                "transform": "snakecase",
                "template": ""
            },
            "description": "Tags and options configured here will be used by the Add Tags command to add tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, json tags are added.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "tags": "json",
                "options": "json=omitempty",
                "promptForTags": false,
                "transform": "snakecase",
                "template": ""
            },
            "restricted": false
        },
        "go.liveErrors": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, runs gotype on the file currently being edited and reports any semantic or syntactic errors found. Disabled when the language server is enabled."
                },
                "delay": {
                    "type": "number",
                    "default": 500,
                    "description": "The number of milliseconds to delay before execution. Resets with each keystroke."
                }
            },
            "additionalProperties": false,
            "default": {
                "enabled": false,
                "delay": 500
            },
            "description": "Use gotype on the file currently being edited and report any semantic or syntactic errors found after configured delay. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Real-time diagnostics without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "enabled": false,
                "delay": 500
            },
            "restricted": false,
            "deprecationMessage": "Real-time diagnostics without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.removeTags": {
            "type": "object",
            "properties": {
                "promptForTags": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, Go: Remove Tags command will prompt the user to provide tags and options instead of using the configured values"
                },
                "tags": {
                    "type": "string",
                    "default": "json",
                    "description": "Comma separated tags to be used by Go: Remove Tags command"
                },
                "options": {
                    "type": "string",
                    "default": "json=omitempty",
                    "description": "Comma separated tag=options pairs to be used by Go: Remove Tags command"
                }
            },
            "additionalProperties": false,
            "default": {
                "tags": "",
                "options": "",
                "promptForTags": false
            },
            "description": "Tags and options configured here will be used by the Remove Tags command to remove tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, all tags and options will be removed.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "tags": "",
                "options": "",
                "promptForTags": false
            },
            "restricted": false
        },
        "go.editorContextMenuCommands": {
            "type": "object",
            "properties": {
                "toggleTestFile": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to toggle between a Go file and its test file to the editor context menu"
                },
                "addTags": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to add configured tags from struct fields to the editor context menu"
                },
                "removeTags": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to remove configured tags from struct fields to the editor context menu"
                },
                "fillStruct": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to fill struct literal with default values to the editor context menu"
                },
                "testAtCursor": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, adds command to run the test under the cursor to the editor context menu"
                },
                "testFile": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to run all tests in the current file to the editor context menu"
                },
                "testPackage": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to run all tests in the current package to the editor context menu"
                },
                "generateTestForFunction": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to generate unit tests for function under the cursor to the editor context menu"
                },
                "generateTestForFile": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to generate unit tests for current file to the editor context menu"
                },
                "generateTestForPackage": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to generate unit tests for current package to the editor context menu"
                },
                "addImport": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to import a package to the editor context menu"
                },
                "testCoverage": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to run test coverage to the editor context menu"
                },
                "playground": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, adds command to upload the current file or selection to the Go Playground"
                },
                "debugTestAtCursor": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, adds command to debug the test under the cursor to the editor context menu"
                },
                "benchmarkAtCursor": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, adds command to benchmark the test under the cursor to the editor context menu"
                }
            },
            "additionalProperties": false,
            "default": {
                "toggleTestFile": true,
                "addTags": true,
                "removeTags": false,
                "fillStruct": false,
                "testAtCursor": true,
                "testFile": false,
                "testPackage": false,
                "generateTestForFunction": true,
                "generateTestForFile": false,
                "generateTestForPackage": false,
                "addImport": true,
                "testCoverage": true,
                "playground": true,
                "debugTestAtCursor": true,
                "benchmarkAtCursor": false
            },
            "description": "Experimental Feature: Enable/Disable entries from the context menu in the editor.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {
                "toggleTestFile": true,
                "addTags": true,
                "removeTags": false,
                "fillStruct": false,
                "testAtCursor": true,
                "testFile": false,
                "testPackage": false,
                "generateTestForFunction": true,
                "generateTestForFile": false,
                "generateTestForPackage": false,
                "addImport": true,
                "testCoverage": true,
                "playground": true,
                "debugTestAtCursor": true,
                "benchmarkAtCursor": false
            },
            "restricted": false
        },
        "go.gotoSymbol.ignoreFolders": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Folder names (not paths) to ignore while using Go to Symbol in Workspace feature. Not applicable when using the language server.",
            "scope": 4,
            "markdownDeprecationMessage": "Code navigation without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`).",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": [],
            "restricted": false,
            "deprecationMessage": "Code navigation without the language server is deprecated. Enable the Go language server (`#go.useLanguageServer#`)."
        },
        "go.delveConfig": {
            "type": "object",
            "properties": {
                "dlvLoadConfig": {
                    "type": "object",
                    "properties": {
                        "followPointers": {
                            "type": "boolean",
                            "description": "FollowPointers requests pointers to be automatically dereferenced",
                            "default": true
                        },
                        "maxVariableRecurse": {
                            "type": "number",
                            "description": "MaxVariableRecurse is how far to recurse when evaluating nested types",
                            "default": 1
                        },
                        "maxStringLen": {
                            "type": "number",
                            "description": "MaxStringLen is the maximum number of bytes read from a string",
                            "default": 64
                        },
                        "maxArrayValues": {
                            "type": "number",
                            "description": "MaxArrayValues is the maximum number of elements read from an array, a slice or a map",
                            "default": 64
                        },
                        "maxStructFields": {
                            "type": "number",
                            "description": "MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields",
                            "default": -1
                        }
                    },
                    "description": "LoadConfig describes to delve, how to load values from target's memory. Ignored by 'dlv-dap'.",
                    "default": {
                        "followPointers": true,
                        "maxVariableRecurse": 1,
                        "maxStringLen": 64,
                        "maxArrayValues": 64,
                        "maxStructFields": -1
                    }
                },
                "apiVersion": {
                    "type": "number",
                    "enum": [
                        1,
                        2
                    ],
                    "description": "Delve Api Version to use. Default value is 2. This applies only when using the 'legacy' debug adapter.",
                    "default": 2
                },
                "showGlobalVariables": {
                    "type": "boolean",
                    "description": "Boolean value to indicate whether global package variables should be shown in the variables pane or not.",
                    "default": false
                },
                "showRegisters": {
                    "type": "boolean",
                    "default": false,
                    "description": "Boolean value to indicate whether register variables should be shown in the variables pane or not."
                },
                "hideSystemGoroutines": {
                    "type": "boolean",
                    "default": false,
                    "description": "Boolean value to indicate whether system goroutines should be hidden from call stack view."
                },
                "showLog": {
                    "type": "boolean",
                    "description": "Show log output from the delve debugger. Maps to dlv's `--log` flag.",
                    "default": false
                },
                "logOutput": {
                    "type": "string",
                    "enum": [
                        "debugger",
                        "gdbwire",
                        "lldbout",
                        "debuglineerr",
                        "rpc",
                        "dap"
                    ],
                    "description": "Comma separated list of components that should produce debug output. Maps to dlv's `--log-output` flag. Check `dlv log` for details.",
                    "default": "debugger"
                },
                "debugAdapter": {
                    "type": "string",
                    "enum": [
                        "legacy",
                        "dlv-dap"
                    ],
                    "description": "Select which debug adapter to use by default. This is also used for choosing which debug adapter to use when no launch.json is present and with codelenses.",
                    "default": "dlv-dap"
                },
                "dlvFlags": {
                    "type": "array",
                    "description": "Extra flags for `dlv`. See `dlv help` for the full list of supported. Flags such as `--log-output`, `--log`, `--log-dest`, `--api-version`, `--output`, `--backend` already have corresponding properties in the debug configuration, and flags such as `--listen` and `--headless` are used internally. If they are specified in `dlvFlags`, they may be ignored or cause an error.",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "substitutePath": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": "string",
                                "description": "The absolute local path to be replaced when passing paths to the debugger",
                                "default": ""
                            },
                            "to": {
                                "type": "string",
                                "description": "The absolute remote path to be replaced when passing paths back to the client",
                                "default": ""
                            }
                        }
                    },
                    "description": "An array of mappings from a local path to the remote path that is used by the debuggee. The debug adapter will replace the local path with the remote path in all of the calls. Overriden by `remotePath` (in attach request).",
                    "default": []
                }
            },
            "default": {},
            "description": "Delve settings that applies to all debugging sessions. Debug configuration in the launch.json file will override these values.",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "go.alternateTools": {
            "type": "object",
            "default": {},
            "description": "Alternate tools or alternate paths for the same tools used by the Go extension. Provide either absolute path or the name of the binary in GOPATH/bin, GOROOT/bin or PATH. Useful when you want to use wrapper script for the Go tools.",
            "scope": 4,
            "properties": {
                "go": {
                    "type": "string",
                    "default": "go",
                    "description": "Alternate tool to use instead of the go binary or alternate path to use for the go binary."
                },
                "gopls": {
                    "type": "string",
                    "default": "gopls",
                    "description": "Alternate tool to use instead of the gopls binary or alternate path to use for the gopls binary."
                },
                "dlv": {
                    "type": "string",
                    "default": "dlv",
                    "description": "Alternate tool to use instead of the dlv binary or alternate path to use for the dlv binary."
                },
                "customFormatter": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Custom formatter to use instead of the language server. This should be used with the `custom` option in `#go.formatTool#`."
                }
            },
            "additionalProperties": true,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": {},
            "restricted": true
        },
        "go.terminal.activateEnvironment": {
            "default": true,
            "description": "Apply the Go & PATH environment variables used by the extension to all integrated terminals.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "gopls": {
            "type": "object",
            "markdownDescription": "Configure the default Go language server ('gopls'). In most cases, configuring this section is unnecessary. See [the documentation](https://github.com/golang/tools/blob/master/gopls/doc/settings.md) for all available settings.",
            "scope": 4,
            "properties": {
                "build.allowImplicitNetworkAccess": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) allowImplicitNetworkAccess disables GOPROXY=off, allowing implicit module\ndownloads rather than requiring user action. This option will eventually\nbe removed.\n",
                    "default": false,
                    "scope": "resource"
                },
                "build.allowModfileModifications": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) allowModfileModifications disables -mod=readonly, allowing imports from\nout-of-scope modules. This option will eventually be removed.\n",
                    "default": false,
                    "scope": "resource"
                },
                "build.buildFlags": {
                    "type": "array",
                    "markdownDescription": "buildFlags is the set of flags passed on to the build system when invoked.\nIt is applied to queries like `go list`, which is used when discovering files.\nThe most common use is to set `-tags`.\n\nIf unspecified, values of `go.buildFlags, go.buildTags` will be propagated.\n",
                    "default": [],
                    "scope": "resource"
                },
                "build.directoryFilters": {
                    "type": "array",
                    "markdownDescription": "directoryFilters can be used to exclude unwanted directories from the\nworkspace. By default, all directories are included. Filters are an\noperator, `+` to include and `-` to exclude, followed by a path prefix\nrelative to the workspace folder. They are evaluated in order, and\nthe last filter that applies to a path controls whether it is included.\nThe path prefix can be empty, so an initial `-` excludes everything.\n\nDirectoryFilters also supports the `**` operator to match 0 or more directories.\n\nExamples:\n\nExclude node_modules at current depth: `-node_modules`\n\nExclude node_modules at any depth: `-**/node_modules`\n\nInclude only project_a: `-` (exclude everything), `+project_a`\n\nInclude only project_a, but not node_modules inside it: `-`, `+project_a`, `-project_a/node_modules`\n",
                    "default": [
                        "-**/node_modules"
                    ],
                    "scope": "resource"
                },
                "build.env": {
                    "type": "object",
                    "markdownDescription": "env adds environment variables to external commands run by `gopls`, most notably `go list`.\n",
                    "scope": "resource"
                },
                "build.expandWorkspaceToModule": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) expandWorkspaceToModule instructs `gopls` to adjust the scope of the\nworkspace to find the best available module root. `gopls` first looks for\na go.mod file in any parent directory of the workspace folder, expanding\nthe scope to that directory if it exists. If no viable parent directory is\nfound, gopls will check if there is exactly one child directory containing\na go.mod file, narrowing the scope to that directory if it exists.\n",
                    "default": true,
                    "scope": "resource"
                },
                "build.memoryMode": {
                    "type": "string",
                    "markdownDescription": "(Experimental) memoryMode controls the tradeoff `gopls` makes between memory usage and\ncorrectness.\n\nValues other than `Normal` are untested and may break in surprising ways.\n",
                    "enum": [
                        "DegradeClosed",
                        "Normal"
                    ],
                    "markdownEnumDescriptions": [
                        "`\"DegradeClosed\"`: In DegradeClosed mode, `gopls` will collect less information about\npackages without open files. As a result, features like Find\nReferences and Rename will miss results in such packages.\n",
                        ""
                    ],
                    "default": "Normal",
                    "scope": "resource"
                },
                "build.standaloneTags": {
                    "type": "array",
                    "markdownDescription": "standaloneTags specifies a set of build constraints that identify\nindividual Go source files that make up the entire main package of an\nexecutable.\n\nA common example of standalone main files is the convention of using the\ndirective `//go:build ignore` to denote files that are not intended to be\nincluded in any package, for example because they are invoked directly by\nthe developer using `go run`.\n\nGopls considers a file to be a standalone main file if and only if it has\npackage name \"main\" and has a build directive of the exact form\n\"//go:build tag\" or \"// +build tag\", where tag is among the list of tags\nconfigured by this setting. Notably, if the build constraint is more\ncomplicated than a simple tag (such as the composite constraint\n`//go:build tag && go1.18`), the file is not considered to be a standalone\nmain file.\n\nThis setting is only supported when gopls is built with Go 1.16 or later.\n",
                    "default": [
                        "ignore"
                    ],
                    "scope": "resource"
                },
                "build.templateExtensions": {
                    "type": "array",
                    "markdownDescription": "templateExtensions gives the extensions of file names that are treateed\nas template files. (The extension\nis the part of the file name after the final dot.)\n",
                    "default": [],
                    "scope": "resource"
                },
                "formatting.gofumpt": {
                    "type": "boolean",
                    "markdownDescription": "gofumpt indicates if we should run gofumpt formatting.\n",
                    "default": false,
                    "scope": "resource"
                },
                "formatting.local": {
                    "type": "string",
                    "markdownDescription": "local is the equivalent of the `goimports -local` flag, which puts\nimports beginning with this string after third-party packages. It should\nbe the prefix of the import path whose imports should be grouped\nseparately.\n",
                    "default": "",
                    "scope": "resource"
                },
                "ui.codelenses": {
                    "type": "object",
                    "markdownDescription": "codelenses overrides the enabled/disabled state of code lenses. See the\n\"Code Lenses\" section of the\n[Settings page](https://github.com/golang/tools/blob/master/gopls/doc/settings.md#code-lenses)\nfor the list of supported lenses.\n\nExample Usage:\n\n```json5\n\"gopls\": {\n...\n  \"codelenses\": {\n    \"generate\": false,  // Don't show the `go generate` lens.\n    \"gc_details\": true  // Show a code lens toggling the display of gc's choices.\n  }\n...\n}\n```\n",
                    "scope": "resource",
                    "properties": {
                        "gc_details": {
                            "type": "boolean",
                            "markdownDescription": "Toggle the calculation of gc annotations.",
                            "default": false
                        },
                        "generate": {
                            "type": "boolean",
                            "markdownDescription": "Runs `go generate` for a given directory.",
                            "default": true
                        },
                        "regenerate_cgo": {
                            "type": "boolean",
                            "markdownDescription": "Regenerates cgo definitions.",
                            "default": true
                        },
                        "run_govulncheck": {
                            "type": "boolean",
                            "markdownDescription": "Run vulnerability check (`govulncheck`).",
                            "default": false
                        },
                        "test": {
                            "type": "boolean",
                            "markdownDescription": "Runs `go test` for a specific set of test or benchmark functions.",
                            "default": false
                        },
                        "tidy": {
                            "type": "boolean",
                            "markdownDescription": "Runs `go mod tidy` for a module.",
                            "default": true
                        },
                        "upgrade_dependency": {
                            "type": "boolean",
                            "markdownDescription": "Upgrades a dependency in the go.mod file for a module.",
                            "default": true
                        },
                        "vendor": {
                            "type": "boolean",
                            "markdownDescription": "Runs `go mod vendor` for a module.",
                            "default": true
                        }
                    }
                },
                "ui.completion.completionBudget": {
                    "type": "string",
                    "markdownDescription": "(For Debugging) completionBudget is the soft latency goal for completion requests. Most\nrequests finish in a couple milliseconds, but in some cases deep\ncompletions can take much longer. As we use up our budget we\ndynamically reduce the search scope to ensure we return timely\nresults. Zero means unlimited.\n",
                    "default": "100ms",
                    "scope": "resource"
                },
                "ui.completion.experimentalPostfixCompletions": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) experimentalPostfixCompletions enables artificial method snippets\nsuch as \"someSlice.sort!\".\n",
                    "default": true,
                    "scope": "resource"
                },
                "ui.completion.matcher": {
                    "type": "string",
                    "markdownDescription": "(Advanced) matcher sets the algorithm that is used when calculating completion\ncandidates.\n",
                    "enum": [
                        "CaseInsensitive",
                        "CaseSensitive",
                        "Fuzzy"
                    ],
                    "markdownEnumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "default": "Fuzzy",
                    "scope": "resource"
                },
                "ui.completion.usePlaceholders": {
                    "type": "boolean",
                    "markdownDescription": "placeholders enables placeholders for function parameters or struct\nfields in completion responses.\n",
                    "default": false,
                    "scope": "resource"
                },
                "ui.diagnostic.analyses": {
                    "type": "object",
                    "markdownDescription": "analyses specify analyses that the user would like to enable or disable.\nA map of the names of analysis passes that should be enabled/disabled.\nA full list of analyzers that gopls uses can be found in\n[analyzers.md](https://github.com/golang/tools/blob/master/gopls/doc/analyzers.md).\n\nExample Usage:\n\n```json5\n...\n\"analyses\": {\n  \"unreachable\": false, // Disable the unreachable analyzer.\n  \"unusedparams\": true  // Enable the unusedparams analyzer.\n}\n...\n```\n",
                    "scope": "resource",
                    "properties": {
                        "asmdecl": {
                            "type": "boolean",
                            "markdownDescription": "report mismatches between assembly files and Go declarations",
                            "default": true
                        },
                        "assign": {
                            "type": "boolean",
                            "markdownDescription": "check for useless assignments\n\nThis checker reports assignments of the form x = x or a[i] = a[i].\nThese are almost always useless, and even when they aren't they are\nusually a mistake.",
                            "default": true
                        },
                        "atomic": {
                            "type": "boolean",
                            "markdownDescription": "check for common mistakes using the sync/atomic package\n\nThe atomic checker looks for assignment statements of the form:\n\n\tx = atomic.AddUint64(&x, 1)\n\nwhich are not atomic.",
                            "default": true
                        },
                        "atomicalign": {
                            "type": "boolean",
                            "markdownDescription": "check for non-64-bits-aligned arguments to sync/atomic functions",
                            "default": true
                        },
                        "bools": {
                            "type": "boolean",
                            "markdownDescription": "check for common mistakes involving boolean operators",
                            "default": true
                        },
                        "buildtag": {
                            "type": "boolean",
                            "markdownDescription": "check //go:build and // +build directives",
                            "default": true
                        },
                        "cgocall": {
                            "type": "boolean",
                            "markdownDescription": "detect some violations of the cgo pointer passing rules\n\nCheck for invalid cgo pointer passing.\nThis looks for code that uses cgo to call C code passing values\nwhose types are almost always invalid according to the cgo pointer\nsharing rules.\nSpecifically, it warns about attempts to pass a Go chan, map, func,\nor slice to C, either directly, or via a pointer, array, or struct.",
                            "default": true
                        },
                        "composites": {
                            "type": "boolean",
                            "markdownDescription": "check for unkeyed composite literals\n\nThis analyzer reports a diagnostic for composite literals of struct\ntypes imported from another package that do not use the field-keyed\nsyntax. Such literals are fragile because the addition of a new field\n(even if unexported) to the struct will cause compilation to fail.\n\nAs an example,\n\n\terr = &net.DNSConfigError{err}\n\nshould be replaced by:\n\n\terr = &net.DNSConfigError{Err: err}\n",
                            "default": true
                        },
                        "copylocks": {
                            "type": "boolean",
                            "markdownDescription": "check for locks erroneously passed by value\n\nInadvertently copying a value containing a lock, such as sync.Mutex or\nsync.WaitGroup, may cause both copies to malfunction. Generally such\nvalues should be referred to through a pointer.",
                            "default": true
                        },
                        "deepequalerrors": {
                            "type": "boolean",
                            "markdownDescription": "check for calls of reflect.DeepEqual on error values\n\nThe deepequalerrors checker looks for calls of the form:\n\n    reflect.DeepEqual(err1, err2)\n\nwhere err1 and err2 are errors. Using reflect.DeepEqual to compare\nerrors is discouraged.",
                            "default": true
                        },
                        "directive": {
                            "type": "boolean",
                            "markdownDescription": "check Go toolchain directives such as //go:debug\n\nThis analyzer checks for problems with known Go toolchain directives\nin all Go source files in a package directory, even those excluded by\n//go:build constraints, and all non-Go source files too.\n\nFor //go:debug (see https://go.dev/doc/godebug), the analyzer checks\nthat the directives are placed only in Go source files, only above the\npackage comment, and only in package main or *_test.go files.\n\nSupport for other known directives may be added in the future.\n\nThis analyzer does not check //go:build, which is handled by the\nbuildtag analyzer.\n",
                            "default": true
                        },
                        "embed": {
                            "type": "boolean",
                            "markdownDescription": "check for //go:embed directive import\n\nThis analyzer checks that the embed package is imported when source code contains //go:embed comment directives.\nThe embed package must be imported for //go:embed directives to function.import _ \"embed\".",
                            "default": true
                        },
                        "errorsas": {
                            "type": "boolean",
                            "markdownDescription": "report passing non-pointer or non-error values to errors.As\n\nThe errorsas analysis reports calls to errors.As where the type\nof the second argument is not a pointer to a type implementing error.",
                            "default": true
                        },
                        "fieldalignment": {
                            "type": "boolean",
                            "markdownDescription": "find structs that would use less memory if their fields were sorted\n\nThis analyzer find structs that can be rearranged to use less memory, and provides\na suggested edit with the most compact order.\n\nNote that there are two different diagnostics reported. One checks struct size,\nand the other reports \"pointer bytes\" used. Pointer bytes is how many bytes of the\nobject that the garbage collector has to potentially scan for pointers, for example:\n\n\tstruct { uint32; string }\n\nhave 16 pointer bytes because the garbage collector has to scan up through the string's\ninner pointer.\n\n\tstruct { string; *uint32 }\n\nhas 24 pointer bytes because it has to scan further through the *uint32.\n\n\tstruct { string; uint32 }\n\nhas 8 because it can stop immediately after the string pointer.\n\nBe aware that the most compact order is not always the most efficient.\nIn rare cases it may cause two variables each updated by its own goroutine\nto occupy the same CPU cache line, inducing a form of memory contention\nknown as \"false sharing\" that slows down both goroutines.\n",
                            "default": false
                        },
                        "fillreturns": {
                            "type": "boolean",
                            "markdownDescription": "suggest fixes for errors due to an incorrect number of return values\n\nThis checker provides suggested fixes for type errors of the\ntype \"wrong number of return values (want %d, got %d)\". For example:\n\tfunc m() (int, string, *bool, error) {\n\t\treturn\n\t}\nwill turn into\n\tfunc m() (int, string, *bool, error) {\n\t\treturn 0, \"\", nil, nil\n\t}\n\nThis functionality is similar to https://github.com/sqs/goreturns.\n",
                            "default": true
                        },
                        "fillstruct": {
                            "type": "boolean",
                            "markdownDescription": "note incomplete struct initializations\n\nThis analyzer provides diagnostics for any struct literals that do not have\nany fields initialized. Because the suggested fix for this analysis is\nexpensive to compute, callers should compute it separately, using the\nSuggestedFix function below.\n",
                            "default": true
                        },
                        "httpresponse": {
                            "type": "boolean",
                            "markdownDescription": "check for mistakes using HTTP responses\n\nA common mistake when using the net/http package is to defer a function\ncall to close the http.Response Body before checking the error that\ndetermines whether the response is valid:\n\n\tresp, err := http.Head(url)\n\tdefer resp.Body.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// (defer statement belongs here)\n\nThis checker helps uncover latent nil dereference bugs by reporting a\ndiagnostic for such mistakes.",
                            "default": true
                        },
                        "ifaceassert": {
                            "type": "boolean",
                            "markdownDescription": "detect impossible interface-to-interface type assertions\n\nThis checker flags type assertions v.(T) and corresponding type-switch cases\nin which the static type V of v is an interface that cannot possibly implement\nthe target interface T. This occurs when V and T contain methods with the same\nname but different signatures. Example:\n\n\tvar v interface {\n\t\tRead()\n\t}\n\t_ = v.(io.Reader)\n\nThe Read method in v has a different signature than the Read method in\nio.Reader, so this assertion cannot succeed.",
                            "default": true
                        },
                        "infertypeargs": {
                            "type": "boolean",
                            "markdownDescription": "check for unnecessary type arguments in call expressions\n\nExplicit type arguments may be omitted from call expressions if they can be\ninferred from function arguments, or from other type arguments:\n\n\tfunc f[T any](T) {}\n\t\n\tfunc _() {\n\t\tf[string](\"foo\") // string could be inferred\n\t}\n",
                            "default": true
                        },
                        "loopclosure": {
                            "type": "boolean",
                            "markdownDescription": "check references to loop variables from within nested functions\n\nThis analyzer reports places where a function literal references the\niteration variable of an enclosing loop, and the loop calls the function\nin such a way (e.g. with go or defer) that it may outlive the loop\niteration and possibly observe the wrong value of the variable.\n\nIn this example, all the deferred functions run after the loop has\ncompleted, so all observe the final value of v.\n\n\tfor _, v := range list {\n\t    defer func() {\n\t        use(v) // incorrect\n\t    }()\n\t}\n\nOne fix is to create a new variable for each iteration of the loop:\n\n\tfor _, v := range list {\n\t    v := v // new var per iteration\n\t    defer func() {\n\t        use(v) // ok\n\t    }()\n\t}\n\nThe next example uses a go statement and has a similar problem.\nIn addition, it has a data race because the loop updates v\nconcurrent with the goroutines accessing it.\n\n\tfor _, v := range elem {\n\t    go func() {\n\t        use(v)  // incorrect, and a data race\n\t    }()\n\t}\n\nA fix is the same as before. The checker also reports problems\nin goroutines started by golang.org/x/sync/errgroup.Group.\nA hard-to-spot variant of this form is common in parallel tests:\n\n\tfunc Test(t *testing.T) {\n\t    for _, test := range tests {\n\t        t.Run(test.name, func(t *testing.T) {\n\t            t.Parallel()\n\t            use(test) // incorrect, and a data race\n\t        })\n\t    }\n\t}\n\nThe t.Parallel() call causes the rest of the function to execute\nconcurrent with the loop.\n\nThe analyzer reports references only in the last statement,\nas it is not deep enough to understand the effects of subsequent\nstatements that might render the reference benign.\n(\"Last statement\" is defined recursively in compound\nstatements such as if, switch, and select.)\n\nSee: https://golang.org/doc/go_faq.html#closures_and_goroutines",
                            "default": true
                        },
                        "lostcancel": {
                            "type": "boolean",
                            "markdownDescription": "check cancel func returned by context.WithCancel is called\n\nThe cancellation function returned by context.WithCancel, WithTimeout,\nand WithDeadline must be called or the new context will remain live\nuntil its parent context is cancelled.\n(The background context is never cancelled.)",
                            "default": true
                        },
                        "nilfunc": {
                            "type": "boolean",
                            "markdownDescription": "check for useless comparisons between functions and nil\n\nA useless comparison is one like f == nil as opposed to f() == nil.",
                            "default": true
                        },
                        "nilness": {
                            "type": "boolean",
                            "markdownDescription": "check for redundant or impossible nil comparisons\n\nThe nilness checker inspects the control-flow graph of each function in\na package and reports nil pointer dereferences, degenerate nil\npointers, and panics with nil values. A degenerate comparison is of the form\nx==nil or x!=nil where x is statically known to be nil or non-nil. These are\noften a mistake, especially in control flow related to errors. Panics with nil\nvalues are checked because they are not detectable by\n\n\tif r := recover(); r != nil {\n\nThis check reports conditions such as:\n\n\tif f == nil { // impossible condition (f is a function)\n\t}\n\nand:\n\n\tp := &v\n\t...\n\tif p != nil { // tautological condition\n\t}\n\nand:\n\n\tif p == nil {\n\t\tprint(*p) // nil dereference\n\t}\n\nand:\n\n\tif p == nil {\n\t\tpanic(p)\n\t}",
                            "default": false
                        },
                        "nonewvars": {
                            "type": "boolean",
                            "markdownDescription": "suggested fixes for \"no new vars on left side of :=\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"no new vars on left side of :=\". For example:\n\tz := 1\n\tz := 2\nwill turn into\n\tz := 1\n\tz = 2\n",
                            "default": true
                        },
                        "noresultvalues": {
                            "type": "boolean",
                            "markdownDescription": "suggested fixes for unexpected return values\n\nThis checker provides suggested fixes for type errors of the\ntype \"no result values expected\" or \"too many return values\".\nFor example:\n\tfunc z() { return nil }\nwill turn into\n\tfunc z() { return }\n",
                            "default": true
                        },
                        "printf": {
                            "type": "boolean",
                            "markdownDescription": "check consistency of Printf format strings and arguments\n\nThe check applies to calls of the formatting functions such as\n[fmt.Printf] and [fmt.Sprintf], as well as any detected wrappers of\nthose functions.\n\nIn this example, the %d format operator requires an integer operand:\n\n\tfmt.Printf(\"%d\", \"hello\") // fmt.Printf format %d has arg \"hello\" of wrong type string\n\nSee the documentation of the fmt package for the complete set of\nformat operators and their operand types.\n\nTo enable printf checking on a function that is not found by this\nanalyzer's heuristics (for example, because control is obscured by\ndynamic method calls), insert a bogus call:\n\n\tfunc MyPrintf(format string, args ...any) {\n\t\tif false {\n\t\t\t_ = fmt.Sprintf(format, args...) // enable printf checker\n\t\t}\n\t\t...\n\t}\n\nThe -funcs flag specifies a comma-separated list of names of additional\nknown formatting functions or methods. If the name contains a period,\nit must denote a specific function using one of the following forms:\n\n\tdir/pkg.Function\n\tdir/pkg.Type.Method\n\t(*dir/pkg.Type).Method\n\nOtherwise the name is interpreted as a case-insensitive unqualified\nidentifier such as \"errorf\". Either way, if a listed name ends in f, the\nfunction is assumed to be Printf-like, taking a format string before the\nargument list. Otherwise it is assumed to be Print-like, taking a list\nof arguments with no format string.",
                            "default": true
                        },
                        "shadow": {
                            "type": "boolean",
                            "markdownDescription": "check for possible unintended shadowing of variables\n\nThis analyzer check for shadowed variables.\nA shadowed variable is a variable declared in an inner scope\nwith the same name and type as a variable in an outer scope,\nand where the outer variable is mentioned after the inner one\nis declared.\n\n(This definition can be refined; the module generates too many\nfalse positives and is not yet enabled by default.)\n\nFor example:\n\n\tfunc BadRead(f *os.File, buf []byte) error {\n\t\tvar err error\n\t\tfor {\n\t\t\tn, err := f.Read(buf) // shadows the function variable 'err'\n\t\t\tif err != nil {\n\t\t\t\tbreak // causes return of wrong value\n\t\t\t}\n\t\t\tfoo(buf)\n\t\t}\n\t\treturn err\n\t}",
                            "default": false
                        },
                        "shift": {
                            "type": "boolean",
                            "markdownDescription": "check for shifts that equal or exceed the width of the integer",
                            "default": true
                        },
                        "simplifycompositelit": {
                            "type": "boolean",
                            "markdownDescription": "check for composite literal simplifications\n\nAn array, slice, or map composite literal of the form:\n\t[]T{T{}, T{}}\nwill be simplified to:\n\t[]T{{}, {}}\n\nThis is one of the simplifications that \"gofmt -s\" applies.",
                            "default": true
                        },
                        "simplifyrange": {
                            "type": "boolean",
                            "markdownDescription": "check for range statement simplifications\n\nA range of the form:\n\tfor x, _ = range v {...}\nwill be simplified to:\n\tfor x = range v {...}\n\nA range of the form:\n\tfor _ = range v {...}\nwill be simplified to:\n\tfor range v {...}\n\nThis is one of the simplifications that \"gofmt -s\" applies.",
                            "default": true
                        },
                        "simplifyslice": {
                            "type": "boolean",
                            "markdownDescription": "check for slice simplifications\n\nA slice expression of the form:\n\ts[a:len(s)]\nwill be simplified to:\n\ts[a:]\n\nThis is one of the simplifications that \"gofmt -s\" applies.",
                            "default": true
                        },
                        "sortslice": {
                            "type": "boolean",
                            "markdownDescription": "check the argument type of sort.Slice\n\nsort.Slice requires an argument of a slice type. Check that\nthe interface{} value passed to sort.Slice is actually a slice.",
                            "default": true
                        },
                        "stdmethods": {
                            "type": "boolean",
                            "markdownDescription": "check signature of methods of well-known interfaces\n\nSometimes a type may be intended to satisfy an interface but may fail to\ndo so because of a mistake in its method signature.\nFor example, the result of this WriteTo method should be (int64, error),\nnot error, to satisfy io.WriterTo:\n\n\ttype myWriterTo struct{...}\n\tfunc (myWriterTo) WriteTo(w io.Writer) error { ... }\n\nThis check ensures that each method whose name matches one of several\nwell-known interface methods from the standard library has the correct\nsignature for that interface.\n\nChecked method names include:\n\n\tFormat GobEncode GobDecode MarshalJSON MarshalXML\n\tPeek ReadByte ReadFrom ReadRune Scan Seek\n\tUnmarshalJSON UnreadByte UnreadRune WriteByte\n\tWriteTo",
                            "default": true
                        },
                        "stringintconv": {
                            "type": "boolean",
                            "markdownDescription": "check for string(int) conversions\n\nThis checker flags conversions of the form string(x) where x is an integer\n(but not byte or rune) type. Such conversions are discouraged because they\nreturn the UTF-8 representation of the Unicode code point x, and not a decimal\nstring representation of x as one might expect. Furthermore, if x denotes an\ninvalid code point, the conversion cannot be statically rejected.\n\nFor conversions that intend on using the code point, consider replacing them\nwith string(rune(x)). Otherwise, strconv.Itoa and its equivalents return the\nstring representation of the value in the desired base.",
                            "default": true
                        },
                        "structtag": {
                            "type": "boolean",
                            "markdownDescription": "check that struct field tags conform to reflect.StructTag.Get\n\nAlso report certain struct tags (json, xml) used with unexported fields.",
                            "default": true
                        },
                        "stubmethods": {
                            "type": "boolean",
                            "markdownDescription": "stub methods analyzer\n\nThis analyzer generates method stubs for concrete types\nin order to implement a target interface",
                            "default": true
                        },
                        "testinggoroutine": {
                            "type": "boolean",
                            "markdownDescription": "report calls to (*testing.T).Fatal from goroutines started by a test.\n\nFunctions that abruptly terminate a test, such as the Fatal, Fatalf, FailNow, and\nSkip{,f,Now} methods of *testing.T, must be called from the test goroutine itself.\nThis checker detects calls to these functions that occur within a goroutine\nstarted by the test. For example:\n\n\tfunc TestFoo(t *testing.T) {\n\t    go func() {\n\t        t.Fatal(\"oops\") // error: (*T).Fatal called from non-test goroutine\n\t    }()\n\t}",
                            "default": true
                        },
                        "tests": {
                            "type": "boolean",
                            "markdownDescription": "check for common mistaken usages of tests and examples\n\nThe tests checker walks Test, Benchmark, Fuzzing and Example functions checking\nmalformed names, wrong signatures and examples documenting non-existent\nidentifiers.\n\nPlease see the documentation for package testing in golang.org/pkg/testing\nfor the conventions that are enforced for Tests, Benchmarks, and Examples.",
                            "default": true
                        },
                        "timeformat": {
                            "type": "boolean",
                            "markdownDescription": "check for calls of (time.Time).Format or time.Parse with 2006-02-01\n\nThe timeformat checker looks for time formats with the 2006-02-01 (yyyy-dd-mm)\nformat. Internationally, \"yyyy-dd-mm\" does not occur in common calendar date\nstandards, and so it is more likely that 2006-01-02 (yyyy-mm-dd) was intended.",
                            "default": true
                        },
                        "undeclaredname": {
                            "type": "boolean",
                            "markdownDescription": "suggested fixes for \"undeclared name: <>\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"undeclared name: <>\". It will either insert a new statement,\nsuch as:\n\n\"<> := \"\n\nor a new function declaration, such as:\n\nfunc <>(inferred parameters) {\n\tpanic(\"implement me!\")\n}\n",
                            "default": true
                        },
                        "unmarshal": {
                            "type": "boolean",
                            "markdownDescription": "report passing non-pointer or non-interface values to unmarshal\n\nThe unmarshal analysis reports calls to functions such as json.Unmarshal\nin which the argument type is not a pointer or an interface.",
                            "default": true
                        },
                        "unreachable": {
                            "type": "boolean",
                            "markdownDescription": "check for unreachable code\n\nThe unreachable analyzer finds statements that execution can never reach\nbecause they are preceded by an return statement, a call to panic, an\ninfinite loop, or similar constructs.",
                            "default": true
                        },
                        "unsafeptr": {
                            "type": "boolean",
                            "markdownDescription": "check for invalid conversions of uintptr to unsafe.Pointer\n\nThe unsafeptr analyzer reports likely incorrect uses of unsafe.Pointer\nto convert integers to pointers. A conversion from uintptr to\nunsafe.Pointer is invalid if it implies that there is a uintptr-typed\nword in memory that holds a pointer value, because that word will be\ninvisible to stack copying and to the garbage collector.",
                            "default": true
                        },
                        "unusedparams": {
                            "type": "boolean",
                            "markdownDescription": "check for unused parameters of functions\n\nThe unusedparams analyzer checks functions to see if there are\nany parameters that are not being used.\n\nTo reduce false positives it ignores:\n- methods\n- parameters that do not have a name or are underscored\n- functions in test files\n- functions with empty bodies or those with just a return stmt",
                            "default": false
                        },
                        "unusedresult": {
                            "type": "boolean",
                            "markdownDescription": "check for unused results of calls to some functions\n\nSome functions like fmt.Errorf return a result and have no side\neffects, so it is always a mistake to discard the result. Other\nfunctions may return an error that must not be ignored, or a cleanup\noperation that must be called. This analyzer reports calls to\nfunctions like these when the result of the call is ignored.\n\nThe set of functions may be controlled using flags.",
                            "default": true
                        },
                        "unusedvariable": {
                            "type": "boolean",
                            "markdownDescription": "check for unused variables\n\nThe unusedvariable analyzer suggests fixes for unused variables errors.\n",
                            "default": false
                        },
                        "unusedwrite": {
                            "type": "boolean",
                            "markdownDescription": "checks for unused writes\n\nThe analyzer reports instances of writes to struct fields and\narrays that are never read. Specifically, when a struct object\nor an array is copied, its elements are copied implicitly by\nthe compiler, and any element write to this copy does nothing\nwith the original object.\n\nFor example:\n\n\ttype T struct { x int }\n\n\tfunc f(input []T) {\n\t\tfor i, v := range input {  // v is a copy\n\t\t\tv.x = i  // unused write to field x\n\t\t}\n\t}\n\nAnother example is about non-pointer receiver:\n\n\ttype T struct { x int }\n\n\tfunc (t T) f() {  // t is a copy\n\t\tt.x = i  // unused write to field x\n\t}",
                            "default": false
                        },
                        "useany": {
                            "type": "boolean",
                            "markdownDescription": "check for constraints that could be simplified to \"any\"",
                            "default": false
                        }
                    }
                },
                "ui.diagnostic.annotations": {
                    "type": "object",
                    "markdownDescription": "(Experimental) annotations specifies the various kinds of optimization diagnostics\nthat should be reported by the gc_details command.\n",
                    "scope": "resource",
                    "properties": {
                        "bounds": {
                            "type": "boolean",
                            "markdownDescription": "`\"bounds\"` controls bounds checking diagnostics.\n",
                            "default": true
                        },
                        "escape": {
                            "type": "boolean",
                            "markdownDescription": "`\"escape\"` controls diagnostics about escape choices.\n",
                            "default": true
                        },
                        "inline": {
                            "type": "boolean",
                            "markdownDescription": "`\"inline\"` controls diagnostics about inlining choices.\n",
                            "default": true
                        },
                        "nil": {
                            "type": "boolean",
                            "markdownDescription": "`\"nil\"` controls nil checks.\n",
                            "default": true
                        }
                    }
                },
                "ui.diagnostic.diagnosticsDelay": {
                    "type": "string",
                    "markdownDescription": "(Advanced) diagnosticsDelay controls the amount of time that gopls waits\nafter the most recent file modification before computing deep diagnostics.\nSimple diagnostics (parsing and type-checking) are always run immediately\non recently modified packages.\n\nThis option must be set to a valid duration string, for example `\"250ms\"`.\n",
                    "default": "1s",
                    "scope": "resource"
                },
                "ui.diagnostic.staticcheck": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) staticcheck enables additional analyses from staticcheck.io.\nThese analyses are documented on\n[Staticcheck's website](https://staticcheck.io/docs/checks/).\n",
                    "default": false,
                    "scope": "resource"
                },
                "ui.documentation.hoverKind": {
                    "type": "string",
                    "markdownDescription": "hoverKind controls the information that appears in the hover text.\nSingleLine and Structured are intended for use only by authors of editor plugins.\n",
                    "enum": [
                        "FullDocumentation",
                        "NoDocumentation",
                        "SingleLine",
                        "Structured",
                        "SynopsisDocumentation"
                    ],
                    "markdownEnumDescriptions": [
                        "",
                        "",
                        "",
                        "`\"Structured\"` is an experimental setting that returns a structured hover format.\nThis format separates the signature from the documentation, so that the client\ncan do more manipulation of these fields.\n\nThis should only be used by clients that support this behavior.\n",
                        ""
                    ],
                    "default": "FullDocumentation",
                    "scope": "resource"
                },
                "ui.documentation.linkTarget": {
                    "type": "string",
                    "markdownDescription": "linkTarget controls where documentation links go.\nIt might be one of:\n\n* `\"godoc.org\"`\n* `\"pkg.go.dev\"`\n\nIf company chooses to use its own `godoc.org`, its address can be used as well.\n\nModules matching the GOPRIVATE environment variable will not have\ndocumentation links in hover.\n",
                    "default": "pkg.go.dev",
                    "scope": "resource"
                },
                "ui.documentation.linksInHover": {
                    "type": "boolean",
                    "markdownDescription": "linksInHover toggles the presence of links to documentation in hover.\n",
                    "default": true,
                    "scope": "resource"
                },
                "ui.navigation.importShortcut": {
                    "type": "string",
                    "markdownDescription": "importShortcut specifies whether import statements should link to\ndocumentation or go to definitions.\n",
                    "enum": [
                        "Both",
                        "Definition",
                        "Link"
                    ],
                    "markdownEnumDescriptions": [
                        "",
                        "",
                        ""
                    ],
                    "default": "Both",
                    "scope": "resource"
                },
                "ui.navigation.symbolMatcher": {
                    "type": "string",
                    "markdownDescription": "(Advanced) symbolMatcher sets the algorithm that is used when finding workspace symbols.\n",
                    "enum": [
                        "CaseInsensitive",
                        "CaseSensitive",
                        "FastFuzzy",
                        "Fuzzy"
                    ],
                    "markdownEnumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "default": "FastFuzzy",
                    "scope": "resource"
                },
                "ui.navigation.symbolScope": {
                    "type": "string",
                    "markdownDescription": "symbolScope controls which packages are searched for workspace/symbol\nrequests. The default value, \"workspace\", searches only workspace\npackages. The legacy behavior, \"all\", causes all loaded packages to be\nsearched, including dependencies; this is more expensive and may return\nunwanted results.\n",
                    "enum": [
                        "all",
                        "workspace"
                    ],
                    "markdownEnumDescriptions": [
                        "`\"all\"` matches symbols in any loaded package, including\ndependencies.\n",
                        "`\"workspace\"` matches symbols in workspace packages only.\n"
                    ],
                    "default": "all",
                    "scope": "resource"
                },
                "ui.navigation.symbolStyle": {
                    "type": "string",
                    "markdownDescription": "(Advanced) symbolStyle controls how symbols are qualified in symbol responses.\n\nExample Usage:\n\n```json5\n\"gopls\": {\n...\n  \"symbolStyle\": \"Dynamic\",\n...\n}\n```\n",
                    "enum": [
                        "Dynamic",
                        "Full",
                        "Package"
                    ],
                    "markdownEnumDescriptions": [
                        "`\"Dynamic\"` uses whichever qualifier results in the highest scoring\nmatch for the given symbol query. Here a \"qualifier\" is any \"/\" or \".\"\ndelimited suffix of the fully qualified symbol. i.e. \"to/pkg.Foo.Field\" or\njust \"Foo.Field\".\n",
                        "`\"Full\"` is fully qualified symbols, i.e.\n\"path/to/pkg.Foo.Field\".\n",
                        "`\"Package\"` is package qualified symbols i.e.\n\"pkg.Foo.Field\".\n"
                    ],
                    "default": "Dynamic",
                    "scope": "resource"
                },
                "ui.noSemanticNumber": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) noSemanticNumber  turns off the sending of the semantic token 'number'\n",
                    "default": false,
                    "scope": "resource"
                },
                "ui.noSemanticString": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) noSemanticString turns off the sending of the semantic token 'string'\n",
                    "default": false,
                    "scope": "resource"
                },
                "ui.semanticTokens": {
                    "type": "boolean",
                    "markdownDescription": "(Experimental) semanticTokens controls whether the LSP server will send\nsemantic tokens to the client.\n",
                    "default": false,
                    "scope": "resource"
                },
                "verboseOutput": {
                    "type": "boolean",
                    "markdownDescription": "(For Debugging) verboseOutput enables additional debug logging.\n",
                    "default": false,
                    "scope": "resource"
                }
            },
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "default": {},
            "restricted": false
        },
        "go.diagnostic.vulncheck": {
            "type": "string",
            "markdownDescription": "(Experimental) vulncheck enables vulnerability scanning.\n",
            "enum": [
                "Imports",
                "Off"
            ],
            "markdownEnumDescriptions": [
                "`\"Imports\"`: In Imports mode, `gopls` will report vulnerabilities that affect packages\ndirectly and indirectly used by the analyzed main module.\n",
                "`\"Off\"`: Disable vulnerability analysis.\n"
            ],
            "default": "Off",
            "scope": 4,
            "source": {
                "id": "golang.go",
                "displayName": "Go"
            },
            "defaultDefaultValue": "Off",
            "restricted": false
        },
        "todo-tree.regex.regex": {
            "default": "(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)",
            "markdownDescription": "Regular expression for matching TODOs. Note: **($TAGS)** will be replaced by the expanded tag list. For some of the extension features to work, **($TAGS)** should be present in the regex, however, the basic functionality should still work if you need to explicitly expand the tag list.",
            "type": "string",
            "minLength": 1,
            "scope": 5,
            "source": {
                "id": "Gruntfuggly.todo-tree",
                "displayName": "Todo Tree"
            },
            "defaultDefaultValue": "(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)",
            "restricted": false
        },
        "testExplorer.onStart": {
            "description": "Retire or reset all test states whenever a test run is started",
            "type": [
                "string",
                "null"
            ],
            "enum": [
                "retire",
                "reset",
                null
            ],
            "enumDescriptions": [
                "Retire all test states whenever a test run is started",
                "Reset all test states whenever a test run is started",
                "Don't change the test states when a test run is started"
            ],
            "default": null,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "testExplorer.onReload": {
            "description": "Retire or reset all test states whenever the test tree is reloaded",
            "type": [
                "string",
                "null"
            ],
            "enum": [
                "retire",
                "reset",
                null
            ],
            "enumDescriptions": [
                "Retire all test states whenever the test tree is reloaded",
                "Reset all test states whenever the test tree is reloaded",
                "Don't change the test states when the test tree is reloaded"
            ],
            "default": null,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "testExplorer.codeLens": {
            "description": "Show a CodeLens above each test or suite for running or debugging the tests",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testExplorer.gutterDecoration": {
            "description": "Show the state of each test in the editor using Gutter Decorations",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testExplorer.errorDecoration": {
            "description": "Show error messages from test failures as decorations in the editor",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testExplorer.errorDecorationHover": {
            "description": "Provide hover messages for the error decorations in the editor",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testExplorer.sort": {
            "description": "Sort the tests and suites by label or location. If this is not set (or set to null), they will be shown in the order that they were received from the adapter",
            "type": [
                "string",
                "null"
            ],
            "enum": [
                "byLabel",
                "byLocation",
                "byLabelWithSuitesFirst",
                "byLocationWithSuitesFirst",
                null
            ],
            "enumDescriptions": [
                "sort by label",
                "sort by location (filename and line), if multiple tests or suites appear at the same location, they are sorted by label",
                "sort by label, but always put the suites on top",
                "sort by location, but always put the suites on top",
                "don't sort, the tests and suites will be shown in the order that they were received from the adapter"
            ],
            "default": null,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "testExplorer.showExpandButton": {
            "description": "Show a button for expanding the top nodes of the test tree, recursively for the given number of levels",
            "type": "number",
            "default": 3,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": 3,
            "restricted": false
        },
        "testExplorer.showCollapseButton": {
            "description": "Show a button for collapsing the nodes of the test tree",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testExplorer.addToEditorContextMenu": {
            "description": "Add menu items to the editor context menu for running and debugging the tests in the current file",
            "type": "boolean",
            "default": false,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "testExplorer.showOnRun": {
            "description": "Switch to the Test Explorer view whenever a test run is started",
            "type": "boolean",
            "default": false,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "testExplorer.mergeSuites": {
            "description": "Merge suites with the same label and parent",
            "type": "boolean",
            "default": false,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "testExplorer.hideEmptyLog": {
            "description": "Hide the output channel used to show a test's log when the user clicks on a test whose log is empty",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "testExplorer.hideWhen": {
            "description": "Hide the Test Explorer when no test adapters have been registered or when no tests have been found",
            "type": "string",
            "enum": [
                "never",
                "noAdapters",
                "noTests"
            ],
            "default": "never",
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "testExplorer.useNativeTesting": {
            "description": "Disable the Test Explorer UI and use VSCode's native Testing UI instead",
            "type": "boolean",
            "default": false,
            "scope": 4,
            "source": {
                "id": "hbenl.vscode-test-explorer",
                "displayName": "Test Explorer UI"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.latex.recipes": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "tools"
                ],
                "additionalProperties": false
            },
            "default": [
                {
                    "name": "latexmk",
                    "tools": [
                        "latexmk"
                    ]
                },
                {
                    "name": "latexmk (latexmkrc)",
                    "tools": [
                        "latexmk_rconly"
                    ]
                },
                {
                    "name": "latexmk (lualatex)",
                    "tools": [
                        "lualatexmk"
                    ]
                },
                {
                    "name": "latexmk (xelatex)",
                    "tools": [
                        "xelatexmk"
                    ]
                },
                {
                    "name": "pdflatex -> bibtex -> pdflatex * 2",
                    "tools": [
                        "pdflatex",
                        "bibtex",
                        "pdflatex",
                        "pdflatex"
                    ]
                },
                {
                    "name": "Compile Rnw files",
                    "tools": [
                        "rnw2tex",
                        "latexmk"
                    ]
                },
                {
                    "name": "Compile Jnw files",
                    "tools": [
                        "jnw2tex",
                        "latexmk"
                    ]
                },
                {
                    "name": "Compile Pnw files",
                    "tools": [
                        "pnw2tex",
                        "latexmk"
                    ]
                },
                {
                    "name": "tectonic",
                    "tools": [
                        "tectonic"
                    ]
                }
            ],
            "markdownDescription": "Define LaTeX compiling recipes. Each recipe in the list is an object containing its name and the names of tools to be used sequentially, which are defined in `#latex-workshop.latex.tools#`. By default, the first recipe is used to compile the project. For details, please visit https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#latex-recipes.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                {
                    "name": "latexmk",
                    "tools": [
                        "latexmk"
                    ]
                },
                {
                    "name": "latexmk (latexmkrc)",
                    "tools": [
                        "latexmk_rconly"
                    ]
                },
                {
                    "name": "latexmk (lualatex)",
                    "tools": [
                        "lualatexmk"
                    ]
                },
                {
                    "name": "latexmk (xelatex)",
                    "tools": [
                        "xelatexmk"
                    ]
                },
                {
                    "name": "pdflatex -> bibtex -> pdflatex * 2",
                    "tools": [
                        "pdflatex",
                        "bibtex",
                        "pdflatex",
                        "pdflatex"
                    ]
                },
                {
                    "name": "Compile Rnw files",
                    "tools": [
                        "rnw2tex",
                        "latexmk"
                    ]
                },
                {
                    "name": "Compile Jnw files",
                    "tools": [
                        "jnw2tex",
                        "latexmk"
                    ]
                },
                {
                    "name": "Compile Pnw files",
                    "tools": [
                        "pnw2tex",
                        "latexmk"
                    ]
                },
                {
                    "name": "tectonic",
                    "tools": [
                        "tectonic"
                    ]
                }
            ],
            "restricted": false
        },
        "latex-workshop.latex.recipe.default": {
            "scope": 4,
            "type": "string",
            "default": "first",
            "markdownDescription": "Define which recipe is used by `#latex-workshop.build#`. It also applies to auto build. Recipes are referred to by their names as defined in `#latex-workshop.latex.recipes#`. Note there are two particular values: \n- `first` means to use the first recipe in `#latex-workshop.latex.recipes#`;\n- `lastUsed` means to use the last run recipe.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "first",
            "restricted": false
        },
        "latex-workshop.latex.tools": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "env": {
                        "type": "object"
                    }
                },
                "required": [
                    "name",
                    "command"
                ],
                "additionalProperties": false
            },
            "default": [
                {
                    "name": "latexmk",
                    "command": "latexmk",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "-pdf",
                        "-outdir=%OUTDIR%",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "lualatexmk",
                    "command": "latexmk",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "-lualatex",
                        "-outdir=%OUTDIR%",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "xelatexmk",
                    "command": "latexmk",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "-xelatex",
                        "-outdir=%OUTDIR%",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "latexmk_rconly",
                    "command": "latexmk",
                    "args": [
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "pdflatex",
                    "command": "pdflatex",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "bibtex",
                    "command": "bibtex",
                    "args": [
                        "%DOCFILE%"
                    ],
                    "env": {}
                },
                {
                    "name": "rnw2tex",
                    "command": "Rscript",
                    "args": [
                        "-e",
                        "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
                    ],
                    "env": {}
                },
                {
                    "name": "jnw2tex",
                    "command": "julia",
                    "args": [
                        "-e",
                        "using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"
                    ],
                    "env": {}
                },
                {
                    "name": "jnw2texminted",
                    "command": "julia",
                    "args": [
                        "-e",
                        "using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"
                    ],
                    "env": {}
                },
                {
                    "name": "pnw2tex",
                    "command": "pweave",
                    "args": [
                        "-f",
                        "tex",
                        "%DOC_EXT%"
                    ],
                    "env": {}
                },
                {
                    "name": "pnw2texminted",
                    "command": "pweave",
                    "args": [
                        "-f",
                        "texminted",
                        "%DOC_EXT%"
                    ],
                    "env": {}
                },
                {
                    "name": "tectonic",
                    "command": "tectonic",
                    "args": [
                        "--synctex",
                        "--keep-logs",
                        "%DOC%.tex"
                    ],
                    "env": {}
                }
            ],
            "markdownDescription": "Define LaTeX compiling tools to be used in recipes. Each tool is labeled by its `name`. When invoked, `command` is spawned with arguments defined in `args` and environment variables defined in `env`. Typically no spaces should appear in each argument unless in paths. List of available placeholders: `%DOC%`, `%DOC_W32%, %DOC_EXT%`, `%DOC_EXT_W32%`, `%DOCFILE%`, `%DOCFILE_EXT%`, `%DIR%`, `%DIR_W32%`, `%TMPDIR%` and `%OUTDIR%`, `%OUTDIR_W32%`. Please visit https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders for a complete list of all placeholders.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                {
                    "name": "latexmk",
                    "command": "latexmk",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "-pdf",
                        "-outdir=%OUTDIR%",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "lualatexmk",
                    "command": "latexmk",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "-lualatex",
                        "-outdir=%OUTDIR%",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "xelatexmk",
                    "command": "latexmk",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "-xelatex",
                        "-outdir=%OUTDIR%",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "latexmk_rconly",
                    "command": "latexmk",
                    "args": [
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "pdflatex",
                    "command": "pdflatex",
                    "args": [
                        "-synctex=1",
                        "-interaction=nonstopmode",
                        "-file-line-error",
                        "%DOC%"
                    ],
                    "env": {}
                },
                {
                    "name": "bibtex",
                    "command": "bibtex",
                    "args": [
                        "%DOCFILE%"
                    ],
                    "env": {}
                },
                {
                    "name": "rnw2tex",
                    "command": "Rscript",
                    "args": [
                        "-e",
                        "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
                    ],
                    "env": {}
                },
                {
                    "name": "jnw2tex",
                    "command": "julia",
                    "args": [
                        "-e",
                        "using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"
                    ],
                    "env": {}
                },
                {
                    "name": "jnw2texminted",
                    "command": "julia",
                    "args": [
                        "-e",
                        "using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"
                    ],
                    "env": {}
                },
                {
                    "name": "pnw2tex",
                    "command": "pweave",
                    "args": [
                        "-f",
                        "tex",
                        "%DOC_EXT%"
                    ],
                    "env": {}
                },
                {
                    "name": "pnw2texminted",
                    "command": "pweave",
                    "args": [
                        "-f",
                        "texminted",
                        "%DOC_EXT%"
                    ],
                    "env": {}
                },
                {
                    "name": "tectonic",
                    "command": "tectonic",
                    "args": [
                        "--synctex",
                        "--keep-logs",
                        "%DOC%.tex"
                    ],
                    "env": {}
                }
            ],
            "restricted": false
        },
        "latex-workshop.latex.magic.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "%DOC%"
            ],
            "markdownDescription": "Define the arguments to be input to magic command executable. This can be overridden by using \"% !TeX options\".",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "%DOC%"
            ],
            "restricted": false
        },
        "latex-workshop.latex.magic.bib.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "%DOCFILE%"
            ],
            "markdownDescription": "Define the arguments to be input to BIB magic command executable. This can be overridden by using \"% !BIB options\".",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "%DOCFILE%"
            ],
            "restricted": false
        },
        "latex-workshop.latex.external.build.command": {
            "scope": 4,
            "type": "string",
            "default": "",
            "markdownDescription": "The external command to execute when calling latex-workshop.build. This is useful when compiling relies on a Makefile or a bespoke script. When defined, it completely bypasses the recipes and root file detection mechanism.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.latex.external.build.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "The arguments of `#latex-workshop.latex.external.build.command#` when calling latex-workshop.build.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.latex.build.forceRecipeUsage": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Force the use the recipe mechanism even if some magic comments are present.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latex.outDir": {
            "scope": 4,
            "type": "string",
            "default": "%DIR%",
            "markdownDescription": "The directory where the extension tries to find project files (e.g., PDF and SyncTeX files) are located. Both relative and absolute paths are supported. Relative path start from the root file location, so beware if it is located in sub-directory. The path must not contain a trailing slash. The LaTeX toolchain should output files to this path. For a list of supported placeholders, please visit https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "%DIR%",
            "restricted": false
        },
        "latex-workshop.latex.jobname": {
            "scope": 4,
            "type": "string",
            "default": "",
            "markdownDescription": "The jobname argument of the compiling tool, which is used by the extension to find project files (e.g., PDF and SyncTeX files). This config should be set identical to the value provided to the `-jobname=` argument, and should not have placeholders. Leave the config empty to ignore jobname and keep the default behavior.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "latex-workshop.latex.search.rootFiles.include": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "**/*.tex",
                "**/*.rnw",
                "**/*.Rnw"
            ],
            "markdownDescription": "Patterns of files to consider for the root detection mechanism. Relative paths are computed from the workspace folder. To detect the root file and the tex file tree, we parse all the `.tex` listed here. If you want to specify all `.tex` files inside directory, say `foo`, and all its subdirectories recursively, you need to use `**/foo/**/*.tex`. If you only want to match `.tex` files at the top level of the workspace, use `*.tex`. For more details, see https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#multi-file-projects",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "**/*.tex",
                "**/*.rnw",
                "**/*.Rnw"
            ],
            "restricted": false
        },
        "latex-workshop.latex.search.rootFiles.exclude": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "Patterns of files to exclude from the root detection mechanism. See also `#latex-workshop.latex.search.rootFiles.include#`. For more details, see the https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#multi-file-projects.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.latex.rootFile.useSubFile": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "markdownDescription": "When the `subfile` package is used, either the main file or any subfile containing `\\documentclass[main.tex]{subfile}` can be LaTeXing. When `true`, the extension uses the subfile as the rootFile for the `autobuild`, `clean` and `synctex` commands.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latex.rootFile.doNotPrompt": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "markdownDescription": "When the `subfile` package is used, either the main file or any subfile containing `\\documentclass[main.tex]{subfile}` can be LaTeXing. When `false`, the `build` and `view` commands  ask the user's choice first. When `true`, the subfile is used when `#latex-workshop.latex.rootFile.useSubFile#` is also `true`, otherwise the rootFile is used.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.latex.rootFile.indicator": {
            "scope": 4,
            "type": "string",
            "default": "\\documentclass[]{}",
            "enum": [
                "\\documentclass[]{}",
                "\\begin{document}"
            ],
            "markdownDescription": "Determine if the root file is detected based on the presence of \\documentclass[]{} or \\begin{document}.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "\\documentclass[]{}",
            "restricted": false
        },
        "latex-workshop.latex.autoBuild.run": {
            "scope": 4,
            "type": "string",
            "enum": [
                "never",
                "onSave",
                "onFileChange"
            ],
            "enumDescriptions": [
                "Never run auto build",
                "Auto build whenever a file is saved",
                "Auto build whenever a dependency file changes on disk"
            ],
            "default": "onFileChange",
            "markdownDescription": "When the extension shall auto build LaTeX project using the default (first) recipe. \n- `onSave` builds the project upon saving a `tex` file in vscode.\n- `onFileChange` builds the project upon detecting a file change in any of the dependencies, even modified by other applications.\n\n Note that `onSave` is more restrictive than `onFileChange` ",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "onFileChange",
            "restricted": false
        },
        "latex-workshop.latex.autoBuild.interval": {
            "scope": 4,
            "type": "integer",
            "default": 1000,
            "markdownDescription": "The minimal time interval in milliseconds for an auto build to trigger after the previous (manual and auto) build. This value is recommended to be greater than ~500.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "latex-workshop.latex.autoBuild.cleanAndRetry.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Delete LaTeX auxiliary files when errors occur during build and retry. This property defines whether LaTeX Workshop will try to clean and build the project once again after errors happen in the build toolchain.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latex.build.clearLog.everyRecipeStep.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Clear the LaTeX Compiler logs before every step of a recipe. Set this property to false to keep the logs of all tools in a recipe.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.latex.autoClean.run": {
            "scope": 4,
            "type": "string",
            "enum": [
                "never",
                "onFailed",
                "onSucceeded",
                "onBuilt"
            ],
            "enumDescriptions": [
                "Never clean the project",
                "Clean compilation fails",
                "Clean compilation successes",
                "Clean after build, be it successful or not"
            ],
            "default": "never",
            "markdownDescription": "When LaTeX auxiliary files should be deleted. The folder to be cleaned is defined in `#latex-workshop.latex.outDir#`.\n- `onFailed` cleans the project when compilation fails.\n- `onBuilt` cleans the project when compilation is done, whether successful or failed.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "latex-workshop.latex.clean.subfolder.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Delete LaTeX auxiliary files recursively in sub-folders of `#latex-workshop.latex.outDir#`. Note that sub-folders are not removed.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.latex.clean.fileTypes": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "%DOCFILE%.aux",
                "%DOCFILE%.bbl",
                "%DOCFILE%.blg",
                "%DOCFILE%.idx",
                "%DOCFILE%.ind",
                "%DOCFILE%.lof",
                "%DOCFILE%.lot",
                "%DOCFILE%.out",
                "%DOCFILE%.toc",
                "%DOCFILE%.acn",
                "%DOCFILE%.acr",
                "%DOCFILE%.alg",
                "%DOCFILE%.glg",
                "%DOCFILE%.glo",
                "%DOCFILE%.gls",
                "%DOCFILE%.fls",
                "%DOCFILE%.log",
                "%DOCFILE%.fdb_latexmk",
                "%DOCFILE%.snm",
                "%DOCFILE%.synctex(busy)",
                "%DOCFILE%.synctex.gz(busy)",
                "%DOCFILE%.nav",
                "%DOCFILE%.vrb"
            ],
            "markdownDescription": "Files to clean when `#latex-workshop.latex.clean.method#` is set to `glob`. This property must be an array of strings. Placeholders listed in https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders can be used to populate the glob strings. File globs such as `*.removeme`, `something?.aux` can be used. Users can also specify glob patterns like `emptyfolder*/` to remove empty folders. Non-empty folders will be ignored. The folder globs must end with a slash and the last path component must not contain the globstar `**`, otherwise the folders will not be removed. The following globs patterns are correct `['abc/', 'abc*/', '**/abc*/', 'abc/**/def/']` but these are not ['**', '**/', 'abc/**', 'abc/**/', 'abc/def**/', 'abc/d**ef/']`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "%DOCFILE%.aux",
                "%DOCFILE%.bbl",
                "%DOCFILE%.blg",
                "%DOCFILE%.idx",
                "%DOCFILE%.ind",
                "%DOCFILE%.lof",
                "%DOCFILE%.lot",
                "%DOCFILE%.out",
                "%DOCFILE%.toc",
                "%DOCFILE%.acn",
                "%DOCFILE%.acr",
                "%DOCFILE%.alg",
                "%DOCFILE%.glg",
                "%DOCFILE%.glo",
                "%DOCFILE%.gls",
                "%DOCFILE%.fls",
                "%DOCFILE%.log",
                "%DOCFILE%.fdb_latexmk",
                "%DOCFILE%.snm",
                "%DOCFILE%.synctex(busy)",
                "%DOCFILE%.synctex.gz(busy)",
                "%DOCFILE%.nav",
                "%DOCFILE%.vrb"
            ],
            "restricted": false
        },
        "latex-workshop.latex.clean.command": {
            "scope": 4,
            "type": "string",
            "default": "latexmk",
            "markdownDescription": "The command to be used to remove temporary files when `#latex-workshop.latex.clean.method#` is set to `command`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "latexmk",
            "restricted": false
        },
        "latex-workshop.latex.clean.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "-c",
                "%TEX%"
            ],
            "markdownDescription": "The arguments of `#latex-workshop.latex.clean.command#`. Placeholders listed in https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders can be used to populate the argument strings. Besides, an additional `%TEX%` placeholder refers to the full path of the tex file from which the clean command is called.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "-c",
                "%TEX%"
            ],
            "restricted": false
        },
        "latex-workshop.latex.clean.method": {
            "scope": 4,
            "type": "string",
            "default": "command",
            "enum": [
                "glob",
                "command"
            ],
            "markdownEnumDescriptions": [
                "Clean all the files located in `#latex-workshop.latex.outDir#` and matching the glob patterns listed in `#latex-workshop.latex.clean.fileTypes#`.",
                "Run `#latex-workshop.latex.clean.command#` to clean temporary files."
            ],
            "markdownDescription": "Define how temporary files will be cleaned.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "command",
            "restricted": false
        },
        "latex-workshop.latex.option.maxPrintLine.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Add `--max-print-line` option to LaTeX build commands. This flag tells some MikTeX compilers to produce non hard wrapped log messages. Non hard wrapped log messages are required for the _Problem_ Pane to properly display messages.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.linting.chktex.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable linting LaTeX with `chktex`. Check `#latex-workshop.linting.run#` to control when `chktex` is executed if this config is set to `true.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.linting.lacheck.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable linting LaTeX with `lacheck`. Check `#latex-workshop.linting.run#` to control when `lacheck` is executed if this config is set to `true.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.linting.run": {
            "scope": 4,
            "type": "string",
            "enum": [
                "onSave",
                "onType"
            ],
            "enumDescriptions": [
                "Lint the whole LaTeX project upon saving",
                "Lint the active document when input is stopped"
            ],
            "default": "onSave",
            "markdownDescription": "When LaTeX should be linted.\n- `onSave`: the whole LaTeX project will be linted upon saving.\n- `onType`: the active document will be linted when input is stopped for a period of time defined in `#latex-workshop.linting.delay#`. It also implies `onSave`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "onSave",
            "restricted": false
        },
        "latex-workshop.linting.chktex.exec.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "-wall",
                "-n22",
                "-n30",
                "-e16",
                "-q"
            ],
            "markdownDescription": "Linter arguments to check LaTeX syntax of the current file state in real time with ChkTeX. Arguments must be in separate strings in the array. Additional arguments, i.e., `-I0 -f%f:%l:%c:%d:%k:%n:%m\\n` will be appended when constructing the command. Current file contents will be piped to the command through stdin.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "-wall",
                "-n22",
                "-n30",
                "-e16",
                "-q"
            ],
            "restricted": false
        },
        "latex-workshop.linting.chktex.convertOutput.column.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable converting ChkTeX outputs' column numbers for non-ASCII characters.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "latex-workshop.linting.chktex.convertOutput.column.chktexrcTabSize": {
            "scope": 4,
            "type": "number",
            "default": -1,
            "markdownDescription": "Write the `TabSize` number from `.chktexrc`. The default value \"-1\" means that LaTeX Workshop will try to find `.chktexrc` and to read the value from it.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": -1,
            "restricted": false
        },
        "latex-workshop.linting.delay": {
            "scope": 4,
            "type": "number",
            "default": 500,
            "markdownDescription": "Defines the delay in milliseconds for linter to wait after stopped typing. This config only matters when `#latex-workshop.linting.run#` is set to `onType`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 500,
            "restricted": false
        },
        "latex-workshop.texcount.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "TeXCount arguments to count words in the LaTeX documents of the entire project from the root file, or the current document. Arguments must be in separate strings in the array. Additional arguments, i.e., `-merge %DOC%` for the project and the current document path for counting current file will be appended when constructing the command.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "latex-workshop.texcount.autorun": {
            "scope": 4,
            "type": "string",
            "enum": [
                "onSave",
                "never"
            ],
            "enumDescriptions": [
                "Count words in the current document",
                "Never automatically call texcount"
            ],
            "default": "never",
            "markdownDescription": "When to call `texcount`. Default is never.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "never",
            "restricted": false
        },
        "latex-workshop.texcount.interval": {
            "scope": 4,
            "type": "number",
            "default": 1000,
            "markdownDescription": "The minimal time interval between two consecutive runs of `texcount` in milliseconds when `#latex-workshop.texcount.run#` is set to `onSave`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "latex-workshop.intellisense.citation.label": {
            "scope": 4,
            "type": "string",
            "enum": [
                "bibtex key",
                "title",
                "authors"
            ],
            "default": "bibtex key",
            "markdownDescription": "Defines what to show as suggestion labels when intellisense provides citation suggestions in inline mode.",
            "enumDescriptions": [
                "Show bibtex keys in the inline mode.",
                "Show publication titles in the inline mode.",
                "Show publication authors in the inline mode."
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "bibtex key",
            "restricted": false
        },
        "latex-workshop.intellisense.citation.format": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "author",
                "title",
                "journal",
                "publisher",
                "booktitle",
                "year"
            ],
            "markdownDescription": "List of fields to display for citation preview and intellisense. This list is also used as the filter text to narrow down the intellisense suggestions.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "author",
                "title",
                "journal",
                "publisher",
                "booktitle",
                "year"
            ],
            "restricted": false
        },
        "latex-workshop.intellisense.file.exclude": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "**/*.aux",
                "**/*.bbl",
                "**/*.bcf",
                "**/*.blg",
                "**/*.idx",
                "**/*.ind",
                "**/*.lof",
                "**/*.lot",
                "**/*.out",
                "**/*.toc",
                "**/*.acn",
                "**/*.acr",
                "**/*.alg",
                "**/*.glg",
                "**/*.glo",
                "**/*.gls",
                "**/*.ist",
                "**/*.fls",
                "**/*.log",
                "**/*.nav",
                "**/*.snm",
                "**/*.fdb_latexmk",
                "**/*.synctex.gz",
                "**/*.run.xml"
            ],
            "markdownDescription": "Patterns to ignore in file completion",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "**/*.aux",
                "**/*.bbl",
                "**/*.bcf",
                "**/*.blg",
                "**/*.idx",
                "**/*.ind",
                "**/*.lof",
                "**/*.lot",
                "**/*.out",
                "**/*.toc",
                "**/*.acn",
                "**/*.acr",
                "**/*.alg",
                "**/*.glg",
                "**/*.glo",
                "**/*.gls",
                "**/*.ist",
                "**/*.fls",
                "**/*.log",
                "**/*.nav",
                "**/*.snm",
                "**/*.fdb_latexmk",
                "**/*.synctex.gz",
                "**/*.run.xml"
            ],
            "restricted": false
        },
        "latex-workshop.intellisense.file.base": {
            "scope": 4,
            "type": "string",
            "enum": [
                "root relative",
                "file relative",
                "both"
            ],
            "default": "root relative",
            "markdownDescription": "Specify the base directory for file completion",
            "enumDescriptions": [
                "Completion from the root file directory",
                "Completion from the current file directory",
                "both"
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "root relative",
            "restricted": false
        },
        "latex-workshop.latexindent.args": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "-c",
                "%DIR%/",
                "%TMPFILE%",
                "-y=defaultIndent: '%INDENT%'"
            ],
            "markdownDescription": "Define the command line arguments for latexindent. In the addition to the placeholders defined at https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders, the following placeholders are accepted\n- %TMPFILE%: The full path of the raw TeX file to be formatted. At this moment you need to use it as an input file of `latexindent`.\n- %INDENT%: The indent character of the file, typically `\t`, `' '`, `' '`.\n\nNote that the option `-c` requires a trailing slash.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "-c",
                "%DIR%/",
                "%TMPFILE%",
                "-y=defaultIndent: '%INDENT%'"
            ],
            "restricted": false
        },
        "latex-workshop.intellisense.citation.backend": {
            "scope": 4,
            "type": "string",
            "enum": [
                "bibtex",
                "biblatex"
            ],
            "default": "bibtex",
            "markdownDescription": "Backend to use for citation intellisense.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "bibtex",
            "restricted": false
        },
        "latex-workshop.intellisense.bibtexJSON.replace": {
            "scope": 4,
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "default": {},
            "markdownDescription": "Dictionary of `\"entry name\": [\"array\", \"of\", \"fields\"]` to replace the default fields used in `data/bibtex-entries.json`. See `data/bibtex-entries.json` for the list of fields for each entry. This variable is used when `#latex-workshop.intellisense.citation.backend#` is set to `bibtex`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "latex-workshop.intellisense.biblatexJSON.replace": {
            "scope": 4,
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "default": {},
            "markdownDescription": "Dictionary of `\"entry name\": [\"array\", \"of\", \"fields\"]` to replace the default fields used in `data/biblatex-entries.json`. See `data/biblatex-entries.json` for the list of fields for each entry. This variable is used when `#latex-workshop.intellisense.citation.backend#` is set to `biblatex`.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "latex-workshop.bibtex-format.tab": {
            "scope": 4,
            "type": "string",
            "default": "2 spaces",
            "markdownDescription": "Indentation for each field. The string can be `\"tab\"` or of the form `\"X spaces\"` or simply `\"X\"` where `X` is a number.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "2 spaces",
            "restricted": false
        },
        "latex-workshop.bibtex-format.surround": {
            "scope": 4,
            "type": "string",
            "enum": [
                "Curly braces",
                "Quotation marks"
            ],
            "default": "Curly braces",
            "description": "Surround each field value with either {Curly braces} or \"Quotation marks\".",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "Curly braces",
            "restricted": false
        },
        "latex-workshop.bibtex-format.case": {
            "scope": 4,
            "type": "string",
            "enum": [
                "UPPERCASE",
                "lowercase"
            ],
            "default": "lowercase",
            "description": "Determines if field names should be formatted like 'AUTHOR' or 'author'.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "lowercase",
            "restricted": false
        },
        "latex-workshop.bibtex-format.trailingComma": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "description": "Keep the trailing comma of the last field item.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.bibtex-format.sortby": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "An array of strings to sort by. Either a bibtex field name (title, author, year, etc.), or `\"year-desc\"` to sort by year in descending order, or `\"key\"` for the entry key, or `\"type\"` for the entry type (article, book, misc, etc.). E.g. `[\"author\", \"year-desc\", \"title\"]`.",
            "default": [
                "key"
            ],
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "key"
            ],
            "restricted": false
        },
        "latex-workshop.bibtex-format.handleDuplicates": {
            "scope": 4,
            "type": "string",
            "enum": [
                "Ignore Duplicates",
                "Highlight Duplicates",
                "Comment Duplicates"
            ],
            "default": "Highlight Duplicates",
            "markdownDescription": "How to handle duplicates found by the bibtex sorting functions. Duplicates are decided according to the `bibtex-format.sortby` config.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": "Highlight Duplicates",
            "restricted": false
        },
        "latex-workshop.bibtex-format.sort.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Sort content when calling VSCode format on a .bib file.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.bibtex-entries.first": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [
                "string",
                "xdata"
            ],
            "markdownDescription": "When `#latex-workshop.bibtex-fields.sort.enabled#` is true, these fields are put at the top, in the order defined by the array.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [
                "string",
                "xdata"
            ],
            "restricted": false
        },
        "latex-workshop.bibtex-fields.sort.enabled": {
            "scope": 4,
            "type": "boolean",
            "default": false,
            "markdownDescription": "Sort fields inside every entry. The sorting order is defined by `#latex-workshop.bibtex-fields.order#`. This variable only has effect when formatting bibtex aligns fields. It is not possible to sort entries without aligning them.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "latex-workshop.bibtex-fields.order": {
            "scope": 4,
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": [],
            "markdownDescription": "When `#latex-workshop.bibtex-fields.sort.enabled#` is true, sort fields according the order defined here and then alphabetically for non listed fields.",
            "source": {
                "id": "James-Yu.latex-workshop",
                "displayName": "LaTeX Workshop"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.autoComplete.extraPaths": {
            "default": [],
            "description": "List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.",
            "scope": 4,
            "type": "array",
            "uniqueItems": true,
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.envFile": {
            "default": "${workspaceFolder}/.env",
            "description": "Absolute path to a file containing environment variable definitions.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "${workspaceFolder}/.env",
            "restricted": false
        },
        "python.formatting.autopep8Args": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Autopep8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.autopep8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Autopep8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.formatting.blackArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Black Formatter extension](https://marketplace.visualstudio.com/items?itemName=ms-python.black-formatter). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Black Formatter extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.formatting.provider": {
            "default": "autopep8",
            "description": "Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.",
            "enum": [
                "autopep8",
                "black",
                "none",
                "yapf"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Autopep8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.autopep8) or the [Black Formatter extension](https://marketplace.visualstudio.com/items?itemName=ms-python.black-formatter). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Autopep8 extension or the Black Formatter extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "autopep8",
            "restricted": false
        },
        "python.formatting.yapfArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "Yapf support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Yapf support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.globalModuleInstallation": {
            "default": false,
            "description": "Whether to install Python modules globally when not using an environment.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.banditArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "Bandit support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Bandit support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.banditEnabled": {
            "default": false,
            "description": "Whether to lint Python files using bandit.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "Bandit support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Bandit support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.cwd": {
            "default": null,
            "description": "Optional working directory for linters.",
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "python.linting.enabled": {
            "default": true,
            "description": "Whether to lint Python files.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.linting.flake8Args": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Flake8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.flake8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Flake8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.flake8CategorySeverity.E": {
            "default": "Error",
            "description": "Severity of Flake8 message type 'E'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Flake8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.flake8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Flake8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "python.linting.flake8CategorySeverity.F": {
            "default": "Error",
            "description": "Severity of Flake8 message type 'F'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Flake8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.flake8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Flake8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "python.linting.flake8CategorySeverity.W": {
            "default": "Warning",
            "description": "Severity of Flake8 message type 'W'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Flake8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.flake8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Flake8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Warning",
            "restricted": false
        },
        "python.linting.flake8Enabled": {
            "default": false,
            "description": "Whether to lint Python files using flake8.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Flake8 extension](https://marketplace.visualstudio.com/items?itemName=ms-python.flake8). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Flake8 extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.ignorePatterns": {
            "default": [
                "**/site-packages/**/*.py",
                ".vscode/*.py"
            ],
            "description": "Patterns used to exclude files or folders from being linted.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "uniqueItems": true,
            "markdownDeprecationMessage": "This setting will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [
                "**/site-packages/**/*.py",
                ".vscode/*.py"
            ],
            "restricted": false
        },
        "python.linting.lintOnSave": {
            "default": true,
            "description": "Whether to lint Python files when saved.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.linting.maxNumberOfProblems": {
            "default": 100,
            "description": "Controls the maximum number of problems produced by the server.",
            "scope": 4,
            "type": "number",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": 100,
            "restricted": false
        },
        "python.linting.mypyArgs": {
            "default": [
                "--follow-imports=silent",
                "--ignore-missing-imports",
                "--show-column-numbers",
                "--no-pretty"
            ],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Mypy Type Checker extension](https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Mypy Type Checker extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [
                "--follow-imports=silent",
                "--ignore-missing-imports",
                "--show-column-numbers",
                "--no-pretty"
            ],
            "restricted": false
        },
        "python.linting.mypyCategorySeverity.error": {
            "default": "Error",
            "description": "Severity of Mypy message type 'Error'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Mypy Type Checker extension](https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Mypy Type Checker extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "python.linting.mypyCategorySeverity.note": {
            "default": "Information",
            "description": "Severity of Mypy message type 'Note'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Mypy Type Checker extension](https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Mypy Type Checker extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Information",
            "restricted": false
        },
        "python.linting.mypyEnabled": {
            "default": false,
            "description": "Whether to lint Python files using mypy.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Mypy Type Checker extension](https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Mypy Type Checker extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.prospectorArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "Prospector support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Prospector support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.prospectorEnabled": {
            "default": false,
            "description": "Whether to lint Python files using prospector.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "Prospector support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Prospector support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.pycodestyleArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "Pycodestyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pycodestyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.pycodestyleCategorySeverity.E": {
            "default": "Error",
            "description": "Severity of pycodestyle message type 'E'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "Pycodestyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pycodestyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "python.linting.pycodestyleCategorySeverity.W": {
            "default": "Warning",
            "description": "Severity of pycodestyle message type 'W'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "Pycodestyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pycodestyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Warning",
            "restricted": false
        },
        "python.linting.pycodestyleEnabled": {
            "default": false,
            "description": "Whether to lint Python files using pycodestyle.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "Pycodestyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pycodestyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.pydocstyleArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "Pydocstyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pydocstyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.pydocstyleEnabled": {
            "default": false,
            "description": "Whether to lint Python files using pydocstyle.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "Pydocstyle support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pydocstyle support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.pylamaArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "Pylama support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pylama support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.pylamaEnabled": {
            "default": false,
            "description": "Whether to lint Python files using pylama.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "Pylama support will soon be deprecated. Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "Pylama support will soon be deprecated. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.linting.pylintArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.linting.pylintCategorySeverity.convention": {
            "default": "Information",
            "description": "Severity of Pylint message type 'Convention/C'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Information",
            "restricted": false
        },
        "python.linting.pylintCategorySeverity.error": {
            "default": "Error",
            "description": "Severity of Pylint message type 'Error/E'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "python.linting.pylintCategorySeverity.fatal": {
            "default": "Error",
            "description": "Severity of Pylint message type 'Error/F'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Error",
            "restricted": false
        },
        "python.linting.pylintCategorySeverity.refactor": {
            "default": "Hint",
            "description": "Severity of Pylint message type 'Refactor/R'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Hint",
            "restricted": false
        },
        "python.linting.pylintCategorySeverity.warning": {
            "default": "Warning",
            "description": "Severity of Pylint message type 'Warning/W'.",
            "enum": [
                "Error",
                "Hint",
                "Information",
                "Warning"
            ],
            "scope": 4,
            "type": "string",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "Warning",
            "restricted": false
        },
        "python.linting.pylintEnabled": {
            "default": false,
            "description": "Whether to lint Python files using pylint.",
            "scope": 4,
            "type": "boolean",
            "markdownDeprecationMessage": "This setting will soon be deprecated. Please use the [Pylint extension](https://marketplace.visualstudio.com/items?itemName=ms-python.pylint). <br>Learn more [here](https://aka.ms/AAlgvkb).",
            "deprecationMessage": "This setting will soon be deprecated. Please use the Pylint extension. Learn more here: https://aka.ms/AAlgvkb.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.sortImports.args": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "deprecationMessage": "This setting will be removed soon. Use 'isort.args' instead.",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.tensorBoard.logDirectory": {
            "default": "",
            "description": "Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "python.terminal.activateEnvInCurrentTerminal": {
            "default": false,
            "description": "Activate Python Environment in the current Terminal on load of the Extension.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.terminal.activateEnvironment": {
            "default": true,
            "description": "Activate Python Environment in all Terminals created.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.terminal.executeInFileDir": {
            "default": false,
            "description": "When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.terminal.focusAfterLaunch": {
            "default": false,
            "description": "When launching a python terminal, whether to focus the cursor on the terminal.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.terminal.launchArgs": {
            "default": [],
            "description": "Python launch arguments to use when executing a file in the terminal.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.testing.autoTestDiscoverOnSaveEnabled": {
            "default": true,
            "description": "Enable auto run test discovery when saving a test file.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.testing.cwd": {
            "default": null,
            "description": "Optional working directory for tests.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "python.testing.debugPort": {
            "default": 3000,
            "description": "Port number used for debugging of tests.",
            "scope": 4,
            "type": "number",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": 3000,
            "restricted": false
        },
        "python.testing.promptToConfigure": {
            "default": true,
            "description": "Prompt to configure a test framework if potential tests directories are discovered.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.testing.pytestArgs": {
            "default": [],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.testing.pytestEnabled": {
            "default": false,
            "description": "Enable testing using pytest.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.testing.unittestArgs": {
            "default": [
                "-v",
                "-s",
                ".",
                "-p",
                "*test*.py"
            ],
            "description": "Arguments passed in. Each argument is a separate item in the array.",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "type": "array",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": [
                "-v",
                "-s",
                ".",
                "-p",
                "*test*.py"
            ],
            "restricted": false
        },
        "python.testing.unittestEnabled": {
            "default": false,
            "description": "Enable testing using unittest.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "ms-python.python",
                "displayName": "Python"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.inlayHints.variableTypes": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for variable types:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.inlayHints.functionReturnTypes": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.inlayHints.callArgumentNames": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.inlayHints.pytestParameters": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable/disable inlay hints for pytest function parameters:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.completeFunctionParens": {
            "type": "boolean",
            "default": false,
            "description": "Add parentheses to function completions.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.autoImportCompletions": {
            "type": "boolean",
            "default": false,
            "description": "Offer auto-import completions.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.autoFormatStrings": {
            "type": "boolean",
            "default": false,
            "description": "When typing a '{' in a string, automatically prefix the string with an 'f'.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.autoSearchPaths": {
            "type": "boolean",
            "default": true,
            "description": "Automatically add common search paths like 'src'.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.analysis.stubPath": {
            "type": "string",
            "default": "typings",
            "description": "Path to directory containing custom type stub files.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": "typings",
            "restricted": false
        },
        "python.analysis.diagnosticMode": {
            "type": "string",
            "default": "openFilesOnly",
            "description": "Analysis mode for diagnostics.",
            "enum": [
                "openFilesOnly",
                "workspace"
            ],
            "enumDescriptions": [
                "Analyzes and reports errors on only open files.",
                "Analyzes and reports errors on all files in the workspace."
            ],
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": "openFilesOnly",
            "restricted": false
        },
        "python.analysis.extraPaths": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Additional import search resolution paths",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.analysis.include": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.analysis.exclude": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.analysis.ignore": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.analysis.indexing": {
            "type": "boolean",
            "default": true,
            "description": "Index installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.analysis.userFileIndexingLimit": {
            "type": "number",
            "default": 2000,
            "description": "Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": 2000,
            "restricted": false
        },
        "python.analysis.persistAllIndices": {
            "type": "boolean",
            "default": false,
            "description": "Indices for all third party libraries will be persisted to disk.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.extraCommitChars": {
            "type": "boolean",
            "default": true,
            "description": "Allow using '.', '(' as commit characters when applicable.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.analysis.useLibraryCodeForTypes": {
            "type": "boolean",
            "default": true,
            "description": "Use library implementations to extract type information when type stub is not present.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.analysis.typeCheckingMode": {
            "type": "string",
            "default": "off",
            "enum": [
                "off",
                "basic",
                "strict"
            ],
            "description": "Defines the default rule set for type checking. Note that the default value is set to \"basic\" when using VS Code Insiders, and to \"off\" otherwise.",
            "enumDescriptions": [
                "Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.",
                "All \"off\" rules + basic type checking rules.",
                "All \"off\" rules + all type checking rules."
            ],
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": "off",
            "restricted": false
        },
        "python.analysis.fixAll": {
            "type": "array",
            "default": [],
            "items": {
                "enum": [
                    "source.unusedImports",
                    "source.convertImportFormat"
                ],
                "enumDescriptions": [
                    "Remove unused imports.",
                    "Convert import format following python.analysis.importFormat."
                ]
            },
            "description": "source fixes to run in fix all.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.analysis.packageIndexDepths": {
            "type": "array",
            "default": [
                {
                    "name": "sklearn",
                    "depth": 2
                },
                {
                    "name": "matplotlib",
                    "depth": 2
                },
                {
                    "name": "scipy",
                    "depth": 2
                },
                {
                    "name": "django",
                    "depth": 2
                },
                {
                    "name": "flask",
                    "depth": 2
                },
                {
                    "name": "fastapi",
                    "depth": 2
                }
            ],
            "items": {
                "type": "object",
                "label": "Per package settings",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "label": "Package name to configure. Empty name means all packages.",
                        "default": ""
                    },
                    "depth": {
                        "type": "integer",
                        "label": "Depth to scan modules.",
                        "default": 1
                    },
                    "includeAllSymbols": {
                        "type": "boolean",
                        "label": "'true' means include all symbols. 'false' means only symbols in __all__.",
                        "default": false
                    }
                }
            },
            "markdownDescription": "Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [
                {
                    "name": "sklearn",
                    "depth": 2
                },
                {
                    "name": "matplotlib",
                    "depth": 2
                },
                {
                    "name": "scipy",
                    "depth": 2
                },
                {
                    "name": "django",
                    "depth": 2
                },
                {
                    "name": "flask",
                    "depth": 2
                },
                {
                    "name": "fastapi",
                    "depth": 2
                }
            ],
            "restricted": false
        },
        "python.analysis.addImport.exactMatchOnly": {
            "type": "boolean",
            "default": false,
            "description": "Offer only exact matches in `add import` code actions",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.diagnosticSeverityOverrides": {
            "type": "object",
            "markdownDescription": "Allows a user to override the severity levels for individual diagnostics. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").",
            "scope": 4,
            "properties": {
                "reportGeneralTypeIssues": {
                    "type": "string",
                    "description": "Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportPropertyTypeMismatch": {
                    "type": "string",
                    "description": "Diagnostics for property whose setter and getter have mismatched types.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportFunctionMemberAccess": {
                    "type": "string",
                    "description": "Diagnostics for member accesses on functions.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMissingImports": {
                    "type": "string",
                    "description": "Diagnostics for imports that have no corresponding imported python file or type stub file.",
                    "default": "warning",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMissingModuleSource": {
                    "type": "string",
                    "description": "Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.",
                    "default": "warning",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMissingTypeStubs": {
                    "type": "string",
                    "description": "Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportImportCycles": {
                    "type": "string",
                    "description": "Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedImport": {
                    "type": "string",
                    "description": "Diagnostics for an imported symbol that is not referenced within that file.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedClass": {
                    "type": "string",
                    "description": "Diagnostics for a class with a private name (starting with an underscore) that is not accessed.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedFunction": {
                    "type": "string",
                    "description": "Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedVariable": {
                    "type": "string",
                    "description": "Diagnostics for a variable that is not accessed.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportDuplicateImport": {
                    "type": "string",
                    "description": "Diagnostics for an imported symbol or module that is imported more than once.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportWildcardImportFromLibrary": {
                    "type": "string",
                    "description": "Diagnostics for an wildcard import from an external library.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOptionalSubscript": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to subscript (index) a variable with an Optional type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOptionalMemberAccess": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to access a member of a variable with an Optional type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOptionalCall": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to call a variable with an Optional type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOptionalIterable": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOptionalContextManager": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOptionalOperand": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportTypedDictNotRequiredAccess": {
                    "type": "string",
                    "description": "Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUntypedFunctionDecorator": {
                    "type": "string",
                    "description": "Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUntypedClassDecorator": {
                    "type": "string",
                    "description": "Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUntypedBaseClass": {
                    "type": "string",
                    "description": "Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUntypedNamedTuple": {
                    "type": "string",
                    "description": "Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportPrivateUsage": {
                    "type": "string",
                    "description": "Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportTypeCommentUsage": {
                    "type": "string",
                    "description": "Diagnostics for usage of deprecated type comments.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportPrivateImportUsage": {
                    "type": "string",
                    "description": "Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportConstantRedefinition": {
                    "type": "string",
                    "description": "Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportDeprecated": {
                    "type": "string",
                    "description": "Diagnostics for use of deprecated classes or functions.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportIncompatibleMethodOverride": {
                    "type": "string",
                    "description": "Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportIncompatibleVariableOverride": {
                    "type": "string",
                    "description": "Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportInconsistentConstructor": {
                    "type": "string",
                    "description": "Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportOverlappingOverload": {
                    "type": "string",
                    "description": "Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMissingSuperCall": {
                    "type": "string",
                    "description": "Diagnostics for missing call to parent class for inherited `__init__` methods.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUninitializedInstanceVariable": {
                    "type": "string",
                    "description": "Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportInvalidStringEscapeSequence": {
                    "type": "string",
                    "description": "Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnknownParameterType": {
                    "type": "string",
                    "description": "Diagnostics for input or return parameters for functions or methods that have an unknown type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnknownArgumentType": {
                    "type": "string",
                    "description": "Diagnostics for call arguments for functions or methods that have an unknown type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnknownLambdaType": {
                    "type": "string",
                    "description": "Diagnostics for input or return parameters for lambdas that have an unknown type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnknownVariableType": {
                    "type": "string",
                    "description": "Diagnostics for variables that have an unknown type..",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnknownMemberType": {
                    "type": "string",
                    "description": "Diagnostics for class or instance variables that have an unknown type.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMissingParameterType": {
                    "type": "string",
                    "description": "Diagnostics for parameters that are missing a type annotation.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMissingTypeArgument": {
                    "type": "string",
                    "description": "Diagnostics for generic class reference with missing type arguments.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportInvalidTypeVarUse": {
                    "type": "string",
                    "description": "Diagnostics for improper use of type variables in a function signature.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportCallInDefaultInitializer": {
                    "type": "string",
                    "description": "Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnnecessaryIsInstance": {
                    "type": "string",
                    "description": "Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true or always false. Such calls are often indicative of a programming error.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnnecessaryCast": {
                    "type": "string",
                    "description": "Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnnecessaryComparison": {
                    "type": "string",
                    "description": "Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnnecessaryContains": {
                    "type": "string",
                    "description": "Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportAssertAlwaysTrue": {
                    "type": "string",
                    "description": "Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportSelfClsParameterName": {
                    "type": "string",
                    "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportImplicitStringConcatenation": {
                    "type": "string",
                    "description": "Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportInvalidStubStatement": {
                    "type": "string",
                    "description": "Diagnostics for type stub statements that do not conform to PEP 484.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportIncompleteStub": {
                    "type": "string",
                    "description": "Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUndefinedVariable": {
                    "type": "string",
                    "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
                    "default": "warning",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnboundVariable": {
                    "type": "string",
                    "description": "Diagnostics for unbound and possibly unbound variables.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedCallResult": {
                    "type": "string",
                    "description": "Diagnostics for call expressions whose results are not consumed and are not None.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedCoroutine": {
                    "type": "string",
                    "description": "Diagnostics for call expressions that return a Coroutine and whose results are not consumed.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnusedExpression": {
                    "type": "string",
                    "description": "Diagnostics for simple expressions whose value is not used in any way.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnsupportedDunderAll": {
                    "type": "string",
                    "description": "Diagnostics for unsupported operations performed on __all__.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportUnnecessaryTypeIgnoreComment": {
                    "type": "string",
                    "description": "Diagnostics for '# type: ignore' comments that have no effect.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportMatchNotExhaustive": {
                    "type": "string",
                    "description": "Diagnostics for 'match' statements that do not exhaustively match all possible values.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportShadowedImports": {
                    "type": "string",
                    "description": "Diagnostics for files that are overriding a module in the stdlib.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                },
                "reportImplicitOverride": {
                    "type": "string",
                    "description": "Diagnostics for overridden methods that do not include an `@override` decorator.",
                    "default": "none",
                    "enum": [
                        "none",
                        "information",
                        "warning",
                        "error"
                    ]
                }
            },
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "default": {},
            "restricted": false
        },
        "python.analysis.typeshedPaths": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            },
            "description": "Paths to look for typeshed modules.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "python.analysis.importFormat": {
            "type": "string",
            "default": "absolute",
            "enum": [
                "absolute",
                "relative"
            ],
            "description": "Defines the default format for import module.",
            "enumDescriptions": [
                "Use absolute import format when creating new import statement.",
                "Use relative import format when creating new import statement."
            ],
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": "absolute",
            "restricted": false
        },
        "python.analysis.enableSyncServer": {
            "type": "boolean",
            "default": false,
            "scope": 4,
            "description": "Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.",
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.enablePytestSupport": {
            "type": "boolean",
            "default": true,
            "description": "Enables pytest support in Pylance.",
            "scope": 4,
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "python.analysis.gotoDefinitionInStringLiteral": {
            "type": "boolean",
            "default": false,
            "description": "For string literals that look like module names, enables goto definition to go to the module.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.downloadStubs": {
            "type": "boolean",
            "default": false,
            "description": "Instead of using the stubs bundled with the extension, download the necessary stubs to a cache folder.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "python.analysis.remapDiagnostics": {
            "type": "boolean",
            "default": false,
            "description": "Experimental setting to provide different messages for specific diagnostics.",
            "scope": 4,
            "tags": [
                "experimental"
            ],
            "source": {
                "id": "ms-python.vscode-pylance",
                "displayName": "Pylance"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.inlayHints.autoDeclarationTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Display inlay hints for deduced type when `auto` is used in a declaration:\n```cpp \n\n auto index /* : int */ = 0;\n```",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Display inlay hints for deduced type when `auto` is used in a declaration on the left of the identifier:\n```cpp \n\n auto /* int */ index = 0;\n```",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.inlayHints.parameterNames.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Display inlay hints for parameter names:\n```cpp \n\n int a = getArea(/* width: */ x, /* height: */ y);\n```",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Suppress parameter name hints when the argument text or inline comment contains the parameter name:\n```cpp \n\n int a = getArea(width, /* height: */ y);\n```",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Hide leading `_` in parameter name hints.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.inlayHints.referenceOperator.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Display the inlay hint reference operator `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* &first: */ str1, /* &last: */ str2);\n```",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.inlayHints.referenceOperator.showSpace": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Controls whether a space is shown after `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* & first: */ str1, /* & last: */ str2);\n```",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.autocompleteAddParentheses": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If `true`, autocomplete will automatically add `(` after function calls, in which case `)` may also be added, depending on the value of the `#editor.autoClosingBrackets#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.suggestSnippets": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "If `true`, snippets are provided by the language server.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.legacyCompilerArgsBehavior": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable pre-v1.10.0 behavior for how shell escaping is handled in compiler arg settings. Shell escaping is no longer expected or supported by default in arg arrays starting in v1.10.0.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.autocomplete": {
            "type": "string",
            "enum": [
                "default",
                "disabled"
            ],
            "default": "default",
            "markdownDescription": "Controls the auto-completion provider. If `disabled` and you want word-based completion, you will also need to set `\"[cpp]\": {\"editor.wordBasedSuggestions\": true}` (and similarly for `c` and `cuda-cpp` languages).",
            "enumDescriptions": [
                "Uses the active IntelliSense engine.",
                "Uses the word-based completion provided by Visual Studio Code."
            ],
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "C_Cpp.markdownInComments": {
            "type": "string",
            "enum": [
                "subsetEnabled",
                "enabled",
                "disabled"
            ],
            "enumDescriptions": [
                "Enable all markdown features in the hover tooltip except those that include the '_' and '*' characters.",
                "Enable all markdown features in the hover tooltip.",
                "Disable all markdown features in the hover tooltip."
            ],
            "default": "subsetEnabled",
            "description": "Select whether markdown will be available in the hover tooltip. By default, only a subset of markdown will be applied to comments in the hover tooltip.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "subsetEnabled",
            "restricted": false
        },
        "C_Cpp.hover": {
            "type": "string",
            "enum": [
                "default",
                "disabled"
            ],
            "default": "default",
            "description": "If disabled, hover details are no longer provided by the language server.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "C_Cpp.errorSquiggles": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled",
                "enabledIfIncludesResolve"
            ],
            "default": "enabledIfIncludesResolve",
            "description": "Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. It also controls whether code analysis warnings are reported if includes can't be found. This setting is ignored by the Tag Parser engine.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "enabledIfIncludesResolve",
            "restricted": false
        },
        "C_Cpp.dimInactiveRegions": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.inactiveRegionOpacity": {
            "type:": "number",
            "default": 0.55,
            "markdownDescription": "Controls the opacity of inactive preprocessor blocks. Scales between `0.1` and `1.0`. This setting only applies when inactive region dimming is enabled.",
            "scope": 4,
            "minimum": 0.1,
            "maximum": 1,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": 0.55,
            "restricted": false
        },
        "C_Cpp.inactiveRegionForegroundColor": {
            "type": "string",
            "description": "Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.inactiveRegionBackgroundColor": {
            "type": "string",
            "description": "Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.cStandard": {
            "type": "string",
            "enum": [
                "",
                "c89",
                "c99",
                "c11",
                "c17",
                "c23",
                "gnu89",
                "gnu99",
                "gnu11",
                "gnu17",
                "gnu23"
            ],
            "markdownDescription": "The value to use in a configuration if `cStandard` is either not specified or set to `${default}`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.cppStandard": {
            "type": "string",
            "enum": [
                "",
                "c++98",
                "c++03",
                "c++11",
                "c++14",
                "c++17",
                "c++20",
                "c++23",
                "gnu++98",
                "gnu++03",
                "gnu++11",
                "gnu++14",
                "gnu++17",
                "gnu++20",
                "gnu++23"
            ],
            "markdownDescription": "The value to use in a configuration if `cppStandard` is either not specified or set to `${default}`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.configurationProvider": {
            "type": "string",
            "markdownDescription": "The value to use in a configuration if `configurationProvider` is either not specified or set to `${default}`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.default.mergeConfigurations": {
            "type": "boolean",
            "markdownDescription": "Set to `true` to merge include paths, defines, and forced includes with those from a configuration provider.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": false,
            "restricted": false
        },
        "C_Cpp.default.browse.limitSymbolsToIncludedHeaders": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "The value to use in a configuration if `browse.limitSymbolsToIncludedHeaders` is either not specified or set to `${default}`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.default.enableConfigurationSquiggles": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Controls whether the extension will report errors detected in `c_cpp_properties.json`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.default.dotConfig": {
            "type": "string",
            "markdownDescription": "The value to use in a configuration if `dotConfig` is not specified, or the value to insert if `${default}` is present in `dotConfig`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.configurationWarnings": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "default": "enabled",
            "description": "Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "enabled",
            "restricted": false
        },
        "C_Cpp.intelliSenseEngine": {
            "type": "string",
            "enum": [
                "default",
                "Tag Parser",
                "disabled"
            ],
            "default": "default",
            "description": "Controls the IntelliSense provider.",
            "enumDescriptions": [
                "Provides context-aware results via a separate IntelliSense process.",
                "Provides \"fuzzy\" results that are not context-aware.",
                "Turns off C/C++ language service features."
            ],
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "C_Cpp.intelliSenseEngineFallback": {
            "type": "string",
            "enum": [
                "enabled",
                "disabled"
            ],
            "default": "disabled",
            "markdownDescription": "Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing `#include` errors.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "disabled",
            "restricted": false
        },
        "C_Cpp.exclusionPolicy": {
            "type": "string",
            "enum": [
                "checkFolders",
                "checkFilesAndFolders"
            ],
            "default": "checkFolders",
            "markdownDescription": "Instructs the extension when to use the `#files.exclude#` (and `#C_Cpp.files.exclude#`) setting when determining which files should be added to the code navigation database while traversing through the paths in the `browse.path` array. If your `#files.exclude#` setting only contains folders, then `checkFolders` is the best choice and will increase the speed at which the extension can initialize the code navigation database.",
            "enumDescriptions": [
                "The exclusion filters will only be evaluated once per folder (individual files are not checked).",
                "The exclusion filters will be evaluated against every file and folder encountered."
            ],
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "checkFolders",
            "restricted": false
        },
        "C_Cpp.files.exclude": {
            "type": "object",
            "markdownDescription": "Configure glob patterns for excluding folders (and files if `#C_Cpp.exclusionPolicy#` is changed). These are specific to the C/C++ extension and are in addition to `#files.exclude#`, but unlike `#files.exclude#` they also apply to paths outside the current workspace folder and are not removed from the Explorer view. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
            "default": {
                "**/.vscode": true,
                "**/.vs": true
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "markdownDescription": "The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "when": {
                                "type": "string",
                                "pattern": "\\w*\\$\\(basename\\)\\w*",
                                "default": "$(basename).ext",
                                "markdownDescription": "Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."
                            }
                        }
                    }
                ]
            },
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": {
                "**/.vscode": true,
                "**/.vs": true
            },
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.braces": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Braces are indented by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.multiLineRelativeTo": {
            "type": "string",
            "enum": [
                "outermostParenthesis",
                "innermostParenthesis",
                "statementBegin"
            ],
            "enumDescriptions": [
                "Indent new line relative to the outermost open parenthesis.",
                "Indent new line relative to the innermost open parenthesis.",
                "Indent new line relative to the beginning of the current statement."
            ],
            "default": "innermostParenthesis",
            "description": "Determines what new line indentation is relative to.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "innermostParenthesis",
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.withinParentheses": {
            "type": "string",
            "enum": [
                "alignToParenthesis",
                "indent"
            ],
            "markdownEnumDescriptions": [
                "New line is aligned under the opening parenthesis.",
                "New line is indented based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`."
            ],
            "default": "indent",
            "markdownDescription": "When a new line is typed, it is aligned under the opening parenthesis or based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "indent",
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.preserveWithinParentheses": {
            "type": "boolean",
            "default": false,
            "description": "In existing code, preserve the existing indent alignment of new lines within parentheses.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.caseLabels": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Labels are indented relative to switch statements by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.caseContents": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Code inside a `case` block is indented relative to its label by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.caseContentsWhenBlock": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Indent braces following a case statement by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.lambdaBracesWhenParameter": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.gotoLabels": {
            "type": "string",
            "enum": [
                "oneLeft",
                "leftmostColumn",
                "none"
            ],
            "markdownEnumDescriptions": [
                "Position goto labels to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.",
                "Position goto labels at the leftmost edge of the code.",
                "Goto labels will not be formatted."
            ],
            "default": "oneLeft",
            "description": "The position of goto labels.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "oneLeft",
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.preprocessor": {
            "type": "string",
            "enum": [
                "oneLeft",
                "leftmostColumn",
                "none"
            ],
            "markdownEnumDescriptions": [
                "Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.",
                "Preprocessor directives are positioned at the leftmost edge of the code.",
                "Preprocessor directives will not be formatted."
            ],
            "default": "leftmostColumn",
            "description": "The position of preprocessor directives.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "leftmostColumn",
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.accessSpecifiers": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Access specifiers are indented relative to class or struct definitions by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.namespaceContents": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Code is indented relative to its enclosing namespace by the amount specified in the `#editor.tabSize#` setting.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.indent.preserveComments": {
            "type": "boolean",
            "default": false,
            "description": "Indentation of comments is not changed during formatting operations.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace": {
            "type": "string",
            "enum": [
                "newLine",
                "sameLine",
                "ignore"
            ],
            "enumDescriptions": [
                "Opening braces are moved to a new line.",
                "Opening braces are kept on the same line and a space is added before each one.",
                "Opening braces are not formatted."
            ],
            "default": "ignore",
            "description": "The position of opening braces for namespaces.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeOpenBrace.type": {
            "type": "string",
            "enum": [
                "newLine",
                "sameLine",
                "ignore"
            ],
            "enumDescriptions": [
                "Opening braces are moved to a new line.",
                "Opening braces are kept on the same line and a space is added before each one.",
                "Opening braces are not formatted."
            ],
            "default": "ignore",
            "description": "The position of opening braces for type definitions.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeOpenBrace.function": {
            "type": "string",
            "enum": [
                "newLine",
                "sameLine",
                "ignore"
            ],
            "enumDescriptions": [
                "Opening braces are moved to a new line.",
                "Opening braces are kept on the same line and a space is added before each one.",
                "Opening braces are not formatted."
            ],
            "default": "ignore",
            "description": "The position of opening braces for functions.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeOpenBrace.block": {
            "type": "string",
            "enum": [
                "newLine",
                "sameLine",
                "ignore"
            ],
            "enumDescriptions": [
                "Opening braces are moved to a new line.",
                "Opening braces are kept on the same line and a space is added before each one.",
                "Opening braces are not formatted."
            ],
            "default": "ignore",
            "description": "The position of opening braces for control blocks.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda": {
            "enum": [
                "newLine",
                "sameLine",
                "ignore"
            ],
            "enumDescriptions": [
                "Opening braces are moved to a new line.",
                "Opening braces are kept on the same line and a space is added before each one.",
                "Opening braces are not formatted."
            ],
            "default": "ignore",
            "description": "The position of opening braces for lambda functions.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "ignore",
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines": {
            "type": "boolean",
            "default": false,
            "description": "Place opening and closing braces for scopes on separate lines.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType": {
            "type": "boolean",
            "default": false,
            "description": "For empty types, move closing braces to the same line as opening braces.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction": {
            "type": "boolean",
            "default": false,
            "description": "For empty function bodies, move closing braces to the same line as opening braces.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeCatch": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Place `catch` and similar keywords on a new line.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeElse": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Place `else` on a new line.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.newLine.beforeWhileInDoWhile": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Place `while` in a `do`-`while` loop on a new line.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis": {
            "type": "string",
            "enum": [
                "insert",
                "remove",
                "ignore"
            ],
            "enumDescriptions": [
                "Add a space before the opening parenthesis of a function.",
                "Spaces before opening parenthesis of a function are removed.",
                "Spaces are left as entered."
            ],
            "default": "remove",
            "description": "Spacing between function names and opening parentheses of argument lists.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "remove",
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinParameterListParentheses": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses": {
            "type": "boolean",
            "default": false,
            "description": "When a function parameter list is empty, a space is inserted between its parentheses.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements": {
            "type": "boolean",
            "default": true,
            "description": "A space is added between the keyword and opening parenthesis in control flow statements.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinControlFlowStatementParentheses": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "A space is added before the opening parenthesis of lambda argument lists.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinCastParentheses": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.afterCastCloseParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the closing parenthesis of a C-style cast.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinExpressionParentheses": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeBlockOpenBrace": {
            "type": "boolean",
            "default": true,
            "description": "A space is added before the opening braces of scope blocks.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.betweenEmptyBraces": {
            "type": "boolean",
            "default": false,
            "description": "When braces are empty and on the same line, a space is inserted between them.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeInitializerListOpenBrace": {
            "type": "boolean",
            "default": false,
            "description": "A space is added before the opening brace of uniform initialization and initializer lists.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinInitializerListBraces": {
            "type": "boolean",
            "default": true,
            "description": "A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.preserveInInitializerList": {
            "type": "boolean",
            "default": true,
            "description": "Spaces around commas are preserved inside uniform initialization and initializer lists.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeOpenSquareBracket": {
            "type": "boolean",
            "default": false,
            "description": "A space is added before opening square brackets.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinSquareBrackets": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the opening square bracket and also before the closing square bracket.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeEmptySquareBrackets": {
            "type": "boolean",
            "default": false,
            "description": "When square brackets are empty, a space is added before the opening bracket.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.betweenEmptySquareBrackets": {
            "type": "boolean",
            "default": false,
            "description": "When square brackets are empty, a space is inserted between them.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.groupSquareBrackets": {
            "type": "boolean",
            "default": true,
            "description": "For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.withinLambdaBrackets": {
            "type": "boolean",
            "default": false,
            "description": "A space is added after the opening square bracket and also before the closing square bracket.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets": {
            "type": "boolean",
            "default": false,
            "description": "When square brackets are empty, a space is inserted between them.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeComma": {
            "type": "boolean",
            "default": false,
            "description": "A space is added before every comma.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.afterComma": {
            "type": "boolean",
            "default": true,
            "description": "A space is added after every comma.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.removeAroundMemberOperators": {
            "type": "boolean",
            "default": true,
            "description": "Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeInheritanceColon": {
            "type": "boolean",
            "default": true,
            "description": "A space is added before the colon for inherited types in class definitions.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.beforeConstructorColon": {
            "type": "boolean",
            "default": true,
            "description": "A space is added before the colon in constructor definitions.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.removeBeforeSemicolon": {
            "type": "boolean",
            "default": true,
            "description": "Spaces are removed before every semicolon.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.insertAfterSemicolon": {
            "type": "boolean",
            "default": false,
            "description": "A space is inserted after every semicolon.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.removeAroundUnaryOperator": {
            "type": "boolean",
            "default": true,
            "description": "Spaces between unary operators and operands are removed.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcFormat.space.aroundBinaryOperator": {
            "type": "string",
            "enum": [
                "insert",
                "remove",
                "ignore"
            ],
            "enumDescriptions": [
                "A space is added before the operator and also after it.",
                "Spaces before and after the operator are removed.",
                "Spaces are left as entered."
            ],
            "default": "insert",
            "description": "Spaces around binary operators.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "insert",
            "restricted": false
        },
        "C_Cpp.vcFormat.space.aroundAssignmentOperator": {
            "type": "string",
            "enum": [
                "insert",
                "remove",
                "ignore"
            ],
            "enumDescriptions": [
                "A space is added before the operator and also after it.",
                "Spaces before and after the operator are removed.",
                "Spaces are left as entered."
            ],
            "default": "insert",
            "description": "Spaces around assignment operators.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "insert",
            "restricted": false
        },
        "C_Cpp.vcFormat.space.pointerReferenceAlignment": {
            "type": "string",
            "enum": [
                "left",
                "center",
                "right",
                "ignore"
            ],
            "enumDescriptions": [
                "Pointer and reference operators are aligned to the left.",
                "Pointer and reference operators are centered.",
                "Pointer and reference operators are aligned to the right.",
                "Pointer and reference operators are not formatted."
            ],
            "default": "left",
            "description": "Spaces around pointer and reference operators.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "left",
            "restricted": false
        },
        "C_Cpp.vcFormat.space.aroundTernaryOperator": {
            "type": "string",
            "enum": [
                "insert",
                "remove",
                "ignore"
            ],
            "enumDescriptions": [
                "A space is added before the operator and also after it.",
                "Spaces before and after the operator are removed.",
                "Spaces are left as entered."
            ],
            "default": "insert",
            "description": "Spaces around conditional operators.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "insert",
            "restricted": false
        },
        "C_Cpp.vcFormat.wrap.preserveBlocks": {
            "type": "string",
            "enum": [
                "oneLiners",
                "allOneLineScopes",
                "never"
            ],
            "markdownEnumDescriptions": [
                "A complete code block that is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.",
                "Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.",
                "Code blocks are always formatted based on the values of the `C_Cpp.vcFormat.newLine.*` settings."
            ],
            "default": "oneLiners",
            "description": "Wrapping options for blocks.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "oneLiners",
            "restricted": false
        },
        "C_Cpp.clang_format_style": {
            "type": "string",
            "default": "file",
            "markdownDescription": "Coding style, currently supports: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` to load the style from a `.clang-format` file in the current or parent directory, or use `file:<path>/.clang-format` to reference a specific path. Use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "file",
            "restricted": false
        },
        "C_Cpp.formatting": {
            "type": "string",
            "enum": [
                "clangFormat",
                "vcFormat",
                "default",
                "disabled"
            ],
            "markdownEnumDescriptions": [
                "`clang-format` will be used to format code.",
                "The Visual C++ formatting engine will be used to format code.",
                "By default, `clang-format` will be used to format the code. However, the Visual C++ formatting engine will be used if an `.editorconfig` file with relevant settings is found nearer to the code being formatted and `#C_Cpp.clang_format_style#` is the default value: `file`.",
                "Code formatting will be disabled."
            ],
            "default": "default",
            "description": "Configures the formatting engine.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "default",
            "restricted": false
        },
        "C_Cpp.clang_format_fallbackStyle": {
            "type": "string",
            "default": "Visual Studio",
            "markdownDescription": "Name of the predefined style used as a fallback in case `clang-format` is invoked with style `file` but the `.clang-format` file is not found. Possible values are `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`, or use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "Visual Studio",
            "restricted": false
        },
        "C_Cpp.clang_format_sortIncludes": {
            "type": [
                "boolean",
                "null"
            ],
            "enum": [
                true,
                false,
                null
            ],
            "default": null,
            "markdownDescription": "If set, overrides the include sorting behavior determined by the `SortIncludes` parameter.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "C_Cpp.doxygen.generateOnType": {
            "type": "boolean",
            "default": true,
            "description": "Controls whether to automatically insert the Doxygen comment after typing the chosen comment style.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.doxygen.generatedStyle": {
            "type": "string",
            "enum": [
                "///",
                "/**",
                "/*!",
                "//!"
            ],
            "default": "///",
            "description": "The string of characters used as the starting line of the Doxygen comment.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": "///",
            "restricted": false
        },
        "C_Cpp.doxygen.sectionTags": {
            "type": "array",
            "default": [
                "attention",
                "tparam",
                "param",
                "result",
                "returns",
                "retval",
                "exception",
                "deprecated",
                "warning",
                "note"
            ],
            "items": {
                "type": "string",
                "enum": [
                    "attention",
                    "author",
                    "authors",
                    "bug",
                    "copyright",
                    "date",
                    "deprecated",
                    "details",
                    "exception",
                    "invariant",
                    "note",
                    "param",
                    "pre",
                    "post",
                    "remark",
                    "remarks",
                    "result",
                    "returns",
                    "retval",
                    "since",
                    "tparam",
                    "test",
                    "todo",
                    "version",
                    "warning"
                ]
            },
            "description": "Select the Doxygen section tags that you would like to appear on hover in the tooltip area when the 'Simplify Structured Comments' setting is enabled. ",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": [
                "attention",
                "tparam",
                "param",
                "result",
                "returns",
                "retval",
                "exception",
                "deprecated",
                "warning",
                "note"
            ],
            "restricted": false
        },
        "C_Cpp.codeAnalysis.exclude": {
            "type": "object",
            "markdownDescription": "Configure glob patterns for excluding folders and files for code analysis. Files not under the workspace folder are always excluded. Inherits values from `#files.exclude#` and `#C_Cpp.files.exclude#`. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
            "default": {},
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "boolean",
                        "markdownDescription": "The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."
                    },
                    {
                        "type": "object",
                        "properties": {
                            "when": {
                                "type": "string",
                                "pattern": "\\w*\\$\\(basename\\)\\w*",
                                "default": "$(basename).ext",
                                "markdownDescription": "Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."
                            }
                        }
                    }
                ]
            },
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes": {
            "type": "boolean",
            "markdownDescription": "If `true`, formatting will be run on the lines changed by 'Fix' code actions.",
            "default": true,
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.codeAnalysis.runAutomatically": {
            "type": "boolean",
            "markdownDescription": "If `true`, code analysis will run automatically on a file after it is opened or saved.",
            "default": true,
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If `true`, code analysis using `clang-tidy` will be enabled and will run after a file is opened or saved if `#C_Cpp.codeAnalysis.runAutomatically#` is `true` (the default).",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.config": {
            "type": "string",
            "markdownDescription": "Specifies a `clang-tidy` configuration in YAML/JSON format: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`. When the value is empty, `clang-tidy` will attempt to find a file named `.clang-tidy` for each source file in its parent directories.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.fallbackConfig": {
            "type": "string",
            "markdownDescription": "Specifies a `clang-tidy` configuration in YAML/JSON format to be used as a fallback when `#C_Cpp.codeAnalysis.clangTidy.config#` is not set and no `.clang-tidy` file is found: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": "",
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.headerFilter": {
            "type": [
                "string",
                "null"
            ],
            "default": null,
            "markdownDescription": "A POSIX extended regular expression (ERE) matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed. The `${workspaceFolder}` variable is supported (and is used as the default fallback value if no `.clang-tidy` file exists). If this option is not `null` (empty), it overrides the `HeaderFilterRegex` option in a `.clang-tidy` file, if any.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.args": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "uniqueItems": true,
            "markdownDescription": "Additional command line arguments to pass to `clang-tidy`. These take precedence over the equivalent `C_Cpp.codeAnalysis.clangTidy.*` settings.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.useBuildPath": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If `true` and `compileCommands` is set, the `-p=<build-path>` argument is passed to `clang-tidy` instead of build arguments being passed after `--`. This may not work if environment variables aren't set so that system includes can be found.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.checks.enabled": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "*",
                    "abseil-*",
                    "abseil-cleanup-ctad",
                    "abseil-duration-*",
                    "abseil-duration-addition",
                    "abseil-duration-comparison",
                    "abseil-duration-conversion-cast",
                    "abseil-duration-division",
                    "abseil-duration-factory-*",
                    "abseil-duration-factory-float",
                    "abseil-duration-factory-scale",
                    "abseil-duration-subtraction",
                    "abseil-duration-unnecessary-conversion",
                    "abseil-faster-strsplit-delimiter",
                    "abseil-no-*",
                    "abseil-no-internal-dependencies",
                    "abseil-no-namespace",
                    "abseil-redundant-strcat-calls",
                    "abseil-str-cat-append",
                    "abseil-string-find-*",
                    "abseil-string-find-startswith",
                    "abseil-string-find-str-contains",
                    "abseil-time-*",
                    "abseil-time-comparison",
                    "abseil-time-subtraction",
                    "abseil-upgrade-duration-conversions",
                    "altera-*",
                    "altera-id-dependent-backward-branch",
                    "altera-kernel-name-restriction",
                    "altera-single-work-item-barrier",
                    "altera-struct-pack-align",
                    "altera-unroll-loops",
                    "android-*",
                    "android-cloexec-*",
                    "android-cloexec-accept",
                    "android-cloexec-accept4",
                    "android-cloexec-creat",
                    "android-cloexec-dup",
                    "android-cloexec-epoll-*",
                    "android-cloexec-epoll-create",
                    "android-cloexec-epoll-create1",
                    "android-cloexec-fopen",
                    "android-cloexec-inotify-*",
                    "android-cloexec-inotify-init",
                    "android-cloexec-inotify-init1",
                    "android-cloexec-memfd-create",
                    "android-cloexec-open",
                    "android-cloexec-pipe",
                    "android-cloexec-pipe2",
                    "android-cloexec-socket",
                    "android-comparison-in-temp-failure-retry",
                    "boost-use-to-string",
                    "bugprone-*",
                    "bugprone-argument-comment",
                    "bugprone-assert-side-effect",
                    "bugprone-assignment-in-if-condition",
                    "bugprone-bad-signal-to-kill-thread",
                    "bugprone-bool-pointer-implicit-conversion",
                    "bugprone-branch-clone",
                    "bugprone-copy-constructor-init",
                    "bugprone-dangling-handle",
                    "bugprone-dynamic-static-initializers",
                    "bugprone-easily-swappable-parameters",
                    "bugprone-exception-escape",
                    "bugprone-fold-init-type",
                    "bugprone-forward-declaration-namespace",
                    "bugprone-forwarding-reference-overload",
                    "bugprone-implicit-widening-of-multiplication-result",
                    "bugprone-inaccurate-erase",
                    "bugprone-incorrect-roundings",
                    "bugprone-infinite-loop",
                    "bugprone-integer-division",
                    "bugprone-lambda-function-name",
                    "bugprone-macro-parentheses",
                    "bugprone-macro-repeated-side-effects",
                    "bugprone-misplaced-*",
                    "bugprone-misplaced-operator-in-strlen-in-alloc",
                    "bugprone-misplaced-pointer-arithmetic-in-alloc",
                    "bugprone-misplaced-widening-cast",
                    "bugprone-move-forwarding-reference",
                    "bugprone-multiple-statement-macro",
                    "bugprone-narrowing-conversions",
                    "bugprone-no-escape",
                    "bugprone-not-null-terminated-result",
                    "bugprone-parent-virtual-call",
                    "bugprone-posix-return",
                    "bugprone-redundant-branch-condition",
                    "bugprone-reserved-identifier",
                    "bugprone-shared-ptr-array-mismatch",
                    "bugprone-signal-handler",
                    "bugprone-signed-char-misuse",
                    "bugprone-sizeof-*",
                    "bugprone-sizeof-container",
                    "bugprone-sizeof-expression",
                    "bugprone-spuriously-wake-up-functions",
                    "bugprone-standalone-empty",
                    "bugprone-string-*",
                    "bugprone-string-constructor",
                    "bugprone-string-integer-assignment",
                    "bugprone-string-literal-with-embedded-nul",
                    "bugprone-stringview-nullptr",
                    "bugprone-suspicious-*",
                    "bugprone-suspicious-enum-usage",
                    "bugprone-suspicious-include",
                    "bugprone-suspicious-memory-comparison",
                    "bugprone-suspicious-memset-usage",
                    "bugprone-suspicious-missing-comma",
                    "bugprone-suspicious-realloc-usage",
                    "bugprone-suspicious-semicolon",
                    "bugprone-suspicious-string-compare",
                    "bugprone-swapped-arguments",
                    "bugprone-terminating-continue",
                    "bugprone-throw-keyword-missing",
                    "bugprone-too-small-loop-variable",
                    "bugprone-unchecked-optional-access",
                    "bugprone-undefined-memory-manipulation",
                    "bugprone-undelegated-constructor",
                    "bugprone-unhandled-*",
                    "bugprone-unhandled-exception-at-new",
                    "bugprone-unhandled-self-assignment",
                    "bugprone-unused-raii",
                    "bugprone-unused-return-value",
                    "bugprone-use-after-move",
                    "bugprone-virtual-near-miss",
                    "cert-*",
                    "cert-con*",
                    "cert-con36-c",
                    "cert-con54-cpp",
                    "cert-dcl*",
                    "cert-dcl03-c",
                    "cert-dcl16-c",
                    "cert-dcl21-cpp",
                    "cert-dcl37-c",
                    "cert-dcl50-cpp",
                    "cert-dcl51-cpp",
                    "cert-dcl54-cpp",
                    "cert-dcl58-cpp",
                    "cert-dcl59-cpp",
                    "cert-env33-c",
                    "cert-err*",
                    "cert-err09-cpp",
                    "cert-err33-c",
                    "cert-err34-c",
                    "cert-err52-cpp",
                    "cert-err58-cpp",
                    "cert-err60-cpp",
                    "cert-err61-cpp",
                    "cert-exp42-c",
                    "cert-fio38-c",
                    "cert-flp*",
                    "cert-flp30-c",
                    "cert-flp37-c",
                    "cert-mem57-cpp",
                    "cert-msc*",
                    "cert-msc30-c",
                    "cert-msc32-c",
                    "cert-msc50-cpp",
                    "cert-msc51-cpp",
                    "cert-msc54-cpp",
                    "cert-oop*",
                    "cert-oop11-cpp",
                    "cert-oop54-cpp",
                    "cert-oop57-cpp",
                    "cert-oop58-cpp",
                    "cert-pos*",
                    "cert-pos44-c",
                    "cert-pos47-c",
                    "cert-sig30-c",
                    "cert-str34-c",
                    "clang-analyzer-*",
                    "clang-analyzer-core.*",
                    "clang-analyzer-core.CallAndMessage",
                    "clang-analyzer-core.DivideZero",
                    "clang-analyzer-core.DynamicTypePropagation",
                    "clang-analyzer-core.NonNullParamChecker",
                    "clang-analyzer-core.NullDereference",
                    "clang-analyzer-core.StackAddressEscape",
                    "clang-analyzer-core.UndefinedBinaryOperatorResult",
                    "clang-analyzer-core.uninitialized.*",
                    "clang-analyzer-core.uninitialized.ArraySubscript",
                    "clang-analyzer-core.uninitialized.Assign",
                    "clang-analyzer-core.uninitialized.Branch",
                    "clang-analyzer-core.uninitialized.CapturedBlockVariable",
                    "clang-analyzer-core.uninitialized.UndefReturn",
                    "clang-analyzer-core.VLASize",
                    "clang-analyzer-cplusplus.*",
                    "clang-analyzer-cplusplus.InnerPointer",
                    "clang-analyzer-cplusplus.Move",
                    "clang-analyzer-cplusplus.NewDelete",
                    "clang-analyzer-cplusplus.NewDeleteLeaks",
                    "clang-analyzer-deadcode.DeadStores",
                    "clang-analyzer-nullablity.*",
                    "clang-analyzer-nullability.NullableDereferenced",
                    "clang-analyzer-nullability.NullablePassedToNonnull",
                    "clang-analyzer-nullability.NullableReturnedFromNonnull",
                    "clang-analyzer-nullability.NullPassedToNonnull",
                    "clang-analyzer-nullability.NullReturnedFromNonnull",
                    "clang-analyzer-optin.*",
                    "clang-analyzer-optin.cplusplus.*",
                    "clang-analyzer-optin.cplusplus.UninitializedObject",
                    "clang-analyzer-optin.cplusplus.VirtualCall",
                    "clang-analyzer-optin.mpi.MPI-Checker",
                    "clang-analyzer-optin.osx.*",
                    "clang-analyzer-optin.osx.cocoa.localizability.*",
                    "clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker",
                    "clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker",
                    "clang-analyzer-optin.osx.OSObjectCStyleCast",
                    "clang-analyzer-optin.performance.*",
                    "clang-analyzer-optin.performance.GCDAntipattern",
                    "clang-analyzer-optin.performance.Padding",
                    "clang-analyzer-optin.portability.UnixAPI",
                    "clang-analyzer-osx.*",
                    "clang-analyzer-osx.API",
                    "clang-analyzer-osx.cocoa.*",
                    "clang-analyzer-osx.cocoa.AtSync",
                    "clang-analyzer-osx.cocoa.AutoreleaseWrite",
                    "clang-analyzer-osx.cocoa.ClassRelease",
                    "clang-analyzer-osx.cocoa.Dealloc",
                    "clang-analyzer-osx.cocoa.IncompatibleMethodTypes",
                    "clang-analyzer-osx.cocoa.Loops",
                    "clang-analyzer-osx.cocoa.MissingSuperCall",
                    "clang-analyzer-osx.cocoa.NilArg",
                    "clang-analyzer-osx.cocoa.NonNilReturnValue",
                    "clang-analyzer-osx.cocoa.NSAutoreleasePool",
                    "clang-analyzer-osx.cocoa.NSError",
                    "clang-analyzer-osx.cocoa.ObjCGenerics",
                    "clang-analyzer-osx.cocoa.RetainCount",
                    "clang-analyzer-osx.cocoa.RetainCountBase",
                    "clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak",
                    "clang-analyzer-osx.cocoa.SelfInit",
                    "clang-analyzer-osx.cocoa.SuperDealloc",
                    "clang-analyzer-osx.cocoa.UnusedIvars",
                    "clang-analyzer-osx.cocoa.VariadicMethodTypes",
                    "clang-analyzer-osx.coreFoundation.*",
                    "clang-analyzer-osx.coreFoundation.CFError",
                    "clang-analyzer-osx.coreFoundation.CFNumber",
                    "clang-analyzer-osx.coreFoundation.CFRetainRelease",
                    "clang-analyzer-osx.coreFoundation.containers.*",
                    "clang-analyzer-osx.coreFoundation.containers.OutOfBounds",
                    "clang-analyzer-osx.coreFoundation.containers.PointerSizedValues",
                    "clang-analyzer-osx.MIG",
                    "clang-analyzer-osx.NumberObjectConversion",
                    "clang-analyzer-osx.ObjCProperty",
                    "clang-analyzer-osx.OSObjectRetainCount",
                    "clang-analyzer-osx.SecKeychainAPI",
                    "clang-analyzer-security.*",
                    "clang-analyzer-security.FloatLoopCounter",
                    "clang-analyzer-security.insecureAPI.*",
                    "clang-analyzer-security.insecureAPI.bcmp",
                    "clang-analyzer-security.insecureAPI.bcopy",
                    "clang-analyzer-security.insecureAPI.bzero",
                    "clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling",
                    "clang-analyzer-security.insecureAPI.getpw",
                    "clang-analyzer-security.insecureAPI.gets",
                    "clang-analyzer-security.insecureAPI.mkstemp",
                    "clang-analyzer-security.insecureAPI.mktemp",
                    "clang-analyzer-security.insecureAPI.rand",
                    "clang-analyzer-security.insecureAPI.strcpy",
                    "clang-analyzer-security.insecureAPI.UncheckedReturn",
                    "clang-analyzer-security.insecureAPI.vfork",
                    "clang-analyzer-unix.*",
                    "clang-analyzer-unix.API",
                    "clang-analyzer-unix.cstring.*",
                    "clang-analyzer-unix.cstring.BadSizeArg",
                    "clang-analyzer-unix.cstring.NullArg",
                    "clang-analyzer-unix.Malloc",
                    "clang-analyzer-unix.MallocSizeof",
                    "clang-analyzer-unix.MismatchedDeallocator",
                    "clang-analyzer-unix.Vfork",
                    "clang-analyzer-valist.*",
                    "clang-analyzer-valist.CopyToSelf",
                    "clang-analyzer-valist.Uninitialized",
                    "clang-analyzer-valist.Unterminated",
                    "concurrency-*",
                    "concurrency-mt-unsafe",
                    "concurrency-thread-canceltype-asynchronous",
                    "cppcoreguidelines-*",
                    "cppcoreguidelines-avoid-*",
                    "cppcoreguidelines-avoid-c-arrays",
                    "cppcoreguidelines-avoid-const-or-ref-data-members",
                    "cppcoreguidelines-avoid-do-while",
                    "cppcoreguidelines-avoid-goto",
                    "cppcoreguidelines-avoid-magic-numbers",
                    "cppcoreguidelines-avoid-non-const-global-variables",
                    "cppcoreguidelines-avoid-reference-coroutine-parameters",
                    "cppcoreguidelines-c-copy-assignment-signature",
                    "cppcoreguidelines-explicit-virtual-functions",
                    "cppcoreguidelines-init-variables",
                    "cppcoreguidelines-interfaces-global-init",
                    "cppcoreguidelines-macro-to-enum",
                    "cppcoreguidelines-macro-usage",
                    "cppcoreguidelines-narrowing-conversions",
                    "cppcoreguidelines-no-malloc",
                    "cppcoreguidelines-non-private-member-variables-in-classes",
                    "cppcoreguidelines-owning-memory",
                    "cppcoreguidelines-prefer-member-initializer",
                    "cppcoreguidelines-pro-bounds-*",
                    "cppcoreguidelines-pro-bounds-array-to-pointer-decay",
                    "cppcoreguidelines-pro-bounds-constant-array-index",
                    "cppcoreguidelines-pro-bounds-pointer-arithmetic",
                    "cppcoreguidelines-pro-type-*",
                    "cppcoreguidelines-pro-type-const-cast",
                    "cppcoreguidelines-pro-type-cstyle-cast",
                    "cppcoreguidelines-pro-type-member-init",
                    "cppcoreguidelines-pro-type-reinterpret-cast",
                    "cppcoreguidelines-pro-type-static-cast-downcast",
                    "cppcoreguidelines-pro-type-union-access",
                    "cppcoreguidelines-pro-type-vararg",
                    "cppcoreguidelines-slicing",
                    "cppcoreguidelines-special-member-functions",
                    "cppcoreguidelines-virtual-class-destructor",
                    "darwin-*",
                    "darwin-avoid-spinlock",
                    "darwin-dispatch-once-nonstatic",
                    "fuchsia-*",
                    "fuchsia-default-*",
                    "fuchsia-default-arguments-calls",
                    "fuchsia-default-arguments-declarations",
                    "fuchsia-header-anon-namespaces",
                    "fuchsia-multiple-inheritance",
                    "fuchsia-overloaded-operator",
                    "fuchsia-statically-constructed-objects",
                    "fuchsia-trailing-return",
                    "fuchsia-virtual-inheritance",
                    "google-*",
                    "google-build-*",
                    "google-build-explicit-make-pair",
                    "google-build-namespaces",
                    "google-build-using-namespace",
                    "google-default-arguments",
                    "google-explicit-constructor",
                    "google-global-names-in-headers",
                    "google-objc-*",
                    "google-objc-avoid-*",
                    "google-objc-avoid-nsobject-new",
                    "google-objc-avoid-throwing-exception",
                    "google-objc-function-naming",
                    "google-objc-global-variable-declaration",
                    "google-readability-*",
                    "google-readability-avoid-underscore-in-googletest-name",
                    "google-readability-braces-around-statements",
                    "google-readability-casting",
                    "google-readability-function-size",
                    "google-readability-namespace-comments",
                    "google-readability-todo",
                    "google-runtime-*",
                    "google-runtime-int",
                    "google-runtime-operator",
                    "google-upgrade-googletest-case",
                    "hicpp-*",
                    "hicpp-avoid-*",
                    "hicpp-avoid-c-arrays",
                    "hicpp-avoid-goto",
                    "hicpp-braces-around-statements",
                    "hicpp-deprecated-headers",
                    "hicpp-exception-baseclass",
                    "hicpp-explicit-conversions",
                    "hicpp-function-size",
                    "hicpp-invalid-access-moved",
                    "hicpp-member-init",
                    "hicpp-move-const-arg",
                    "hicpp-multiway-paths-covered",
                    "hicpp-named-parameter",
                    "hicpp-new-delete-operators",
                    "hicpp-no-*",
                    "hicpp-no-array-decay",
                    "hicpp-no-assembler",
                    "hicpp-no-malloc",
                    "hicpp-noexcept-move",
                    "hicpp-signed-bitwise",
                    "hicpp-special-member-functions",
                    "hicpp-static-assert",
                    "hicpp-undelegated-constructor",
                    "hicpp-uppercase-literal-suffix",
                    "hicpp-use-*",
                    "hicpp-use-auto",
                    "hicpp-use-emplace",
                    "hicpp-use-equals-*",
                    "hicpp-use-equals-default",
                    "hicpp-use-equals-delete",
                    "hicpp-use-noexcept",
                    "hicpp-use-nullptr",
                    "hicpp-use-override",
                    "hicpp-vararg",
                    "linuxkernel-must-use-errs",
                    "llvm-*",
                    "llvm-else-after-return",
                    "llvm-header-guard",
                    "llvm-include-order",
                    "llvm-namespace-comment",
                    "llvm-prefer-*",
                    "llvm-prefer-isa-or-dyn-cast-in-conditionals",
                    "llvm-prefer-register-over-unsigned",
                    "llvm-qualified-auto",
                    "llvm-twine-local",
                    "llvmlibc-*",
                    "llvmlibc-callee-namespace",
                    "llvmlibc-implementation-in-namespace",
                    "llvmlibc-restrict-system-libc-headers",
                    "misc-*",
                    "misc-confusable-identifiers",
                    "misc-const-correctness",
                    "misc-definitions-in-headers",
                    "misc-misleading-*",
                    "misc-misleading-bidirectional",
                    "misc-misleading-identifier",
                    "misc-misplaced-const",
                    "misc-new-delete-overloads",
                    "misc-no-recursion",
                    "misc-non-*",
                    "misc-non-copyable-objects",
                    "misc-non-private-member-variables-in-classes",
                    "misc-redundant-expression",
                    "misc-static-assert",
                    "misc-throw-by-value-catch-by-reference",
                    "misc-unconventional-assign-operator",
                    "misc-uniqueptr-reset-release",
                    "misc-unused-*",
                    "misc-unused-alias-decls",
                    "misc-unused-parameters",
                    "misc-unused-using-decls",
                    "misc-use-anonymous-namespace",
                    "modernize-*",
                    "modernize-avoid-*",
                    "modernize-avoid-bind",
                    "modernize-avoid-c-arrays",
                    "modernize-concat-nested-namespaces",
                    "modernize-deprecated-*",
                    "modernize-deprecated-headers",
                    "modernize-deprecated-ios-base-aliases",
                    "modernize-loop-convert",
                    "modernize-macro-to-enum",
                    "modernize-make-*",
                    "modernize-make-shared",
                    "modernize-make-unique",
                    "modernize-pass-by-value",
                    "modernize-raw-string-literal",
                    "modernize-redundant-void-arg",
                    "modernize-replace-*",
                    "modernize-replace-auto-ptr",
                    "modernize-replace-disallow-copy-and-assign-macro",
                    "modernize-replace-random-shuffle",
                    "modernize-return-braced-init-list",
                    "modernize-shrink-to-fit",
                    "modernize-unary-static-assert",
                    "modernize-use-*",
                    "modernize-use-auto",
                    "modernize-use-bool-literals",
                    "modernize-use-default",
                    "modernize-use-default-member-init",
                    "modernize-use-emplace",
                    "modernize-use-equals-*",
                    "modernize-use-equals-default",
                    "modernize-use-equals-delete",
                    "modernize-use-nodiscard",
                    "modernize-use-noexcept",
                    "modernize-use-nullptr",
                    "modernize-use-override",
                    "modernize-use-trailing-return-type",
                    "modernize-use-transparent-functors",
                    "modernize-use-uncaught-exceptions",
                    "modernize-use-using",
                    "mpi-*",
                    "mpi-buffer-deref",
                    "mpi-type-mismatch",
                    "objc-*",
                    "objc-assert-equals",
                    "objc-avoid-nserror-init",
                    "objc-dealloc-in-category",
                    "objc-forbidden-subclassing",
                    "objc-missing-hash",
                    "objc-nsdate-formatter",
                    "objc-nsinvocation-argument-lifetime",
                    "objc-property-declaration",
                    "objc-super-self",
                    "openmp-*",
                    "openmp-exception-escape",
                    "openmp-use-default-none",
                    "performance-*",
                    "performance-faster-string-find",
                    "performance-for-range-copy",
                    "performance-implicit-conversion-in-loop",
                    "performance-inefficient-*",
                    "performance-inefficient-algorithm",
                    "performance-inefficient-string-concatenation",
                    "performance-inefficient-vector-operation",
                    "performance-move-*",
                    "performance-move-const-arg",
                    "performance-move-constructor-init",
                    "performance-no-*",
                    "performance-no-automatic-move",
                    "performance-no-int-to-ptr",
                    "performance-noexcept-move-constructor",
                    "performance-trivially-destructible",
                    "performance-type-promotion-in-math-fn",
                    "performance-unnecessary-*",
                    "performance-unnecessary-copy-initialization",
                    "performance-unnecessary-value-param",
                    "portability-*",
                    "portability-restrict-system-includes",
                    "portability-simd-intrinsics",
                    "portability-std-allocator-const",
                    "readability-*",
                    "readability-avoid-const-params-in-decls",
                    "readability-braces-around-statements",
                    "readability-const-return-type",
                    "readability-container-*",
                    "readability-container-contains",
                    "readability-container-data-pointer",
                    "readability-container-size-empty",
                    "readability-convert-member-functions-to-static",
                    "readability-delete-null-pointer",
                    "readability-duplicate-include",
                    "readability-else-after-return",
                    "readability-function-*",
                    "readability-function-cognitive-complexity",
                    "readability-function-size",
                    "readability-identifier-*",
                    "readability-identifier-length",
                    "readability-identifier-naming",
                    "readability-implicit-bool-conversion",
                    "readability-inconsistent-declaration-parameter-name",
                    "readability-isolate-declaration",
                    "readability-magic-numbers",
                    "readability-make-member-function-const",
                    "readability-misleading-indentation",
                    "readability-misplaced-array-index",
                    "readability-named-parameter",
                    "readability-non-const-parameter",
                    "readability-qualified-auto",
                    "readability-redundant-*",
                    "readability-redundant-access-specifiers",
                    "readability-redundant-control-flow",
                    "readability-redundant-declaration",
                    "readability-redundant-function-ptr-dereference",
                    "readability-redundant-member-init",
                    "readability-redundant-preprocessor",
                    "readability-redundant-smartptr-get",
                    "readability-redundant-string-*",
                    "readability-redundant-string-cstr",
                    "readability-redundant-string-init",
                    "readability-simplify-*",
                    "readability-simplify-boolean-expr",
                    "readability-simplify-subscript-expr",
                    "readability-static-*",
                    "readability-static-accessed-through-instance",
                    "readability-static-definition-in-anonymous-namespace",
                    "readability-string-compare",
                    "readability-suspicious-call-argument",
                    "readability-uniqueptr-delete-release",
                    "readability-uppercase-literal-suffix",
                    "readability-use-anyofallof",
                    "zircon-temporary-objects"
                ]
            },
            "uniqueItems": true,
            "markdownDescription": "List of enabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any. The default check `clang-analyzer-*` is always used unless it is explicitly disabled.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.codeAnalysis.clangTidy.checks.disabled": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "*",
                    "abseil-*",
                    "abseil-cleanup-ctad",
                    "abseil-duration-*",
                    "abseil-duration-addition",
                    "abseil-duration-comparison",
                    "abseil-duration-conversion-cast",
                    "abseil-duration-division",
                    "abseil-duration-factory-*",
                    "abseil-duration-factory-float",
                    "abseil-duration-factory-scale",
                    "abseil-duration-subtraction",
                    "abseil-duration-unnecessary-conversion",
                    "abseil-faster-strsplit-delimiter",
                    "abseil-no-*",
                    "abseil-no-internal-dependencies",
                    "abseil-no-namespace",
                    "abseil-redundant-strcat-calls",
                    "abseil-str-cat-append",
                    "abseil-string-find-*",
                    "abseil-string-find-startswith",
                    "abseil-string-find-str-contains",
                    "abseil-time-*",
                    "abseil-time-comparison",
                    "abseil-time-subtraction",
                    "abseil-upgrade-duration-conversions",
                    "altera-*",
                    "altera-id-dependent-backward-branch",
                    "altera-kernel-name-restriction",
                    "altera-single-work-item-barrier",
                    "altera-struct-pack-align",
                    "altera-unroll-loops",
                    "android-*",
                    "android-cloexec-*",
                    "android-cloexec-accept",
                    "android-cloexec-accept4",
                    "android-cloexec-creat",
                    "android-cloexec-dup",
                    "android-cloexec-epoll-*",
                    "android-cloexec-epoll-create",
                    "android-cloexec-epoll-create1",
                    "android-cloexec-fopen",
                    "android-cloexec-inotify-*",
                    "android-cloexec-inotify-init",
                    "android-cloexec-inotify-init1",
                    "android-cloexec-memfd-create",
                    "android-cloexec-open",
                    "android-cloexec-pipe",
                    "android-cloexec-pipe2",
                    "android-cloexec-socket",
                    "android-comparison-in-temp-failure-retry",
                    "boost-use-to-string",
                    "bugprone-*",
                    "bugprone-argument-comment",
                    "bugprone-assert-side-effect",
                    "bugprone-assignment-in-if-condition",
                    "bugprone-bad-signal-to-kill-thread",
                    "bugprone-bool-pointer-implicit-conversion",
                    "bugprone-branch-clone",
                    "bugprone-copy-constructor-init",
                    "bugprone-dangling-handle",
                    "bugprone-dynamic-static-initializers",
                    "bugprone-easily-swappable-parameters",
                    "bugprone-exception-escape",
                    "bugprone-fold-init-type",
                    "bugprone-forward-declaration-namespace",
                    "bugprone-forwarding-reference-overload",
                    "bugprone-implicit-widening-of-multiplication-result",
                    "bugprone-inaccurate-erase",
                    "bugprone-incorrect-roundings",
                    "bugprone-infinite-loop",
                    "bugprone-integer-division",
                    "bugprone-lambda-function-name",
                    "bugprone-macro-parentheses",
                    "bugprone-macro-repeated-side-effects",
                    "bugprone-misplaced-*",
                    "bugprone-misplaced-operator-in-strlen-in-alloc",
                    "bugprone-misplaced-pointer-arithmetic-in-alloc",
                    "bugprone-misplaced-widening-cast",
                    "bugprone-move-forwarding-reference",
                    "bugprone-multiple-statement-macro",
                    "bugprone-narrowing-conversions",
                    "bugprone-no-escape",
                    "bugprone-not-null-terminated-result",
                    "bugprone-parent-virtual-call",
                    "bugprone-posix-return",
                    "bugprone-redundant-branch-condition",
                    "bugprone-reserved-identifier",
                    "bugprone-shared-ptr-array-mismatch",
                    "bugprone-signal-handler",
                    "bugprone-signed-char-misuse",
                    "bugprone-sizeof-*",
                    "bugprone-sizeof-container",
                    "bugprone-sizeof-expression",
                    "bugprone-spuriously-wake-up-functions",
                    "bugprone-standalone-empty",
                    "bugprone-string-*",
                    "bugprone-string-constructor",
                    "bugprone-string-integer-assignment",
                    "bugprone-string-literal-with-embedded-nul",
                    "bugprone-stringview-nullptr",
                    "bugprone-suspicious-*",
                    "bugprone-suspicious-enum-usage",
                    "bugprone-suspicious-include",
                    "bugprone-suspicious-memory-comparison",
                    "bugprone-suspicious-memset-usage",
                    "bugprone-suspicious-missing-comma",
                    "bugprone-suspicious-realloc-usage",
                    "bugprone-suspicious-semicolon",
                    "bugprone-suspicious-string-compare",
                    "bugprone-swapped-arguments",
                    "bugprone-terminating-continue",
                    "bugprone-throw-keyword-missing",
                    "bugprone-too-small-loop-variable",
                    "bugprone-unchecked-optional-access",
                    "bugprone-undefined-memory-manipulation",
                    "bugprone-undelegated-constructor",
                    "bugprone-unhandled-*",
                    "bugprone-unhandled-exception-at-new",
                    "bugprone-unhandled-self-assignment",
                    "bugprone-unused-raii",
                    "bugprone-unused-return-value",
                    "bugprone-use-after-move",
                    "bugprone-virtual-near-miss",
                    "cert-*",
                    "cert-con*",
                    "cert-con36-c",
                    "cert-con54-cpp",
                    "cert-dcl*",
                    "cert-dcl03-c",
                    "cert-dcl16-c",
                    "cert-dcl21-cpp",
                    "cert-dcl37-c",
                    "cert-dcl50-cpp",
                    "cert-dcl51-cpp",
                    "cert-dcl54-cpp",
                    "cert-dcl58-cpp",
                    "cert-dcl59-cpp",
                    "cert-env33-c",
                    "cert-err*",
                    "cert-err09-cpp",
                    "cert-err33-c",
                    "cert-err34-c",
                    "cert-err52-cpp",
                    "cert-err58-cpp",
                    "cert-err60-cpp",
                    "cert-err61-cpp",
                    "cert-exp42-c",
                    "cert-fio38-c",
                    "cert-flp*",
                    "cert-flp30-c",
                    "cert-flp37-c",
                    "cert-mem57-cpp",
                    "cert-msc*",
                    "cert-msc30-c",
                    "cert-msc32-c",
                    "cert-msc50-cpp",
                    "cert-msc51-cpp",
                    "cert-msc54-cpp",
                    "cert-oop*",
                    "cert-oop11-cpp",
                    "cert-oop54-cpp",
                    "cert-oop57-cpp",
                    "cert-oop58-cpp",
                    "cert-pos*",
                    "cert-pos44-c",
                    "cert-pos47-c",
                    "cert-sig30-c",
                    "cert-str34-c",
                    "clang-analyzer-*",
                    "clang-analyzer-core.*",
                    "clang-analyzer-core.CallAndMessage",
                    "clang-analyzer-core.DivideZero",
                    "clang-analyzer-core.DynamicTypePropagation",
                    "clang-analyzer-core.NonNullParamChecker",
                    "clang-analyzer-core.NullDereference",
                    "clang-analyzer-core.StackAddressEscape",
                    "clang-analyzer-core.UndefinedBinaryOperatorResult",
                    "clang-analyzer-core.uninitialized.*",
                    "clang-analyzer-core.uninitialized.ArraySubscript",
                    "clang-analyzer-core.uninitialized.Assign",
                    "clang-analyzer-core.uninitialized.Branch",
                    "clang-analyzer-core.uninitialized.CapturedBlockVariable",
                    "clang-analyzer-core.uninitialized.UndefReturn",
                    "clang-analyzer-core.VLASize",
                    "clang-analyzer-cplusplus.*",
                    "clang-analyzer-cplusplus.InnerPointer",
                    "clang-analyzer-cplusplus.Move",
                    "clang-analyzer-cplusplus.NewDelete",
                    "clang-analyzer-cplusplus.NewDeleteLeaks",
                    "clang-analyzer-deadcode.DeadStores",
                    "clang-analyzer-nullablity.*",
                    "clang-analyzer-nullability.NullableDereferenced",
                    "clang-analyzer-nullability.NullablePassedToNonnull",
                    "clang-analyzer-nullability.NullableReturnedFromNonnull",
                    "clang-analyzer-nullability.NullPassedToNonnull",
                    "clang-analyzer-nullability.NullReturnedFromNonnull",
                    "clang-analyzer-optin.*",
                    "clang-analyzer-optin.cplusplus.*",
                    "clang-analyzer-optin.cplusplus.UninitializedObject",
                    "clang-analyzer-optin.cplusplus.VirtualCall",
                    "clang-analyzer-optin.mpi.MPI-Checker",
                    "clang-analyzer-optin.osx.*",
                    "clang-analyzer-optin.osx.cocoa.localizability.*",
                    "clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker",
                    "clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker",
                    "clang-analyzer-optin.osx.OSObjectCStyleCast",
                    "clang-analyzer-optin.performance.*",
                    "clang-analyzer-optin.performance.GCDAntipattern",
                    "clang-analyzer-optin.performance.Padding",
                    "clang-analyzer-optin.portability.UnixAPI",
                    "clang-analyzer-osx.*",
                    "clang-analyzer-osx.API",
                    "clang-analyzer-osx.cocoa.*",
                    "clang-analyzer-osx.cocoa.AtSync",
                    "clang-analyzer-osx.cocoa.AutoreleaseWrite",
                    "clang-analyzer-osx.cocoa.ClassRelease",
                    "clang-analyzer-osx.cocoa.Dealloc",
                    "clang-analyzer-osx.cocoa.IncompatibleMethodTypes",
                    "clang-analyzer-osx.cocoa.Loops",
                    "clang-analyzer-osx.cocoa.MissingSuperCall",
                    "clang-analyzer-osx.cocoa.NilArg",
                    "clang-analyzer-osx.cocoa.NonNilReturnValue",
                    "clang-analyzer-osx.cocoa.NSAutoreleasePool",
                    "clang-analyzer-osx.cocoa.NSError",
                    "clang-analyzer-osx.cocoa.ObjCGenerics",
                    "clang-analyzer-osx.cocoa.RetainCount",
                    "clang-analyzer-osx.cocoa.RetainCountBase",
                    "clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak",
                    "clang-analyzer-osx.cocoa.SelfInit",
                    "clang-analyzer-osx.cocoa.SuperDealloc",
                    "clang-analyzer-osx.cocoa.UnusedIvars",
                    "clang-analyzer-osx.cocoa.VariadicMethodTypes",
                    "clang-analyzer-osx.coreFoundation.*",
                    "clang-analyzer-osx.coreFoundation.CFError",
                    "clang-analyzer-osx.coreFoundation.CFNumber",
                    "clang-analyzer-osx.coreFoundation.CFRetainRelease",
                    "clang-analyzer-osx.coreFoundation.containers.*",
                    "clang-analyzer-osx.coreFoundation.containers.OutOfBounds",
                    "clang-analyzer-osx.coreFoundation.containers.PointerSizedValues",
                    "clang-analyzer-osx.MIG",
                    "clang-analyzer-osx.NumberObjectConversion",
                    "clang-analyzer-osx.ObjCProperty",
                    "clang-analyzer-osx.OSObjectRetainCount",
                    "clang-analyzer-osx.SecKeychainAPI",
                    "clang-analyzer-security.*",
                    "clang-analyzer-security.FloatLoopCounter",
                    "clang-analyzer-security.insecureAPI.*",
                    "clang-analyzer-security.insecureAPI.bcmp",
                    "clang-analyzer-security.insecureAPI.bcopy",
                    "clang-analyzer-security.insecureAPI.bzero",
                    "clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling",
                    "clang-analyzer-security.insecureAPI.getpw",
                    "clang-analyzer-security.insecureAPI.gets",
                    "clang-analyzer-security.insecureAPI.mkstemp",
                    "clang-analyzer-security.insecureAPI.mktemp",
                    "clang-analyzer-security.insecureAPI.rand",
                    "clang-analyzer-security.insecureAPI.strcpy",
                    "clang-analyzer-security.insecureAPI.UncheckedReturn",
                    "clang-analyzer-security.insecureAPI.vfork",
                    "clang-analyzer-unix.*",
                    "clang-analyzer-unix.API",
                    "clang-analyzer-unix.cstring.*",
                    "clang-analyzer-unix.cstring.BadSizeArg",
                    "clang-analyzer-unix.cstring.NullArg",
                    "clang-analyzer-unix.Malloc",
                    "clang-analyzer-unix.MallocSizeof",
                    "clang-analyzer-unix.MismatchedDeallocator",
                    "clang-analyzer-unix.Vfork",
                    "clang-analyzer-valist.*",
                    "clang-analyzer-valist.CopyToSelf",
                    "clang-analyzer-valist.Uninitialized",
                    "clang-analyzer-valist.Unterminated",
                    "concurrency-*",
                    "concurrency-mt-unsafe",
                    "concurrency-thread-canceltype-asynchronous",
                    "cppcoreguidelines-*",
                    "cppcoreguidelines-avoid-*",
                    "cppcoreguidelines-avoid-c-arrays",
                    "cppcoreguidelines-avoid-const-or-ref-data-members",
                    "cppcoreguidelines-avoid-do-while",
                    "cppcoreguidelines-avoid-goto",
                    "cppcoreguidelines-avoid-magic-numbers",
                    "cppcoreguidelines-avoid-non-const-global-variables",
                    "cppcoreguidelines-avoid-reference-coroutine-parameters",
                    "cppcoreguidelines-c-copy-assignment-signature",
                    "cppcoreguidelines-explicit-virtual-functions",
                    "cppcoreguidelines-init-variables",
                    "cppcoreguidelines-interfaces-global-init",
                    "cppcoreguidelines-macro-to-enum",
                    "cppcoreguidelines-macro-usage",
                    "cppcoreguidelines-narrowing-conversions",
                    "cppcoreguidelines-no-malloc",
                    "cppcoreguidelines-non-private-member-variables-in-classes",
                    "cppcoreguidelines-owning-memory",
                    "cppcoreguidelines-prefer-member-initializer",
                    "cppcoreguidelines-pro-bounds-*",
                    "cppcoreguidelines-pro-bounds-array-to-pointer-decay",
                    "cppcoreguidelines-pro-bounds-constant-array-index",
                    "cppcoreguidelines-pro-bounds-pointer-arithmetic",
                    "cppcoreguidelines-pro-type-*",
                    "cppcoreguidelines-pro-type-const-cast",
                    "cppcoreguidelines-pro-type-cstyle-cast",
                    "cppcoreguidelines-pro-type-member-init",
                    "cppcoreguidelines-pro-type-reinterpret-cast",
                    "cppcoreguidelines-pro-type-static-cast-downcast",
                    "cppcoreguidelines-pro-type-union-access",
                    "cppcoreguidelines-pro-type-vararg",
                    "cppcoreguidelines-slicing",
                    "cppcoreguidelines-special-member-functions",
                    "cppcoreguidelines-virtual-class-destructor",
                    "darwin-*",
                    "darwin-avoid-spinlock",
                    "darwin-dispatch-once-nonstatic",
                    "fuchsia-*",
                    "fuchsia-default-*",
                    "fuchsia-default-arguments-calls",
                    "fuchsia-default-arguments-declarations",
                    "fuchsia-header-anon-namespaces",
                    "fuchsia-multiple-inheritance",
                    "fuchsia-overloaded-operator",
                    "fuchsia-statically-constructed-objects",
                    "fuchsia-trailing-return",
                    "fuchsia-virtual-inheritance",
                    "google-*",
                    "google-build-*",
                    "google-build-explicit-make-pair",
                    "google-build-namespaces",
                    "google-build-using-namespace",
                    "google-default-arguments",
                    "google-explicit-constructor",
                    "google-global-names-in-headers",
                    "google-objc-*",
                    "google-objc-avoid-*",
                    "google-objc-avoid-nsobject-new",
                    "google-objc-avoid-throwing-exception",
                    "google-objc-function-naming",
                    "google-objc-global-variable-declaration",
                    "google-readability-*",
                    "google-readability-avoid-underscore-in-googletest-name",
                    "google-readability-braces-around-statements",
                    "google-readability-casting",
                    "google-readability-function-size",
                    "google-readability-namespace-comments",
                    "google-readability-todo",
                    "google-runtime-*",
                    "google-runtime-int",
                    "google-runtime-operator",
                    "google-upgrade-googletest-case",
                    "hicpp-*",
                    "hicpp-avoid-*",
                    "hicpp-avoid-c-arrays",
                    "hicpp-avoid-goto",
                    "hicpp-braces-around-statements",
                    "hicpp-deprecated-headers",
                    "hicpp-exception-baseclass",
                    "hicpp-explicit-conversions",
                    "hicpp-function-size",
                    "hicpp-invalid-access-moved",
                    "hicpp-member-init",
                    "hicpp-move-const-arg",
                    "hicpp-multiway-paths-covered",
                    "hicpp-named-parameter",
                    "hicpp-new-delete-operators",
                    "hicpp-no-*",
                    "hicpp-no-array-decay",
                    "hicpp-no-assembler",
                    "hicpp-no-malloc",
                    "hicpp-noexcept-move",
                    "hicpp-signed-bitwise",
                    "hicpp-special-member-functions",
                    "hicpp-static-assert",
                    "hicpp-undelegated-constructor",
                    "hicpp-uppercase-literal-suffix",
                    "hicpp-use-*",
                    "hicpp-use-auto",
                    "hicpp-use-emplace",
                    "hicpp-use-equals-*",
                    "hicpp-use-equals-default",
                    "hicpp-use-equals-delete",
                    "hicpp-use-noexcept",
                    "hicpp-use-nullptr",
                    "hicpp-use-override",
                    "hicpp-vararg",
                    "linuxkernel-must-use-errs",
                    "llvm-*",
                    "llvm-else-after-return",
                    "llvm-header-guard",
                    "llvm-include-order",
                    "llvm-namespace-comment",
                    "llvm-prefer-*",
                    "llvm-prefer-isa-or-dyn-cast-in-conditionals",
                    "llvm-prefer-register-over-unsigned",
                    "llvm-qualified-auto",
                    "llvm-twine-local",
                    "llvmlibc-*",
                    "llvmlibc-callee-namespace",
                    "llvmlibc-implementation-in-namespace",
                    "llvmlibc-restrict-system-libc-headers",
                    "misc-*",
                    "misc-confusable-identifiers",
                    "misc-const-correctness",
                    "misc-definitions-in-headers",
                    "misc-misleading-*",
                    "misc-misleading-bidirectional",
                    "misc-misleading-identifier",
                    "misc-misplaced-const",
                    "misc-new-delete-overloads",
                    "misc-no-recursion",
                    "misc-non-*",
                    "misc-non-copyable-objects",
                    "misc-non-private-member-variables-in-classes",
                    "misc-redundant-expression",
                    "misc-static-assert",
                    "misc-throw-by-value-catch-by-reference",
                    "misc-unconventional-assign-operator",
                    "misc-uniqueptr-reset-release",
                    "misc-unused-*",
                    "misc-unused-alias-decls",
                    "misc-unused-parameters",
                    "misc-unused-using-decls",
                    "misc-use-anonymous-namespace",
                    "modernize-*",
                    "modernize-avoid-*",
                    "modernize-avoid-bind",
                    "modernize-avoid-c-arrays",
                    "modernize-concat-nested-namespaces",
                    "modernize-deprecated-*",
                    "modernize-deprecated-headers",
                    "modernize-deprecated-ios-base-aliases",
                    "modernize-loop-convert",
                    "modernize-macro-to-enum",
                    "modernize-make-*",
                    "modernize-make-shared",
                    "modernize-make-unique",
                    "modernize-pass-by-value",
                    "modernize-raw-string-literal",
                    "modernize-redundant-void-arg",
                    "modernize-replace-*",
                    "modernize-replace-auto-ptr",
                    "modernize-replace-disallow-copy-and-assign-macro",
                    "modernize-replace-random-shuffle",
                    "modernize-return-braced-init-list",
                    "modernize-shrink-to-fit",
                    "modernize-unary-static-assert",
                    "modernize-use-*",
                    "modernize-use-auto",
                    "modernize-use-bool-literals",
                    "modernize-use-default",
                    "modernize-use-default-member-init",
                    "modernize-use-emplace",
                    "modernize-use-equals-*",
                    "modernize-use-equals-default",
                    "modernize-use-equals-delete",
                    "modernize-use-nodiscard",
                    "modernize-use-noexcept",
                    "modernize-use-nullptr",
                    "modernize-use-override",
                    "modernize-use-trailing-return-type",
                    "modernize-use-transparent-functors",
                    "modernize-use-uncaught-exceptions",
                    "modernize-use-using",
                    "mpi-*",
                    "mpi-buffer-deref",
                    "mpi-type-mismatch",
                    "objc-*",
                    "objc-assert-equals",
                    "objc-avoid-nserror-init",
                    "objc-dealloc-in-category",
                    "objc-forbidden-subclassing",
                    "objc-missing-hash",
                    "objc-nsdate-formatter",
                    "objc-nsinvocation-argument-lifetime",
                    "objc-property-declaration",
                    "objc-super-self",
                    "openmp-*",
                    "openmp-exception-escape",
                    "openmp-use-default-none",
                    "performance-*",
                    "performance-faster-string-find",
                    "performance-for-range-copy",
                    "performance-implicit-conversion-in-loop",
                    "performance-inefficient-*",
                    "performance-inefficient-algorithm",
                    "performance-inefficient-string-concatenation",
                    "performance-inefficient-vector-operation",
                    "performance-move-*",
                    "performance-move-const-arg",
                    "performance-move-constructor-init",
                    "performance-no-*",
                    "performance-no-automatic-move",
                    "performance-no-int-to-ptr",
                    "performance-noexcept-move-constructor",
                    "performance-trivially-destructible",
                    "performance-type-promotion-in-math-fn",
                    "performance-unnecessary-*",
                    "performance-unnecessary-copy-initialization",
                    "performance-unnecessary-value-param",
                    "portability-*",
                    "portability-restrict-system-includes",
                    "portability-simd-intrinsics",
                    "portability-std-allocator-const",
                    "readability-*",
                    "readability-avoid-const-params-in-decls",
                    "readability-braces-around-statements",
                    "readability-const-return-type",
                    "readability-container-*",
                    "readability-container-contains",
                    "readability-container-data-pointer",
                    "readability-container-size-empty",
                    "readability-convert-member-functions-to-static",
                    "readability-delete-null-pointer",
                    "readability-duplicate-include",
                    "readability-else-after-return",
                    "readability-function-*",
                    "readability-function-cognitive-complexity",
                    "readability-function-size",
                    "readability-identifier-*",
                    "readability-identifier-length",
                    "readability-identifier-naming",
                    "readability-implicit-bool-conversion",
                    "readability-inconsistent-declaration-parameter-name",
                    "readability-isolate-declaration",
                    "readability-magic-numbers",
                    "readability-make-member-function-const",
                    "readability-misleading-indentation",
                    "readability-misplaced-array-index",
                    "readability-named-parameter",
                    "readability-non-const-parameter",
                    "readability-qualified-auto",
                    "readability-redundant-*",
                    "readability-redundant-access-specifiers",
                    "readability-redundant-control-flow",
                    "readability-redundant-declaration",
                    "readability-redundant-function-ptr-dereference",
                    "readability-redundant-member-init",
                    "readability-redundant-preprocessor",
                    "readability-redundant-smartptr-get",
                    "readability-redundant-string-*",
                    "readability-redundant-string-cstr",
                    "readability-redundant-string-init",
                    "readability-simplify-*",
                    "readability-simplify-boolean-expr",
                    "readability-simplify-subscript-expr",
                    "readability-static-*",
                    "readability-static-accessed-through-instance",
                    "readability-static-definition-in-anonymous-namespace",
                    "readability-string-compare",
                    "readability-suspicious-call-argument",
                    "readability-uniqueptr-delete-release",
                    "readability-uppercase-literal-suffix",
                    "readability-use-anyofallof",
                    "zircon-temporary-objects"
                ]
            },
            "uniqueItems": true,
            "markdownDescription": "List of disabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "default": [],
            "restricted": false
        },
        "C_Cpp.debugShortcut": {
            "type": "boolean",
            "default": true,
            "description": "Show the \"Run and Debug\" play button and \"Add Debug Configuration\" gear in the editor title bar for C++ files.",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "C_Cpp.vcpkg.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).",
            "scope": 4,
            "source": {
                "id": "ms-vscode.cpptools",
                "displayName": "C/C++"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.addonManager.enable": {
            "default": true,
            "markdownDescription": "Whether the addon manager is enabled or not.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.codeLens.enable": {
            "default": false,
            "markdownDescription": "Enable code lens.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.completion.autoRequire": {
            "default": true,
            "markdownDescription": "When the input looks like a file name, automatically `require` this file.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.completion.callSnippet": {
            "default": "Disable",
            "enum": [
                "Disable",
                "Both",
                "Replace"
            ],
            "markdownDescription": "Shows function call snippets.",
            "markdownEnumDescriptions": [
                "Only shows `function name`.",
                "Shows `function name` and `call snippet`.",
                "Only shows `call snippet.`"
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Disable",
            "restricted": false
        },
        "Lua.completion.displayContext": {
            "default": 0,
            "markdownDescription": "Previewing the relevant code snippet of the suggestion may help you understand the usage of the suggestion. The number set indicates the number of intercepted lines in the code fragment. If it is set to `0`, this feature can be disabled.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 0,
            "restricted": false
        },
        "Lua.completion.enable": {
            "default": true,
            "markdownDescription": "Enable completion.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.completion.keywordSnippet": {
            "default": "Replace",
            "enum": [
                "Disable",
                "Both",
                "Replace"
            ],
            "markdownDescription": "Shows keyword syntax snippets.",
            "markdownEnumDescriptions": [
                "Only shows `keyword`.",
                "Shows `keyword` and `syntax snippet`.",
                "Only shows `syntax snippet`."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Replace",
            "restricted": false
        },
        "Lua.completion.postfix": {
            "default": "@",
            "markdownDescription": "The symbol used to trigger the postfix suggestion.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "@",
            "restricted": false
        },
        "Lua.completion.requireSeparator": {
            "default": ".",
            "markdownDescription": "The separator used when `require`.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": ".",
            "restricted": false
        },
        "Lua.completion.showParams": {
            "default": true,
            "markdownDescription": "Display parameters in completion list. When the function has multiple definitions, they will be displayed separately.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.completion.showWord": {
            "default": "Fallback",
            "enum": [
                "Enable",
                "Fallback",
                "Disable"
            ],
            "markdownDescription": "Show contextual words in suggestions.",
            "markdownEnumDescriptions": [
                "Always show context words in suggestions.",
                "Contextual words are only displayed when suggestions based on semantics cannot be provided.",
                "Do not display context words."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Fallback",
            "restricted": false
        },
        "Lua.completion.workspaceWord": {
            "default": true,
            "markdownDescription": "Whether the displayed context word contains the content of other files in the workspace.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.diagnostics.disable": {
            "default": [],
            "items": {
                "enum": [
                    "action-after-return",
                    "ambiguity-1",
                    "ambiguous-syntax",
                    "args-after-dots",
                    "assign-type-mismatch",
                    "await-in-sync",
                    "block-after-else",
                    "break-outside",
                    "cast-local-type",
                    "cast-type-mismatch",
                    "circle-doc-class",
                    "close-non-object",
                    "code-after-break",
                    "codestyle-check",
                    "count-down-loop",
                    "deprecated",
                    "different-requires",
                    "discard-returns",
                    "doc-field-no-class",
                    "duplicate-doc-alias",
                    "duplicate-doc-field",
                    "duplicate-doc-param",
                    "duplicate-index",
                    "duplicate-set-field",
                    "empty-block",
                    "err-assign-as-eq",
                    "err-c-long-comment",
                    "err-comment-prefix",
                    "err-do-as-then",
                    "err-eq-as-assign",
                    "err-esc",
                    "err-nonstandard-symbol",
                    "err-then-as-do",
                    "exp-in-action",
                    "global-element",
                    "global-in-nil-env",
                    "incomplete-signature-doc",
                    "index-in-func-name",
                    "inject-field",
                    "invisible",
                    "jump-local-scope",
                    "keyword",
                    "local-limit",
                    "lowercase-global",
                    "lua-doc-miss-sign",
                    "luadoc-error-diag-mode",
                    "luadoc-miss-alias-extends",
                    "luadoc-miss-alias-name",
                    "luadoc-miss-arg-name",
                    "luadoc-miss-cate-name",
                    "luadoc-miss-class-extends-name",
                    "luadoc-miss-class-name",
                    "luadoc-miss-diag-mode",
                    "luadoc-miss-diag-name",
                    "luadoc-miss-field-extends",
                    "luadoc-miss-field-name",
                    "luadoc-miss-fun-after-overload",
                    "luadoc-miss-generic-name",
                    "luadoc-miss-local-name",
                    "luadoc-miss-module-name",
                    "luadoc-miss-operator-name",
                    "luadoc-miss-param-extends",
                    "luadoc-miss-param-name",
                    "luadoc-miss-see-name",
                    "luadoc-miss-sign-name",
                    "luadoc-miss-symbol",
                    "luadoc-miss-type-name",
                    "luadoc-miss-vararg-type",
                    "luadoc-miss-version",
                    "malformed-number",
                    "miss-end",
                    "miss-esc-x",
                    "miss-exp",
                    "miss-exponent",
                    "miss-field",
                    "miss-loop-max",
                    "miss-loop-min",
                    "miss-method",
                    "miss-name",
                    "miss-sep-in-table",
                    "miss-space-between",
                    "miss-symbol",
                    "missing-fields",
                    "missing-global-doc",
                    "missing-local-export-doc",
                    "missing-parameter",
                    "missing-return",
                    "missing-return-value",
                    "name-style-check",
                    "need-check-nil",
                    "need-paren",
                    "nesting-long-mark",
                    "newfield-call",
                    "newline-call",
                    "no-unknown",
                    "no-visible-label",
                    "not-yieldable",
                    "param-type-mismatch",
                    "redefined-label",
                    "redefined-local",
                    "redundant-parameter",
                    "redundant-return",
                    "redundant-return-value",
                    "redundant-value",
                    "return-type-mismatch",
                    "set-const",
                    "spell-check",
                    "trailing-space",
                    "unbalanced-assignments",
                    "undefined-doc-class",
                    "undefined-doc-name",
                    "undefined-doc-param",
                    "undefined-env-child",
                    "undefined-field",
                    "undefined-global",
                    "unexpect-dots",
                    "unexpect-efunc-name",
                    "unexpect-lfunc-name",
                    "unexpect-symbol",
                    "unicode-name",
                    "unknown-attribute",
                    "unknown-cast-variable",
                    "unknown-diag-code",
                    "unknown-operator",
                    "unknown-symbol",
                    "unreachable-code",
                    "unsupport-symbol",
                    "unused-function",
                    "unused-label",
                    "unused-local",
                    "unused-vararg"
                ],
                "type": "string"
            },
            "markdownDescription": "Disabled diagnostic (Use code in hover brackets).",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.diagnostics.disableScheme": {
            "default": [
                "git"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Do not diagnose Lua files that use the following scheme.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [
                "git"
            ],
            "restricted": false
        },
        "Lua.diagnostics.enable": {
            "default": true,
            "markdownDescription": "Enable diagnostics.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.diagnostics.globals": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Defined global variables.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.diagnostics.groupFileStatus": {
            "additionalProperties": false,
            "markdownDescription": "Modify the diagnostic needed file status in a group.\n\n* Opened:  only diagnose opened files\n* Any:     diagnose all files\n* None:    disable this diagnostic\n\n`Fallback` means that diagnostics in this group are controlled by `diagnostics.neededFileStatus` separately.\nOther settings will override individual settings without end of `!`.\n",
            "properties": {
                "ambiguity": {
                    "default": "Fallback",
                    "description": "* ambiguity-1\n* count-down-loop\n* different-requires\n* newfield-call\n* newline-call",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "await": {
                    "default": "Fallback",
                    "description": "* await-in-sync\n* not-yieldable",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "codestyle": {
                    "default": "Fallback",
                    "description": "* codestyle-check\n* name-style-check\n* spell-check",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "conventions": {
                    "default": "Fallback",
                    "description": "* global-element",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "duplicate": {
                    "default": "Fallback",
                    "description": "* duplicate-index\n* duplicate-set-field",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "global": {
                    "default": "Fallback",
                    "description": "* global-in-nil-env\n* lowercase-global\n* undefined-env-child\n* undefined-global",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "luadoc": {
                    "default": "Fallback",
                    "description": "* circle-doc-class\n* doc-field-no-class\n* duplicate-doc-alias\n* duplicate-doc-field\n* duplicate-doc-param\n* incomplete-signature-doc\n* missing-global-doc\n* missing-local-export-doc\n* undefined-doc-class\n* undefined-doc-name\n* undefined-doc-param\n* unknown-cast-variable\n* unknown-diag-code\n* unknown-operator",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "redefined": {
                    "default": "Fallback",
                    "description": "* redefined-local",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strict": {
                    "default": "Fallback",
                    "description": "* close-non-object\n* deprecated\n* discard-returns\n* invisible",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strong": {
                    "default": "Fallback",
                    "description": "* no-unknown",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "type-check": {
                    "default": "Fallback",
                    "description": "* assign-type-mismatch\n* cast-local-type\n* cast-type-mismatch\n* inject-field\n* need-check-nil\n* param-type-mismatch\n* return-type-mismatch\n* undefined-field",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unbalanced": {
                    "default": "Fallback",
                    "description": "* missing-fields\n* missing-parameter\n* missing-return\n* missing-return-value\n* redundant-parameter\n* redundant-return-value\n* redundant-value\n* unbalanced-assignments",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unused": {
                    "default": "Fallback",
                    "description": "* code-after-break\n* empty-block\n* redundant-return\n* trailing-space\n* unreachable-code\n* unused-function\n* unused-label\n* unused-local\n* unused-vararg",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "groupFileStatus",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "default": {},
            "restricted": false
        },
        "Lua.diagnostics.groupSeverity": {
            "additionalProperties": false,
            "markdownDescription": "Modify the diagnostic severity in a group.\n`Fallback` means that diagnostics in this group are controlled by `diagnostics.severity` separately.\nOther settings will override individual settings without end of `!`.\n",
            "properties": {
                "ambiguity": {
                    "default": "Fallback",
                    "description": "* ambiguity-1\n* count-down-loop\n* different-requires\n* newfield-call\n* newline-call",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "await": {
                    "default": "Fallback",
                    "description": "* await-in-sync\n* not-yieldable",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "codestyle": {
                    "default": "Fallback",
                    "description": "* codestyle-check\n* name-style-check\n* spell-check",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "conventions": {
                    "default": "Fallback",
                    "description": "* global-element",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "duplicate": {
                    "default": "Fallback",
                    "description": "* duplicate-index\n* duplicate-set-field",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "global": {
                    "default": "Fallback",
                    "description": "* global-in-nil-env\n* lowercase-global\n* undefined-env-child\n* undefined-global",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "luadoc": {
                    "default": "Fallback",
                    "description": "* circle-doc-class\n* doc-field-no-class\n* duplicate-doc-alias\n* duplicate-doc-field\n* duplicate-doc-param\n* incomplete-signature-doc\n* missing-global-doc\n* missing-local-export-doc\n* undefined-doc-class\n* undefined-doc-name\n* undefined-doc-param\n* unknown-cast-variable\n* unknown-diag-code\n* unknown-operator",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "redefined": {
                    "default": "Fallback",
                    "description": "* redefined-local",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strict": {
                    "default": "Fallback",
                    "description": "* close-non-object\n* deprecated\n* discard-returns\n* invisible",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strong": {
                    "default": "Fallback",
                    "description": "* no-unknown",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "type-check": {
                    "default": "Fallback",
                    "description": "* assign-type-mismatch\n* cast-local-type\n* cast-type-mismatch\n* inject-field\n* need-check-nil\n* param-type-mismatch\n* return-type-mismatch\n* undefined-field",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unbalanced": {
                    "default": "Fallback",
                    "description": "* missing-fields\n* missing-parameter\n* missing-return\n* missing-return-value\n* redundant-parameter\n* redundant-return-value\n* redundant-value\n* unbalanced-assignments",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unused": {
                    "default": "Fallback",
                    "description": "* code-after-break\n* empty-block\n* redundant-return\n* trailing-space\n* unreachable-code\n* unused-function\n* unused-label\n* unused-local\n* unused-vararg",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "groupSeverity",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "default": {},
            "restricted": false
        },
        "Lua.diagnostics.ignoredFiles": {
            "default": "Opened",
            "enum": [
                "Enable",
                "Opened",
                "Disable"
            ],
            "markdownDescription": "How to diagnose ignored files.",
            "markdownEnumDescriptions": [
                "Always diagnose these files.",
                "Only when these files are opened will it be diagnosed.",
                "These files are not diagnosed."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Opened",
            "restricted": false
        },
        "Lua.diagnostics.libraryFiles": {
            "default": "Opened",
            "enum": [
                "Enable",
                "Opened",
                "Disable"
            ],
            "markdownDescription": "How to diagnose files loaded via `Lua.workspace.library`.",
            "markdownEnumDescriptions": [
                "Always diagnose these files.",
                "Only when these files are opened will it be diagnosed.",
                "These files are not diagnosed."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Opened",
            "restricted": false
        },
        "Lua.diagnostics.neededFileStatus": {
            "additionalProperties": false,
            "markdownDescription": "* Opened:  only diagnose opened files\n* Any:     diagnose all files\n* None:    disable this diagnostic\n\nEnd with `!` means override the group setting `diagnostics.groupFileStatus`.\n",
            "properties": {
                "ambiguity-1": {
                    "default": "Any",
                    "description": "Enable ambiguous operator precedence diagnostics. For example, the `num or 0 + 1` expression will be suggested `(num or 0) + 1` instead.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "assign-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for assignments in which the value's type does not match the type of the assigned variable.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "await-in-sync": {
                    "default": "None",
                    "description": "Enable diagnostics for calls of asynchronous functions within a synchronous function.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "cast-local-type": {
                    "default": "Opened",
                    "description": "Enable diagnostics for casts of local variables where the target type does not match the defined type.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "cast-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for casts where the target type does not match the initial type.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "circle-doc-class": {
                    "default": "Any",
                    "description": "%config.diagnostics.circle-doc-class%",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "close-non-object": {
                    "default": "Any",
                    "description": "Enable diagnostics for attempts to close a variable with a non-object.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "code-after-break": {
                    "default": "Opened",
                    "description": "Enable diagnostics for code placed after a break statement in a loop.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "codestyle-check": {
                    "default": "None",
                    "description": "Enable diagnostics for incorrectly styled lines.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "count-down-loop": {
                    "default": "Any",
                    "description": "Enable diagnostics for `for` loops which will never reach their max/limit because the loop is incrementing instead of decrementing.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "deprecated": {
                    "default": "Any",
                    "description": "Enable diagnostics to highlight deprecated API.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "different-requires": {
                    "default": "Any",
                    "description": "Enable diagnostics for files which are required by two different paths.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "discard-returns": {
                    "default": "Any",
                    "description": "Enable diagnostics for calls of functions annotated with `---@nodiscard` where the return values are ignored.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "doc-field-no-class": {
                    "default": "Any",
                    "description": "Enable diagnostics to highlight a field annotation without a defining class annotation.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-alias": {
                    "default": "Any",
                    "description": "Enable diagnostics for a duplicated alias annotation name.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-field": {
                    "default": "Any",
                    "description": "Enable diagnostics for a duplicated field annotation name.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-param": {
                    "default": "Any",
                    "description": "Enable diagnostics for a duplicated param annotation name.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-index": {
                    "default": "Any",
                    "description": "Enable duplicate table index diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-set-field": {
                    "default": "Opened",
                    "description": "Enable diagnostics for setting the same field in a class more than once.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "empty-block": {
                    "default": "Opened",
                    "description": "Enable empty code block diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "global-element": {
                    "default": "None",
                    "description": "Enable diagnostics to warn about global elements.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "global-in-nil-env": {
                    "default": "Any",
                    "description": "Enable cannot use global variables （ `_ENV` is set to `nil`） diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "incomplete-signature-doc": {
                    "default": "None",
                    "description": "Incomplete @param or @return annotations for functions.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "inject-field": {
                    "default": "Opened",
                    "description": "%config.diagnostics.inject-field%",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "invisible": {
                    "default": "Any",
                    "description": "Enable diagnostics for accesses to fields which are invisible.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "lowercase-global": {
                    "default": "Any",
                    "description": "Enable lowercase global variable definition diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-fields": {
                    "default": "Any",
                    "description": "%config.diagnostics.missing-fields%",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-global-doc": {
                    "default": "None",
                    "description": "Missing annotations for globals! Global functions must have a comment and annotations for all parameters and return values.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-local-export-doc": {
                    "default": "None",
                    "description": "Missing annotations for exported locals! Exported local functions must have a comment and annotations for all parameters and return values.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-parameter": {
                    "default": "Any",
                    "description": "Enable diagnostics for function calls where the number of arguments is less than the number of annotated function parameters.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-return": {
                    "default": "Any",
                    "description": "Enable diagnostics for functions with return annotations which have no return statement.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-return-value": {
                    "default": "Any",
                    "description": "Enable diagnostics for return statements without values although the containing function declares returns.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "name-style-check": {
                    "default": "None",
                    "description": "Enable diagnostics for name style.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "need-check-nil": {
                    "default": "Opened",
                    "description": "Enable diagnostics for variable usages if `nil` or an optional (potentially `nil`) value was assigned to the variable before.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "newfield-call": {
                    "default": "Any",
                    "description": "Enable newfield call diagnostics. It is raised when the parenthesis of a function call appear on the following line when defining a field in a table.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "newline-call": {
                    "default": "Any",
                    "description": "Enable newline call diagnostics. Is's raised when a line starting with `(` is encountered, which is syntactically parsed as a function call on the previous line.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "no-unknown": {
                    "default": "None",
                    "description": "Enable diagnostics for cases in which the type cannot be inferred.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "not-yieldable": {
                    "default": "None",
                    "description": "Enable diagnostics for calls to `coroutine.yield()` when it is not permitted.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "param-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for function calls where the type of a provided parameter does not match the type of the annotated function definition.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redefined-local": {
                    "default": "Opened",
                    "description": "Enable redefined local variable diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-parameter": {
                    "default": "Any",
                    "description": "Enable redundant function parameter diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-return": {
                    "default": "Opened",
                    "description": "Enable diagnostics for return statements which are not needed because the function would exit on its own.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-return-value": {
                    "default": "Any",
                    "description": "Enable diagnostics for return statements which return an extra value which is not specified by a return annotation.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-value": {
                    "default": "Any",
                    "description": "Enable the redundant values assigned diagnostics. It's raised during assignment operation, when the number of values is higher than the number of objects being assigned.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "return-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for return values whose type does not match the type declared in the corresponding return annotation.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "spell-check": {
                    "default": "None",
                    "description": "Enable diagnostics for typos in strings.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "trailing-space": {
                    "default": "Opened",
                    "description": "Enable trailing space diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unbalanced-assignments": {
                    "default": "Any",
                    "description": "Enable diagnostics on multiple assignments if not all variables obtain a value (e.g., `local x,y = 1`).",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-doc-class": {
                    "default": "Any",
                    "description": "Enable diagnostics for class annotations in which an undefined class is referenced.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-doc-name": {
                    "default": "Any",
                    "description": "Enable diagnostics for type annotations referencing an undefined type or alias.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-doc-param": {
                    "default": "Any",
                    "description": "Enable diagnostics for cases in which a parameter annotation is given without declaring the parameter in the function definition.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-env-child": {
                    "default": "Any",
                    "description": "Enable undefined environment variable diagnostics. It's raised when `_ENV` table is set to a new literal table, but the used global variable is no longer present in the global environment.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-field": {
                    "default": "Opened",
                    "description": "Enable diagnostics for cases in which an undefined field of a variable is read.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-global": {
                    "default": "Any",
                    "description": "Enable undefined global variable diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unknown-cast-variable": {
                    "default": "Any",
                    "description": "Enable diagnostics for casts of undefined variables.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unknown-diag-code": {
                    "default": "Any",
                    "description": "Enable diagnostics in cases in which an unknown diagnostics code is entered.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unknown-operator": {
                    "default": "Any",
                    "description": "Enable diagnostics for unknown operators.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unreachable-code": {
                    "default": "Opened",
                    "description": "Enable diagnostics for unreachable code.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-function": {
                    "default": "Opened",
                    "description": "Enable unused function diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-label": {
                    "default": "Opened",
                    "description": "Enable unused label diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-local": {
                    "default": "Opened",
                    "description": "Enable unused local variable diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-vararg": {
                    "default": "Opened",
                    "description": "Enable unused vararg diagnostics.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "neededFileStatus",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "default": {},
            "restricted": false
        },
        "Lua.diagnostics.severity": {
            "additionalProperties": false,
            "markdownDescription": "Modify the diagnostic severity.\n\nEnd with `!` means override the group setting `diagnostics.groupSeverity`.\n",
            "properties": {
                "ambiguity-1": {
                    "default": "Warning",
                    "description": "Enable ambiguous operator precedence diagnostics. For example, the `num or 0 + 1` expression will be suggested `(num or 0) + 1` instead.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "assign-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for assignments in which the value's type does not match the type of the assigned variable.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "await-in-sync": {
                    "default": "Warning",
                    "description": "Enable diagnostics for calls of asynchronous functions within a synchronous function.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "cast-local-type": {
                    "default": "Warning",
                    "description": "Enable diagnostics for casts of local variables where the target type does not match the defined type.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "cast-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for casts where the target type does not match the initial type.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "circle-doc-class": {
                    "default": "Warning",
                    "description": "%config.diagnostics.circle-doc-class%",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "close-non-object": {
                    "default": "Warning",
                    "description": "Enable diagnostics for attempts to close a variable with a non-object.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "code-after-break": {
                    "default": "Hint",
                    "description": "Enable diagnostics for code placed after a break statement in a loop.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "codestyle-check": {
                    "default": "Warning",
                    "description": "Enable diagnostics for incorrectly styled lines.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "count-down-loop": {
                    "default": "Warning",
                    "description": "Enable diagnostics for `for` loops which will never reach their max/limit because the loop is incrementing instead of decrementing.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "deprecated": {
                    "default": "Warning",
                    "description": "Enable diagnostics to highlight deprecated API.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "different-requires": {
                    "default": "Warning",
                    "description": "Enable diagnostics for files which are required by two different paths.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "discard-returns": {
                    "default": "Warning",
                    "description": "Enable diagnostics for calls of functions annotated with `---@nodiscard` where the return values are ignored.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "doc-field-no-class": {
                    "default": "Warning",
                    "description": "Enable diagnostics to highlight a field annotation without a defining class annotation.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-alias": {
                    "default": "Warning",
                    "description": "Enable diagnostics for a duplicated alias annotation name.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-field": {
                    "default": "Warning",
                    "description": "Enable diagnostics for a duplicated field annotation name.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-param": {
                    "default": "Warning",
                    "description": "Enable diagnostics for a duplicated param annotation name.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-index": {
                    "default": "Warning",
                    "description": "Enable duplicate table index diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-set-field": {
                    "default": "Warning",
                    "description": "Enable diagnostics for setting the same field in a class more than once.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "empty-block": {
                    "default": "Hint",
                    "description": "Enable empty code block diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "global-element": {
                    "default": "Warning",
                    "description": "Enable diagnostics to warn about global elements.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "global-in-nil-env": {
                    "default": "Warning",
                    "description": "Enable cannot use global variables （ `_ENV` is set to `nil`） diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "incomplete-signature-doc": {
                    "default": "Warning",
                    "description": "Incomplete @param or @return annotations for functions.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "inject-field": {
                    "default": "Warning",
                    "description": "%config.diagnostics.inject-field%",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "invisible": {
                    "default": "Warning",
                    "description": "Enable diagnostics for accesses to fields which are invisible.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "lowercase-global": {
                    "default": "Information",
                    "description": "Enable lowercase global variable definition diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-fields": {
                    "default": "Warning",
                    "description": "%config.diagnostics.missing-fields%",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-global-doc": {
                    "default": "Warning",
                    "description": "Missing annotations for globals! Global functions must have a comment and annotations for all parameters and return values.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-local-export-doc": {
                    "default": "Warning",
                    "description": "Missing annotations for exported locals! Exported local functions must have a comment and annotations for all parameters and return values.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-parameter": {
                    "default": "Warning",
                    "description": "Enable diagnostics for function calls where the number of arguments is less than the number of annotated function parameters.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-return": {
                    "default": "Warning",
                    "description": "Enable diagnostics for functions with return annotations which have no return statement.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-return-value": {
                    "default": "Warning",
                    "description": "Enable diagnostics for return statements without values although the containing function declares returns.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "name-style-check": {
                    "default": "Warning",
                    "description": "Enable diagnostics for name style.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "need-check-nil": {
                    "default": "Warning",
                    "description": "Enable diagnostics for variable usages if `nil` or an optional (potentially `nil`) value was assigned to the variable before.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "newfield-call": {
                    "default": "Warning",
                    "description": "Enable newfield call diagnostics. It is raised when the parenthesis of a function call appear on the following line when defining a field in a table.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "newline-call": {
                    "default": "Warning",
                    "description": "Enable newline call diagnostics. Is's raised when a line starting with `(` is encountered, which is syntactically parsed as a function call on the previous line.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "no-unknown": {
                    "default": "Warning",
                    "description": "Enable diagnostics for cases in which the type cannot be inferred.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "not-yieldable": {
                    "default": "Warning",
                    "description": "Enable diagnostics for calls to `coroutine.yield()` when it is not permitted.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "param-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for function calls where the type of a provided parameter does not match the type of the annotated function definition.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redefined-local": {
                    "default": "Hint",
                    "description": "Enable redefined local variable diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-parameter": {
                    "default": "Warning",
                    "description": "Enable redundant function parameter diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-return": {
                    "default": "Hint",
                    "description": "Enable diagnostics for return statements which are not needed because the function would exit on its own.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-return-value": {
                    "default": "Warning",
                    "description": "Enable diagnostics for return statements which return an extra value which is not specified by a return annotation.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-value": {
                    "default": "Warning",
                    "description": "Enable the redundant values assigned diagnostics. It's raised during assignment operation, when the number of values is higher than the number of objects being assigned.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "return-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for return values whose type does not match the type declared in the corresponding return annotation.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "spell-check": {
                    "default": "Information",
                    "description": "Enable diagnostics for typos in strings.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "trailing-space": {
                    "default": "Hint",
                    "description": "Enable trailing space diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unbalanced-assignments": {
                    "default": "Warning",
                    "description": "Enable diagnostics on multiple assignments if not all variables obtain a value (e.g., `local x,y = 1`).",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-doc-class": {
                    "default": "Warning",
                    "description": "Enable diagnostics for class annotations in which an undefined class is referenced.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-doc-name": {
                    "default": "Warning",
                    "description": "Enable diagnostics for type annotations referencing an undefined type or alias.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-doc-param": {
                    "default": "Warning",
                    "description": "Enable diagnostics for cases in which a parameter annotation is given without declaring the parameter in the function definition.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-env-child": {
                    "default": "Information",
                    "description": "Enable undefined environment variable diagnostics. It's raised when `_ENV` table is set to a new literal table, but the used global variable is no longer present in the global environment.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-field": {
                    "default": "Warning",
                    "description": "Enable diagnostics for cases in which an undefined field of a variable is read.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-global": {
                    "default": "Warning",
                    "description": "Enable undefined global variable diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unknown-cast-variable": {
                    "default": "Warning",
                    "description": "Enable diagnostics for casts of undefined variables.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unknown-diag-code": {
                    "default": "Warning",
                    "description": "Enable diagnostics in cases in which an unknown diagnostics code is entered.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unknown-operator": {
                    "default": "Warning",
                    "description": "Enable diagnostics for unknown operators.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unreachable-code": {
                    "default": "Hint",
                    "description": "Enable diagnostics for unreachable code.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-function": {
                    "default": "Hint",
                    "description": "Enable unused function diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-label": {
                    "default": "Hint",
                    "description": "Enable unused label diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-local": {
                    "default": "Hint",
                    "description": "Enable unused local variable diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-vararg": {
                    "default": "Hint",
                    "description": "Enable unused vararg diagnostics.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "severity",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "default": {},
            "restricted": false
        },
        "Lua.diagnostics.unusedLocalExclude": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Do not diagnose `unused-local` when the variable name matches the following pattern.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.diagnostics.workspaceDelay": {
            "default": 3000,
            "markdownDescription": "Latency (milliseconds) for workspace diagnostics.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 3000,
            "restricted": false
        },
        "Lua.diagnostics.workspaceEvent": {
            "default": "OnSave",
            "enum": [
                "OnChange",
                "OnSave",
                "None"
            ],
            "markdownDescription": "Set the time to trigger workspace diagnostics.",
            "markdownEnumDescriptions": [
                "Trigger workspace diagnostics when the file is changed.",
                "Trigger workspace diagnostics when the file is saved.",
                "Disable workspace diagnostics."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "OnSave",
            "restricted": false
        },
        "Lua.diagnostics.workspaceRate": {
            "default": 100,
            "markdownDescription": "Workspace diagnostics run rate (%). Decreasing this value reduces CPU usage, but also reduces the speed of workspace diagnostics. The diagnosis of the file you are currently editing is always done at full speed and is not affected by this setting.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 100,
            "restricted": false
        },
        "Lua.doc.packageName": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Treat specific field names as package, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are package, witch can only be accessed in the file where the definition is located.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.doc.privateName": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Treat specific field names as private, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are private, witch can only be accessed in the class where the definition is located.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.doc.protectedName": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Treat specific field names as protected, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are protected, witch can only be accessed in the class where the definition is located and its subclasses.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.format.defaultConfig": {
            "additionalProperties": false,
            "default": {},
            "markdownDescription": "The default format configuration. Has a lower priority than `.editorconfig` file in the workspace.\nRead [formatter docs](https://github.com/CppCXY/EmmyLuaCodeStyle/tree/master/docs) to learn usage.\n",
            "patternProperties": {
                ".*": {
                    "default": "",
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "defaultConfig",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "Lua.format.enable": {
            "default": true,
            "markdownDescription": "Enable code formatter.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hint.arrayIndex": {
            "default": "Auto",
            "enum": [
                "Enable",
                "Auto",
                "Disable"
            ],
            "markdownDescription": "Show hints of array index when constructing a table.",
            "markdownEnumDescriptions": [
                "Show hints in all tables.",
                "Show hints only when the table is greater than 3 items, or the table is a mixed table.",
                "Disable hints of array index."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Auto",
            "restricted": false
        },
        "Lua.hint.await": {
            "default": true,
            "markdownDescription": "If the called function is marked `---@async`, prompt `await` at the call.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hint.enable": {
            "default": false,
            "markdownDescription": "Enable inlay hint.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.hint.paramName": {
            "default": "All",
            "enum": [
                "All",
                "Literal",
                "Disable"
            ],
            "markdownDescription": "Show hints of parameter name at the function call.",
            "markdownEnumDescriptions": [
                "All types of parameters are shown.",
                "Only literal type parameters are shown.",
                "Disable parameter hints."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "All",
            "restricted": false
        },
        "Lua.hint.paramType": {
            "default": true,
            "markdownDescription": "Show type hints at the parameter of the function.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hint.semicolon": {
            "default": "SameLine",
            "enum": [
                "All",
                "SameLine",
                "Disable"
            ],
            "markdownDescription": "If there is no semicolon at the end of the statement, display a virtual semicolon.",
            "markdownEnumDescriptions": [
                "All statements display virtual semicolons.",
                "When two statements are on the same line, display a semicolon between them.",
                "Disable virtual semicolons."
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "SameLine",
            "restricted": false
        },
        "Lua.hint.setType": {
            "default": false,
            "markdownDescription": "Show hints of type at assignment operation.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.hover.enable": {
            "default": true,
            "markdownDescription": "Enable hover.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hover.enumsLimit": {
            "default": 5,
            "markdownDescription": "When the value corresponds to multiple types, limit the number of types displaying.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "Lua.hover.expandAlias": {
            "default": true,
            "markdownDescription": "Whether to expand the alias. For example, expands `---@alias myType boolean|number` appears as `boolean|number`, otherwise it appears as `myType'.\n",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hover.previewFields": {
            "default": 50,
            "markdownDescription": "When hovering to view a table, limits the maximum number of previews for fields.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 50,
            "restricted": false
        },
        "Lua.hover.viewNumber": {
            "default": true,
            "markdownDescription": "Hover to view numeric content (only if literal is not decimal).",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hover.viewString": {
            "default": true,
            "markdownDescription": "Hover to view the contents of a string (only if the literal contains an escape character).",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.hover.viewStringMax": {
            "default": 1000,
            "markdownDescription": "The maximum length of a hover to view the contents of a string.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 1000,
            "restricted": false
        },
        "Lua.misc.executablePath": {
            "default": "",
            "markdownDescription": "Specify the executable path in VSCode.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "",
            "restricted": false
        },
        "Lua.misc.parameters": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "[Command line parameters](https://github.com/LuaLS/lua-telemetry-server/tree/master/method) when starting the language server in VSCode.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": true
        },
        "Lua.nameStyle.config": {
            "additionalProperties": false,
            "default": {},
            "markdownDescription": "Set name style config",
            "patternProperties": {
                ".*": {
                    "type": [
                        "string",
                        "array"
                    ]
                }
            },
            "scope": 4,
            "title": "config",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "Lua.runtime.builtin": {
            "additionalProperties": false,
            "markdownDescription": "Adjust the enabled state of the built-in library. You can disable (or redefine) the non-existent library according to the actual runtime environment.\n\n* `default`: Indicates that the library will be enabled or disabled according to the runtime version\n* `enable`: always enable\n* `disable`: always disable\n",
            "properties": {
                "basic": {
                    "default": "default",
                    "description": "%config.runtime.builtin.basic%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "bit": {
                    "default": "default",
                    "description": "%config.runtime.builtin.bit%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "bit32": {
                    "default": "default",
                    "description": "%config.runtime.builtin.bit32%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "builtin": {
                    "default": "default",
                    "description": "%config.runtime.builtin.builtin%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "coroutine": {
                    "default": "default",
                    "description": "%config.runtime.builtin.coroutine%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "debug": {
                    "default": "default",
                    "description": "%config.runtime.builtin.debug%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "ffi": {
                    "default": "default",
                    "description": "%config.runtime.builtin.ffi%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "io": {
                    "default": "default",
                    "description": "%config.runtime.builtin.io%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "jit": {
                    "default": "default",
                    "description": "%config.runtime.builtin.jit%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "jit.profile": {
                    "default": "default",
                    "description": "%config.runtime.builtin.jit.profile%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "jit.util": {
                    "default": "default",
                    "description": "%config.runtime.builtin.jit.util%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "math": {
                    "default": "default",
                    "description": "%config.runtime.builtin.math%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "os": {
                    "default": "default",
                    "description": "%config.runtime.builtin.os%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "package": {
                    "default": "default",
                    "description": "%config.runtime.builtin.package%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "string": {
                    "default": "default",
                    "description": "%config.runtime.builtin.string%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "string.buffer": {
                    "default": "default",
                    "description": "%config.runtime.builtin.string.buffer%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "table": {
                    "default": "default",
                    "description": "%config.runtime.builtin.table%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "table.clear": {
                    "default": "default",
                    "description": "%config.runtime.builtin.table.clear%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "table.new": {
                    "default": "default",
                    "description": "%config.runtime.builtin.table.new%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "utf8": {
                    "default": "default",
                    "description": "%config.runtime.builtin.utf8%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "builtin",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "default": {},
            "restricted": false
        },
        "Lua.runtime.fileEncoding": {
            "default": "utf8",
            "enum": [
                "utf8",
                "ansi",
                "utf16le",
                "utf16be"
            ],
            "markdownDescription": "File encoding. The `ansi` option is only available under the `Windows` platform.",
            "markdownEnumDescriptions": [
                "%config.runtime.fileEncoding.utf8%",
                "%config.runtime.fileEncoding.ansi%",
                "%config.runtime.fileEncoding.utf16le%",
                "%config.runtime.fileEncoding.utf16be%"
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "utf8",
            "restricted": false
        },
        "Lua.runtime.meta": {
            "default": "${version} ${language} ${encoding}",
            "markdownDescription": "Format of the directory name of the meta files.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "${version} ${language} ${encoding}",
            "restricted": false
        },
        "Lua.runtime.nonstandardSymbol": {
            "default": [],
            "items": {
                "enum": [
                    "//",
                    "/**/",
                    "`",
                    "+=",
                    "-=",
                    "*=",
                    "/=",
                    "%=",
                    "^=",
                    "//=",
                    "|=",
                    "&=",
                    "<<=",
                    ">>=",
                    "||",
                    "&&",
                    "!",
                    "!=",
                    "continue"
                ],
                "type": "string"
            },
            "markdownDescription": "Supports non-standard symbols. Make sure that your runtime environment supports these symbols.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.runtime.path": {
            "default": [
                "?.lua",
                "?/init.lua"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "When using `require`, how to find the file based on the input name.\nSetting this config to `?/init.lua` means that when you enter `require 'myfile'`, `${workspace}/myfile/init.lua` will be searched from the loaded files.\nif `runtime.pathStrict` is `false`, `${workspace}/**/myfile/init.lua` will also be searched.\nIf you want to load files outside the workspace, you need to set `Lua.workspace.library` first.\n",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [
                "?.lua",
                "?/init.lua"
            ],
            "restricted": false
        },
        "Lua.runtime.pathStrict": {
            "default": false,
            "markdownDescription": "When enabled, `runtime.path` will only search the first level of directories, see the description of `runtime.path`.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.runtime.plugin": {
            "default": "",
            "markdownDescription": "Plugin path. Please read [wiki](https://luals.github.io/wiki/plugins) to learn more.",
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "",
            "restricted": true
        },
        "Lua.runtime.pluginArgs": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Additional arguments for the plugin.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.runtime.special": {
            "additionalProperties": false,
            "default": {},
            "markdownDescription": "The custom global variables are regarded as some special built-in variables, and the language server will provide special support\nThe following example shows that 'include' is treated as' require '.\n```json\n\"Lua.runtime.special\" : {\n    \"include\" : \"require\"\n}\n```\n",
            "patternProperties": {
                ".*": {
                    "default": "require",
                    "enum": [
                        "_G",
                        "rawset",
                        "rawget",
                        "setmetatable",
                        "require",
                        "dofile",
                        "loadfile",
                        "pcall",
                        "xpcall",
                        "assert",
                        "error",
                        "type",
                        "os.exit"
                    ],
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "special",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "Lua.runtime.unicodeName": {
            "default": false,
            "markdownDescription": "Allows Unicode characters in name.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.runtime.version": {
            "default": "Lua 5.4",
            "enum": [
                "Lua 5.1",
                "Lua 5.2",
                "Lua 5.3",
                "Lua 5.4",
                "LuaJIT"
            ],
            "markdownDescription": "Lua runtime version.",
            "markdownEnumDescriptions": [
                "%config.runtime.version.Lua 5.1%",
                "%config.runtime.version.Lua 5.2%",
                "%config.runtime.version.Lua 5.3%",
                "%config.runtime.version.Lua 5.4%",
                "%config.runtime.version.LuaJIT%"
            ],
            "scope": 4,
            "type": "string",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": "Lua 5.4",
            "restricted": false
        },
        "Lua.semantic.annotation": {
            "default": true,
            "markdownDescription": "Semantic coloring of type annotations.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.semantic.enable": {
            "default": true,
            "markdownDescription": "Enable semantic color. You may need to set `editor.semanticHighlighting.enabled` to `true` to take effect.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.semantic.keyword": {
            "default": false,
            "markdownDescription": "Semantic coloring of keywords/literals/operators. You only need to enable this feature if your editor cannot do syntax coloring.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.semantic.variable": {
            "default": true,
            "markdownDescription": "Semantic coloring of variables/fields/parameters.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.signatureHelp.enable": {
            "default": true,
            "markdownDescription": "Enable signature help.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.spell.dict": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Custom words for spell checking.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.type.castNumberToInteger": {
            "default": true,
            "markdownDescription": "Allowed to assign the `number` type to the `integer` type.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.type.weakNilCheck": {
            "default": false,
            "markdownDescription": "When checking the type of union type, ignore the `nil` in it.\n\nWhen this setting is `false`, the `number|nil` type cannot be assigned to the `number` type. It can be with `true`.\n",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.type.weakUnionCheck": {
            "default": false,
            "markdownDescription": "Once one subtype of a union type meets the condition, the union type also meets the condition.\n\nWhen this setting is `false`, the `number|boolean` type cannot be assigned to the `number` type. It can be with `true`.\n",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "Lua.typeFormat.config": {
            "additionalProperties": false,
            "markdownDescription": "Configures the formatting behavior while typing Lua code.",
            "properties": {
                "auto_complete_end": {
                    "default": "true",
                    "description": "Controls if `end` is automatically completed at suitable positions.",
                    "type": "string"
                },
                "auto_complete_table_sep": {
                    "default": "true",
                    "description": "Controls if a separator is automatically appended at the end of a table declaration.",
                    "type": "string"
                },
                "format_line": {
                    "default": "true",
                    "description": "Controls if a line is formatted at all.",
                    "type": "string"
                }
            },
            "scope": 4,
            "title": "config",
            "type": "object",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "default": {},
            "restricted": false
        },
        "Lua.window.progressBar": {
            "default": true,
            "markdownDescription": "Show progress bar in status bar.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.window.statusBar": {
            "default": true,
            "markdownDescription": "Show extension status in status bar.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.workspace.checkThirdParty": {
            "default": true,
            "markdownDescription": "Automatic detection and adaptation of third-party libraries, currently supported libraries are:\n\n* OpenResty\n* Cocos4.0\n* LÖVE\n* LÖVR\n* skynet\n* Jass\n",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.workspace.ignoreDir": {
            "default": [
                ".vscode"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Ignored files and directories (Use `.gitignore` grammar).",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [
                ".vscode"
            ],
            "restricted": false
        },
        "Lua.workspace.ignoreSubmodules": {
            "default": true,
            "markdownDescription": "Ignore submodules.",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.workspace.library": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "In addition to the current workspace, which directories will load files from. The files in these directories will be treated as externally provided code libraries, and some features (such as renaming fields) will not modify these files.",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "Lua.workspace.maxPreload": {
            "default": 5000,
            "markdownDescription": "Max preloaded files.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 5000,
            "restricted": false
        },
        "Lua.workspace.preloadFileSize": {
            "default": 500,
            "markdownDescription": "Skip files larger than this value (KB) when preloading.",
            "scope": 4,
            "type": "integer",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": 500,
            "restricted": false
        },
        "Lua.workspace.useGitIgnore": {
            "default": true,
            "markdownDescription": "Ignore files list in `.gitignore` .",
            "scope": 4,
            "type": "boolean",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "Lua.workspace.userThirdParty": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Add private third-party library configuration file paths here, please refer to the built-in [configuration file path](https://github.com/LuaLS/lua-language-server/tree/master/meta/3rd)",
            "scope": 4,
            "type": "array",
            "source": {
                "id": "sumneko.lua",
                "displayName": "Lua"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "evenBetterToml.taplo.bundled": {
            "description": "Use the bundled taplo language server. If set to `false`, the `taplo` executable must be found in PATH or must be set in `evenBetterToml.taplo.path`.",
            "type": "boolean",
            "scope": 4,
            "default": true,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "evenBetterToml.taplo.path": {
            "description": "An absolute path to the `taplo` executable. `evenBetterToml.taplo.bundled` needs to be set to `false` for this to have any effect.",
            "type": [
                "string",
                "null"
            ],
            "scope": 4,
            "default": null,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.taplo.environment": {
            "type": [
                "object"
            ],
            "scope": 4,
            "description": "Environment variables for Taplo.",
            "additionalProperties": {
                "type": "string"
            },
            "default": {},
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "evenBetterToml.taplo.extraArgs": {
            "type": [
                "array",
                "null"
            ],
            "scope": 4,
            "description": "Additional arguments for Taplo. Has no effect for the bundled LSP.",
            "items": {
                "type": "string"
            },
            "default": [],
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "evenBetterToml.taplo.configFile.path": {
            "description": "An absolute, or workspace relative path to the Taplo configuration file.",
            "type": "string",
            "default": null,
            "scope": 4,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.taplo.configFile.enabled": {
            "description": "Whether to enable the usage of a Taplo configuration file.",
            "type": "boolean",
            "scope": 4,
            "default": true,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "evenBetterToml.semanticTokens": {
            "description": "Enable semantic tokens for inline table and array keys.",
            "type": "boolean",
            "scope": 4,
            "default": false,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "evenBetterToml.schema.enabled": {
            "description": "Enable completion and validation based on JSON schemas.",
            "type": "boolean",
            "scope": 4,
            "default": true,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "evenBetterToml.schema.links": {
            "description": "Whether to show clickable links for keys in the editor.",
            "type": "boolean",
            "scope": 4,
            "default": false,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "evenBetterToml.schema.catalogs": {
            "description": "A list of URLs to schema catalogs where schemas and associations can be fetched from",
            "type": "array",
            "scope": 4,
            "items": {
                "type": "string"
            },
            "default": [
                "https://www.schemastore.org/api/json/catalog.json"
            ],
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": [
                "https://www.schemastore.org/api/json/catalog.json"
            ],
            "restricted": false
        },
        "evenBetterToml.schema.associations": {
            "description": "Document and schema associations.",
            "markdownDescription": "Additional document and schema associations. \n\n The key must be a regular expression, this pattern is used to associate schemas with absolute document URIs. Overlapping patterns result in undefined behaviour and either matching schema can be used. \n\n The value must be an absolute URI to the JSON schema, for supported values and more information [read here](https://taplo.tamasfe.dev/configuration#visual-studio-code).",
            "type": "object",
            "scope": 4,
            "default": {},
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "evenBetterToml.schema.cache.memoryExpiration": {
            "description": "The amount of seconds after which schemas will be invalidated from memory.",
            "markdownDescription": "The amount of seconds after which schemas will be invalidated from memory. \n**NOTE**: setting too low values will cause performance issues and validation of some schemas will fail.",
            "type": "integer",
            "scope": 4,
            "minimum": 0,
            "default": 60,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": 60,
            "restricted": false
        },
        "evenBetterToml.schema.cache.diskExpiration": {
            "description": "The amount of seconds after which cached catalogs and schemas expire and will be attempted to be fetched again.",
            "type": "integer",
            "scope": 4,
            "minimum": 0,
            "default": 600,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": 600,
            "restricted": false
        },
        "evenBetterToml.completion.maxKeys": {
            "description": "The maximum amount of keys in a dotted key to display during completion, 0 effectively disables key completions.",
            "type": "integer",
            "scope": 4,
            "minimum": 0,
            "default": 5,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "evenBetterToml.syntax.semanticTokens": {
            "description": "Whether to enable semantic tokens for tables and arrays.",
            "type": "boolean",
            "scope": 4,
            "default": true,
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "evenBetterToml.formatter.alignEntries": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Align entries vertically. Entries that have table headers, comments, or blank lines between them are not aligned.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.alignComments": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Align consecutive comments after entries and items vertically. This applies to comments that are after entries or array items",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.arrayTrailingComma": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Put trailing commas for multiline arrays.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.arrayAutoExpand": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Automatically expand arrays to multiple lines.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.inlineTableExpand": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Expand values inside in line tables.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.arrayAutoCollapse": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Automatically collapse arrays if they fit in one line.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.compactArrays": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Omit whitespace padding inside single-line arrays.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.compactInlineTables": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Omit whitespace padding inside inline tables.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.compactEntries": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Omit whitespace around `=`.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.columnWidth": {
            "scope": 4,
            "type": "number",
            "default": null,
            "description": "Target maximum column width after which arrays are expanded into new lines.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.indentTables": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Indent subtables if they come in order.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.indentEntries": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Indent entries under tables.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.indentString": {
            "scope": 4,
            "type": "string",
            "default": null,
            "description": "Indentation to use, should be tabs or spaces but technically could be anything.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.trailingNewline": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Add trailing newline to the source.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.reorderKeys": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Alphabetically reorder keys that are not separated by blank lines.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.reorderArrays": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Alphabetically reorder array values that are not separated by blank lines.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.allowedBlankLines": {
            "scope": 4,
            "type": "number",
            "default": null,
            "description": "The maximum amount of consecutive blank lines allowed.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.formatter.crlf": {
            "scope": 4,
            "type": "boolean",
            "default": null,
            "description": "Use CRLF line endings.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "evenBetterToml.rules": {
            "scope": 4,
            "type": "array",
            "default": [],
            "description": "Array of Taplo rules in JSON format, see https://taplo.tamasfe.dev/configuration/file.html#rules. The rules given here are appended to existing rules from config files, if any. There is no conversion done, all object keys must be snake_case, including formatting rules.",
            "source": {
                "id": "tamasfe.even-better-toml",
                "displayName": "Even Better TOML"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "lldb.consoleMode": {
            "description": "Controls whether the debug console input is by default treated as debugger commands or as expressions to evaluate.",
            "type": "string",
            "enum": [
                "commands",
                "evaluate",
                "split"
            ],
            "default": "commands",
            "enumDescriptions": [
                "Treat debug console input as debugger commands.  In order to evaluate an expression, prefix it with '?' (question mark).",
                "Treat debug console input as expressions.  In order to execute a debugger command, prefix it with '`' (backtick).",
                "(experimental) Use the debug console for warningevaluation of expressions, open a separate terminal for input of LLDB commands."
            ],
            "scope": 4,
            "order": 1,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": "commands",
            "restricted": false
        },
        "lldb.evaluationTimeout": {
            "description": "Timeout for expression evaluation, in seconds.",
            "type": "number",
            "default": 5,
            "scope": 4,
            "order": 2,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": 5,
            "restricted": false
        },
        "lldb.displayFormat": {
            "description": "Default format for displayed variable values.",
            "type": "string",
            "enum": [
                "auto",
                "hex",
                "decimal",
                "binary"
            ],
            "default": "auto",
            "scope": 4,
            "order": 3,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "lldb.dereferencePointers": {
            "description": "Whether to show summaries of the pointees instead of numeric values of the pointers themselves.",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "order": 4,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "lldb.showDisassembly": {
            "description": "When to show disassembly.",
            "type": "string",
            "enum": [
                "auto",
                "never",
                "always"
            ],
            "default": "auto",
            "enumDescriptions": [
                "Only when source is not available.",
                "Never show.",
                "Always show, even if source is available."
            ],
            "scope": 4,
            "order": 5,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": "auto",
            "restricted": false
        },
        "lldb.suppressMissingSourceFiles": {
            "description": "Suppress VSCode's messages about missing source files (when debug info refers to files not available on the local machine).",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "lldb.dbgconfig": {
            "description": "Common user-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.",
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": [
                        "string",
                        "number",
                        "array",
                        "boolean",
                        "null"
                    ]
                }
            },
            "default": {},
            "scope": 4,
            "order": 100,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "lldb.launch.initCommands": {
            "markdownDescription": "Commands executed *before* initCommands in individual launch configurations.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "order": 1,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": [],
            "restricted": false
        },
        "lldb.launch.preRunCommands": {
            "markdownDescription": "Commands executed *before* preRunCommands in individual launch configurations.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "order": 2,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": [],
            "restricted": false
        },
        "lldb.launch.postRunCommands": {
            "markdownDescription": "Commands executed *before* postRunCommands in individual launch configurations.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "order": 3,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": [],
            "restricted": false
        },
        "lldb.launch.exitCommands": {
            "markdownDescription": "Commands executed *after* exitCommands in individual launch configurations.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "order": 4,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": [],
            "restricted": false
        },
        "lldb.launch.env": {
            "description": "Additional environment variables merged with 'env' individual launch configurations.",
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            },
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": {},
            "restricted": false
        },
        "lldb.launch.cwd": {
            "description": "Default program working directory.",
            "type": "string",
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.launch.terminal": {
            "description": "Default terminal type.",
            "type": "string",
            "enum": [
                "integrated",
                "external",
                "console"
            ],
            "enumDescriptions": [
                "Use integrated terminal in VSCode.",
                "Use external terminal window.",
                "Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."
            ],
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.launch.stdio": {
            "description": "Default destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.",
            "type": [
                "null",
                "string",
                "array",
                "object"
            ],
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": null,
            "restricted": false
        },
        "lldb.launch.expressions": {
            "description": "The default evaluator type used for expressions.",
            "type": "string",
            "enum": [
                "simple",
                "python",
                "native"
            ],
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.launch.sourceMap": {
            "description": "Additional entries that will be merged with 'sourceMap's of individual launch configurations.",
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            },
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": {},
            "restricted": false
        },
        "lldb.launch.breakpointMode": {
            "scope": 4,
            "order": 10,
            "description": "Specifies how source breakpoints should be set.",
            "type": "string",
            "enum": [
                "path",
                "file"
            ],
            "enumDescriptions": [
                "Resolve locations using full source file path.",
                "Resolve locations using file name only."
            ],
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.launch.sourceLanguages": {
            "description": "A list of source languages to enable language-specific features for.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "scope": 4,
            "order": 20,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": [],
            "restricted": false
        },
        "lldb.launch.relativePathBase": {
            "description": "Default base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".",
            "type": "string",
            "scope": 4,
            "order": 100,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.launch.debugServer": {
            "description": "Debug server port.",
            "type": [
                "null",
                "integer"
            ],
            "defaultSnippets": [
                {
                    "label": "Port 4711",
                    "body": 4711
                }
            ],
            "scope": 4,
            "order": 999,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": null,
            "restricted": false
        },
        "lldb.verboseLogging": {
            "description": "Turns on verbose logging.",
            "type": "boolean",
            "default": false,
            "scope": 4,
            "order": 1,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "lldb.library": {
            "markdownDescription": "Which LLDB library to use.\n\nThis can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.",
            "type": "string",
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "default": "",
            "restricted": false
        },
        "lldb.cargo": {
            "markdownDescription": "Name of the command to invoke as Cargo.",
            "type": "string",
            "default": "cargo",
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": "cargo",
            "restricted": false
        },
        "lldb.adapterEnv": {
            "description": "Extra environment variables for the debug adapter.",
            "type": "object",
            "patternProperties": {
                ".*": {
                    "type": "string"
                }
            },
            "default": {},
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": {},
            "restricted": false
        },
        "lldb.reproducer": {
            "markdownDescription": "Enable capture of a [reproducer](https://lldb.llvm.org/design/reproducers.html).\nMay also contain a path of the directory to save the reproducer in.",
            "type": [
                "boolean",
                "string"
            ],
            "default": false,
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "lldb.terminalPromptClear": {
            "description": "A sequence of strings sent to the terminal in order to clear its command prompt.",
            "type": "array",
            "items": {
                "type": "string"
            },
            "default": null,
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": null,
            "restricted": false
        },
        "lldb.evaluateForHovers": {
            "description": "Enable value preview when cursor is hovering over a variable.",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "lldb.commandCompletions": {
            "description": "Enable command completions in debug console.",
            "type": "boolean",
            "default": true,
            "scope": 4,
            "order": 10,
            "source": {
                "id": "vadimcn.vscode-lldb",
                "displayName": "CodeLLDB"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "vim.textwidth": {
            "type": "number",
            "markdownDescription": "Width to word-wrap to when using `gq`.",
            "default": 80,
            "scope": 5,
            "minimum": 1,
            "source": {
                "id": "vscodevim.vim",
                "displayName": "Vim"
            },
            "defaultDefaultValue": 80,
            "restricted": false
        },
        "d.enableLinting": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "If code-d should watch for file saves and report static analysis. Might interfere with other lint plugins or settings.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableSDLLinting": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "If code-d should report errors in your dub.sdl file.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableDubLinting": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "If code-d should build on save to check for compile errors.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableStaticLinting": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "If code-d should use DScanner to statically lint files.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableAutoComplete": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Start dcd-server at startup and complete using dcd-client.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableFormatting": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "If the default formatting keybind should call dfmt on D files.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableDMDImportTiming": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Add code lenses on import statements executing a dmd instance trying to compile that import statement to get the impact on compilation time by this import.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.enableCoverageDecoration": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Automatically highlight tested/untested converage lines with light red/green backgrounds per line for *.lst files.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.enableGCProfilerDecorations": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Automatically embed code lenses for all GC allocations based on profilegc.log.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.neverUseDub": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "If this is true then a custom workspace where you manually provide the import paths will always be used instead of dub. See d.projectImportPaths for setting import paths then. This is discouraged as it will remove most features like packages, building & compiler linting. If this is a standalone project with no external dependencies with a custom build system then this should be true.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.projectImportPaths": {
            "type": "array",
            "scope": 4,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Setting for import paths in your workspace if not using dub. This will replace other paths. Its recommended to set this in your workspace settings instead of your user settings to keep it separate for each project.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "d.dubConfiguration": {
            "type": "string",
            "scope": 4,
            "description": "Sets the default configuration to use when starting up",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "default": "",
            "restricted": false
        },
        "d.dubArchType": {
            "type": "string",
            "scope": 4,
            "description": "Sets the default arch type to use when starting up",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "default": "",
            "restricted": false
        },
        "d.dubBuildType": {
            "type": "string",
            "scope": 4,
            "description": "Sets the default build type to use when starting up",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "default": "",
            "restricted": false
        },
        "d.dubCompiler": {
            "type": "string",
            "scope": 4,
            "description": "Sets the default compiler to use when starting up",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "default": "",
            "restricted": true
        },
        "d.overrideDfmtEditorconfig": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Uses dfmt config options & vscode editor config instead of .editorconfig because of inconsistencies with the vscode editor settings.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.argumentSnippets": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "When autocompleting functions automatically insert the signature as snippet which can be navigated using tab.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.scanAllFolders": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Initialize an instance for every dub.sdl and dub.json file in all folders.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "d.disabledRootGlobs": {
            "type": "array",
            "scope": 4,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Array of globs for disabling/preventing project instances by the d.scanAllFolders setting.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "d.extraRoots": {
            "type": "array",
            "scope": 4,
            "items": {
                "type": "string"
            },
            "default": [],
            "description": "Array of workspace-relative (or absolute) folders to force start a project instance in.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": [],
            "restricted": false
        },
        "d.alwaysShowDubStatusButtons": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Switch to always show dub Configuration/Arch Type/Build Type/Compiler buttons in dub projects and not just when a D file is open.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.alwaysShowCoverageStatus": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Switch to always show coverage status when available through lst files and not just when a D file is open.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.manyProjectsAction": {
            "type": "string",
            "scope": 4,
            "default": "ask",
            "enum": [
                "ask",
                "skip",
                "load"
            ],
            "enumDescriptions": [
                "Open a dialog box each time there are too many projects. (recommended for user-settings)",
                "Never load any more projects than the d.manyProjectsThreshold setting specified. (this or \"load\" recommended only per-project)",
                "Load all projects even if there are more than the d.manyProjectsThreshold setting specified. (this or \"skip\" recommended only per-project; never recommended for user-settings or large projects with many dub test projects)"
            ],
            "description": "What to do when there are too many project roots to load from. The deepest folder paths are skipped for skip.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "ask",
            "restricted": false
        },
        "d.manyProjectsThreshold": {
            "type": "number",
            "scope": 4,
            "default": 4,
            "minimum": 0,
            "description": "For how many projects to start triggering the manyProjectsAction to load or not load further projects.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": 4,
            "restricted": false
        },
        "d.lintOnFileOpen": {
            "type": "string",
            "scope": 4,
            "default": "project",
            "enum": [
                "always",
                "project",
                "never"
            ],
            "enumDescriptions": [
                "D-Scanner runs on every file that is opened immediately, also for any internal cross-project or external dependencies.",
                "D-Scanner runs on every file only in the current project that is opened immediately. It then only starts on other files when changing something.",
                "D-Scanner never runs when opening a file and only starts running when changing something."
            ],
            "description": "Enables dscanner linting when opening a new file.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "project",
            "restricted": false
        },
        "d.dietContextCompletion": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Enables parsing of //-context= in diet files to import local variables shared with the opened diet template.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "d.generateModuleNames": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Automatically insert/replace the module name definition in the current file when creating or renaming a file.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.alignSwitchStatements": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Align labels, cases, and defaults with their enclosing switch.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.braceStyle": {
            "type": "string",
            "scope": 4,
            "enum": [
                "allman",
                "otbs",
                "stroustrup"
            ],
            "enumDescriptions": [
                "Curly braces always on separate lines",
                "Curly braces on the same line as for example if or while statements. Else on same line as closing curly brace.",
                "Curly braces on the same line as for example if or while statements, but a new line after the closing curly brace, even if there is an else"
            ],
            "default": "allman",
            "description": "See Wikipedia https://en.wikipedia.org/wiki/Brace_style",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "allman",
            "restricted": false
        },
        "dfmt.outdentAttributes": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Not yet implemented (on dfmt side)",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.spaceAfterCast": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Insert space after the closing paren of a cast expression.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.splitOperatorAtLineEnd": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Place operators on the end of the previous line when splitting lines.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "dfmt.selectiveImportSpace": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Insert space after the module name and before the : for selective imports.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.compactLabeledStatements": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Place labels on the same line as the labeled switch, for, foreach, or while statement.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.templateConstraintStyle": {
            "type": "string",
            "scope": 4,
            "enum": [
                "conditional_newline_indent",
                "conditional_newline",
                "always_newline",
                "always_newline_indent"
            ],
            "enumDescriptions": [
                "newline only if constraint will wrap, indent constraint",
                "newline only if constraint will wrap",
                "always add newline",
                "always add newline and indent the constraint"
            ],
            "default": "conditional_newline_indent",
            "description": "Control the formatting of template constraints. See https://github.com/dlang-community/dfmt/issues/215",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": "conditional_newline_indent",
            "restricted": false
        },
        "dfmt.spaceBeforeFunctionParameters": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Insert space before the opening paren of a function parameter list.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "dfmt.singleTemplateConstraintIndent": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Set if the constraints are indented by a single tab instead of two. Has only an effect if the style set to `always_newline_indent` or `conditional_newline_indent`.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "dfmt.spaceBeforeAAColon": {
            "type": "boolean",
            "scope": 4,
            "default": false,
            "description": "Adds a space after an associative array key before the `:` like in older dfmt versions.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": false,
            "restricted": false
        },
        "dfmt.keepLineBreaks": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Keep existing line breaks if these don't violate other formatting rules.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dfmt.singleIndent": {
            "type": "boolean",
            "scope": 4,
            "default": true,
            "description": "Set if the code in parens is indented by a single tab instead of two.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "defaultDefaultValue": true,
            "restricted": false
        },
        "dscanner.ignoredKeys": {
            "type": "array",
            "scope": 4,
            "items": {
                "type": "string",
                "enum": [
                    "dscanner.bugs.backwards_slices",
                    "dscanner.bugs.if_else_same",
                    "dscanner.bugs.logic_operator_operands",
                    "dscanner.bugs.self_assignment",
                    "dscanner.confusing.argument_parameter_mismatch",
                    "dscanner.confusing.brexp",
                    "dscanner.confusing.builtin_property_names",
                    "dscanner.confusing.constructor_args",
                    "dscanner.confusing.function_attributes",
                    "dscanner.confusing.lambda_returns_lambda",
                    "dscanner.confusing.logical_precedence",
                    "dscanner.confusing.struct_constructor_default_args",
                    "dscanner.deprecated.delete_keyword",
                    "dscanner.deprecated.floating_point_operators",
                    "dscanner.if_statement",
                    "dscanner.performance.enum_array_literal",
                    "dscanner.style.allman",
                    "dscanner.style.alias_syntax",
                    "dscanner.style.doc_missing_params",
                    "dscanner.style.doc_missing_returns",
                    "dscanner.style.doc_non_existing_params",
                    "dscanner.style.explicitly_annotated_unittest",
                    "dscanner.style.has_public_example",
                    "dscanner.style.imports_sortedness",
                    "dscanner.style.long_line",
                    "dscanner.style.number_literals",
                    "dscanner.style.phobos_naming_convention",
                    "dscanner.style.undocumented_declaration",
                    "dscanner.suspicious.auto_ref_assignment",
                    "dscanner.suspicious.catch_em_all",
                    "dscanner.suspicious.comma_expression",
                    "dscanner.suspicious.incomplete_operator_overloading",
                    "dscanner.suspicious.incorrect_infinite_range",
                    "dscanner.suspicious.label_var_same_name",
                    "dscanner.suspicious.length_subtraction",
                    "dscanner.suspicious.local_imports",
                    "dscanner.suspicious.missing_return",
                    "dscanner.suspicious.object_const",
                    "dscanner.suspicious.redundant_attributes",
                    "dscanner.suspicious.redundant_parens",
                    "dscanner.suspicious.static_if_else",
                    "dscanner.suspicious.unmodified",
                    "dscanner.suspicious.unused_label",
                    "dscanner.suspicious.unused_parameter",
                    "dscanner.suspicious.unused_variable",
                    "dscanner.suspicious.useless_assert",
                    "dscanner.unnecessary.duplicate_attribute",
                    "dscanner.useless.final",
                    "dscanner.useless-initializer",
                    "dscanner.vcall_ctor",
                    "dscanner.syntax"
                ]
            },
            "description": "DScanner warnings to ignore in this project.",
            "source": {
                "id": "webfreak.code-d",
                "displayName": "D Programming Language (code-d)"
            },
            "default": [],
            "restricted": false
        },
        "workbench.editorLargeFileConfirmation": {
            "type": "number",
            "default": 1024,
            "minimum": 1,
            "scope": 4,
            "markdownDescription": "Controls the minimum size of a file in MB before asking for confirmation when opening in the editor. Note that this setting may not apply to all editor types and environments.",
            "defaultDefaultValue": 1024,
            "restricted": false
        }
    },
    "patternProperties": {
        "^(\\[([^\\]]+)\\])+$": {
            "type": "object",
            "description": "Configure editor settings to be overridden for a language.",
            "errorMessage": "This setting does not support per-language configuration.",
            "$ref": "vscode://schemas/settings/resourceLanguage"
        }
    },
    "additionalProperties": true,
    "allowTrailingCommas": true,
    "allowComments": true
}